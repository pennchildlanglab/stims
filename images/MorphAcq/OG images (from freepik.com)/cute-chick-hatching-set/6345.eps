%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Cute chick hatching set.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Виталий Викторович
%%CreationDate: 6/30/2020
%%BoundingBox: 0 0 3100 2000
%%HiResBoundingBox: 0 0 3100 2000
%%CropBox: 0 0 3100 2000
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: (CF 10178*)
%%CMYKCustomColor: 
%%RGBCustomColor: 1 0.7023 0.0100 (CF 10178*)
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Cute chick hatching set</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Cute chick hatching set. Chicken nest with egg, broken egg shell, baby bird. Vector illustration for farming, Easter, poultry concepts</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>egg</rdf:li>
               <rdf:li>hatch</rdf:li>
               <rdf:li>vector</rdf:li>
               <rdf:li>chicken</rdf:li>
               <rdf:li>chick</rdf:li>
               <rdf:li>easter</rdf:li>
               <rdf:li>cartoon</rdf:li>
               <rdf:li>flat</rdf:li>
               <rdf:li>cute</rdf:li>
               <rdf:li>farm</rdf:li>
               <rdf:li>baby</rdf:li>
               <rdf:li>bird</rdf:li>
               <rdf:li>doodle</rdf:li>
               <rdf:li>poultry</rdf:li>
               <rdf:li>birthday</rdf:li>
               <rdf:li>process</rdf:li>
               <rdf:li>character</rdf:li>
               <rdf:li>illustration</rdf:li>
               <rdf:li>kid</rdf:li>
               <rdf:li>white</rdf:li>
               <rdf:li>background</rdf:li>
               <rdf:li>set</rdf:li>
               <rdf:li>collection</rdf:li>
               <rdf:li>cracked</rdf:li>
               <rdf:li>eggshell</rdf:li>
               <rdf:li>shell</rdf:li>
               <rdf:li>happy</rdf:li>
               <rdf:li>smiling</rdf:li>
               <rdf:li>fluffy</rdf:li>
               <rdf:li>nest</rdf:li>
               <rdf:li>life</rdf:li>
               <rdf:li>born</rdf:li>
               <rdf:li>pet</rdf:li>
               <rdf:li>springtime</rdf:li>
               <rdf:li>incubator</rdf:li>
               <rdf:li>agriculture</rdf:li>
               <rdf:li>family</rdf:li>
               <rdf:li>rooster</rdf:li>
               <rdf:li>yellow</rdf:li>
               <rdf:li>little</rdf:li>
               <rdf:li>hen</rdf:li>
               <rdf:li>funny</rdf:li>
               <rdf:li>animal</rdf:li>
               <rdf:li>spring</rdf:li>
               <rdf:li>broken</rdf:li>
               <rdf:li>hatched</rdf:li>
               <rdf:li>newborn</rdf:li>
            </rdf:Bag>
         </dc:subject>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2020-06-30T21:58:20+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2020-06-30T21:58:21+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2020-06-30T21:58:21+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>168</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAqAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYqknmXzLHpMaxQoJr+UVii7KOnN/b9eYeq1QxihvIubpNIcps7RDCLnzn5sta3TXMXAMvJJF&#xA;QRAFgKGg5fLf6c1R12YG7dwNBgkKAZz5Y8y2uu2RlQCO5hPC5grXi3iPFTm40upGWN9XSavSnDKu&#xA;nROcyXFdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVUby+&#xA;s7KIS3c6QRM6Rq8jBQXkYKi1PdmNBglIDmmMSeTEZPzS0G313U9LuHD/AFOaCG3e3rIX9VP3nL9k&#xA;ek4IPxe1KjMCfaOOEjGR6gD8eTnQ7PySiJRHMfj5sfmvJL+4lvpa+pcMWof2VGyqK9gM1cpmZMj1&#xA;dxHGIARHIKbBSPiAI679Nt8CUH5c1RNG8w29zFIWs7g0lJNQYpjyr8l5Aj5Y6XL4eQHoy1WHxcRH&#xA;X9IZ55r8+6ZoTG1jU3mpEbWqGgX3kbt16dc2ms7Shh25y7v1un0XZk83qPph3/qee6l5x8y6kxM9&#xA;41vGSaQWxMSAeFR8R+k5zuftLNk60PLZ6LD2fhx8o2e87pT699G/rQXU0cw3DrIwavzBrmIM0wbB&#xA;NuXwRIogV7k3vvzLa58qtYz3jxeYbS4hks2AYesEdSvqFdvhJrQ/aoPHNzHtKUsBs+uJBHmBu6bL&#xA;2bGGcGI9Egb8k4/Lbznq13eW+mzubk3dxPPdPcPJJJDG9sksSxFj9kyCT2A2AzK7P10pkRO/FKXw&#xA;Apwdfo4wBkNuER+Jeo5u3TuxV2KpF5l846ToCKtwTNduKx2sdOZHi1dlGYWr10MHPeXc52j7PyZz&#xA;ttHvY/pv5u6VNdpb39pJZJIaLOG9VF95KKvH8cwsPbUJSqQ4ftc7P2HOMbjLi8uTPEdHRXRgyMAV&#xA;YGoIPQg5uQbdIRTeFDsVdirsVeQ+fPzG1W5vZtM0KU29nCxjlvIzR5WGzcH/AGVB/l6+NM5vtDtO&#xA;RkYQNAde96zszsmEYieUXI9O79rzuVb31DNIztJ1MnIlvvrXNNxEm3oBw1QZh5M/M7VtJuYrbU5n&#xA;vNLYhW9QlpIgf2kY7kD+U/Rmz0fac8ZqRuH3Oo7Q7Hx5YmUBwz+wvcIpY5YkliYPHIoZHU1BUioI&#xA;PvnUggiw8XIEGjzXYUOxV2KuxV2KuxV2KuxV4x+aqiDzFLcwTJJb3yRwXnFgxRkHpusnE8l9NZEI&#xA;H+W2c52vYnYO0h9sd/ueg7LowojeJ+yWzzu4nuoBIyqyyQxyxzSbKRxRIwy0FFpwLrQZosJqV/je&#xA;/wBbupiw9J0i6+tadBKSC9CkhHT1IyUen+yU5t8UuKIPeHXzFSIReWMWO61MPWZh1qQPwH8Mw806&#xA;sudghdBL4Q8sjTyOzOxJYk7kk1qT1zAkSTZc0gDYK+RYqcrxUaNipJUkoe69OnhioCTWsNvNLH9Z&#xA;kVDc1ECKtXKI0bK6+CclIqeu3XI5CenT9qJkEs3/AC3thB5p+vtOttZxgLLJIyxowlT6vbQCtAWd&#xA;l5oP7M3HYgkcnEdoxFfEnk6XtYjw+HnIm/l1e0Z1jzLsVQes6pBpemXF/NukCFgvdmOyqP8AWYgZ&#xA;TnzDHAyPRu0+E5ZiA6vFdT1MiWfUb8tNdShppmRSxCrSoUeCg7Ads5cRlklZ+ovWGUcUOEfTEKV/&#xA;Ytc2/IgpcKhKrXarDofHKcuNuxZKZt+UnmWS4t5tCun5SWg9S0J6mKtGT/YkinsfbNz2PquIeGen&#xA;L3Ol7b0gjIZB15+96Lm7dC7FXYql/mG6ktNB1C5iNJYreVo2HZgh4n6DlGqmY4pEcwC5GkgJ5YxP&#xA;IyDwK3hD1LfZG1M4UveyKr9Vj8T38O5r+GC2AkUo1C19J+QFAev9cmC5OOVvcvyrvprvyXZiUlmt&#xA;2kgDHeqo1V+5SB9Gdd2XMywC+mzxPbWMR1Mq60WW5sXVOxV2KuxV2KuxV2KuxV5F+Z/lybT7241S&#xA;GEz6fqJDTRqKlZwCCPmylinXdm78BnO9q6YxJl/BPn/RkOR9x5F33ZmoEgI/xR+0dzzu/Wa00tIp&#xA;S1zJGVR3WlZYxKiEEAfb4bfQa79ebFSnY2/sd9yCrYX17pNwLkScbc/aDElHTYJVUDEV7OF718Uz&#xA;Lw6kxAA+X4/H3tOTECmQ/MCFrl4J0W2AFOHxNJWnIOpoFZGANCP45lR1Bl02avBA5oPUtbsn9NxM&#xA;Fqwoj1QlSDuA/GuVZSJDbdzNPQO6pFfwxw+qXUQVq0hOwH+3mLTfMdVsevWk0qw2ytNMwBCAqpFf&#xA;5gTyH3YCKFlp4wteWa7B9VkhhQmsbhyGYfssaK1K0qOND0rvlZyVyTZpZFp4kuJL65lWWBVHKYEM&#xA;DFHy/d7gcQW+JzSm9O2QM9qH4P45MaTzytb+YtR1i0tLOBZ1t7u2vLz1ARGHir+8YgrxVQWCjeta&#xA;UPE5tuy+OZEYi4ifEe7y/S67tDggDKRomPCP0vfc7J5N2KsD/Na/KW+l6fSqXU5klG1OMQAAYHsS&#xA;+aXtnJQjHvP3O97ExWZz7hXz/seNecIPMd1d2q6fzs0LEtdRyMJkCo5KBUZVKuATQVJpv2GQ0WXH&#xA;CJvmz12HJkkK+lk2nxP+irVbmWSWVI42lmfkjs6gEswrXcjcZrs8rmT5uywR4YAeSl5P1BrDzhp8&#xA;6nirzrE/+rN+7P8AxKuVaDJwZonz+9v7QxceCQ8r+W76Azs3hnYq7FVC/tEvLG5tH2S4ieJj7OpX&#xA;+OQyw44mPeKbMWTgmJDobfNusXjaJLIt1KIJIpZLaaEq8n7xVPE1Gy9PpzjsWmB4oy+qL2WfUn0y&#xA;j9MgmNpeW91HzhkSQd+Dq4606qSCNtsxs2GWOVFuxZo5I2ENqvxQPVSONPiNKGu+2VhysR3ev/lJ&#xA;A8Xkq2duk8s0i/IOU/Wmdf2TGsA8yXkO3Jg6k+QDMs2TqHYq7FXYq7FXYq7FXYqlnmXQxrmjy6Y1&#xA;w1skzRl5UALARyK9BXofh65TqMIywMCdi3YM3hzEgOTxXzn5ds/L+sNpz3Je3nDSxu4VQTL8JDsN&#xA;lcNRmoApJVtiaHj+09CcExw7xPL4dPx0en0GsGaO+xHP9bFi8cgZ7qYLDIRE07gnm7D7IUGrMVat&#xA;Y2p40AAzAET0/H483OsIj9HaXasUmmjASjRRXDLIwUjogAV1qeu7V64DOR3F/D8fqSAENG0VsGa1&#xA;ZhyarMLV5FI8PgRSfpxNy+r/AHSjbl9zhBPeXA5wQ+mCCJmg9LetfsyEjt3THiERzPzv8fNNWjp7&#xA;xbdPTv5YmikJCTKfsEbDYKitTbatT2FNshGPFyBU7NRyXEknpXkDXMasf9KICJxIbiyj7Lrxb7PM&#xA;7dq1wmhyNKFPULi5iu41HNmLIbZUqgclvhBO9BXYr9o0pxoDWWHFxGhzP4/H3oyTAFnkHpXki81H&#xA;QLGcSRRGW8l9eVCDVPhChAQ3TatN6V79T23ZmkODFwnmd3ke0NUM2SxyGzMLTzpC7BbqAxg7GRDy&#xA;A+YIBzYOCyQEEVHQ9MVecfnBbzD9F3ij92hkjLeDHiy/fxOaDtyJ9Eve9H2BMeuPuYX9atZo45Xb&#xA;i8Lc6Dcg0Kmgoa7Mc1UMoIdtPEQVK/1GMRPGh3NQzbUp7U8cryZOgbcWI3ZQflu2lvfMmnQxglpL&#xA;mKtOyhwWO3gorktLAyyRA7wjVzEcUie4vozO2eCdirsVdirwf8+dIt7vzXpFlZBzdXsb3OoRoCeM&#xA;UVFE21f2Ff8A4HNJ2hijCZmPqI3+DvezsspwEDyB2+PRAWtvb29ukNuoSFBRFHQDOanMyNnm9FGA&#xA;iKCGuoru+uobC1jLzTSLEi7UdnpSnXoetcligZSAHMtokIAylyDN/wAs/wAw/LmjaRfeXdf1S2tL&#xA;7RL26gDu9EliMzOHjbo3xMwoN9hnYaWcccOAn6XjNZCWXJ4gH1bso0783vy91LWYNHsNU+sXty3p&#xA;whYZwjOei8ygX6emXx1ECaBcWWmmBZDMcvaHYq7FXYq7FXYq7FXYqxbzh5Fs9fgnDFRJKpqJK8Q3&#xA;HiGBFCpp9+VZsUckeGQttxZZY5cUS8a/QustFcT6ZbyapHaMIlngjIiVaV5qB6zF3+0v2hTizUrn&#xA;Hns6U5Hw7lCJq+8+W/J6ka2MQPE9MpdEHNoXmdZjCeQkKNITPEzAlRypztiAS3aqj8Rlg7IycXCR&#xA;Xn0+47sD2ni4bB+HX7wlLXmtSs0Msq2axnjPxN0jinXh8UoB8BTMCeCMDRG/nX6QHOjk4hYO3496&#xA;us+lrGRPPcsxpxdp7iUEde6r+GVmE72A+UWQkPxaLl025haKW2g1GeWX7MZjPxUO5qw5jt0zJ/I6&#xA;ivVDn5foDR+cw9JDbzT3TfJPnfURAp0+a1jkf4Llt2SOhZlkadkm412FKfdmZi7FySIsVE87r7g4&#xA;mXtXHEGjZ/HVlmnflXqNpcQSFucduGKwMY/TDkijLSrCnYEn55vNN2ViwzExZl5un1HaeTLExOw8&#xA;mRReTdSY/vJIox8yx/AfxzZuuTWx8o2MDrJcObhl3CkcU+kb1+/FU+xVLvMGiWutaVNp9x8IkFY5&#xA;AKlHH2WHy/VlGp08csDEuRpdTLDMTi8M8weX9b0G5MN/b/AT+6uUqYnH+S38DvnI6jRzxGpDbv6P&#xA;Z6bW48wuJ37uqTqJ7hwiKXc9EUEn7hlEIGRoCy5E5iIuRoM38lWM+iXX6SmiR7sqVjjep9NW6moP&#xA;2iNvlnSdm9nnH65/V9zy/anaQy+iH09T3/ses6RqJ1CzFwYjESSpU7g07qe4zcOkRmKtNy4nhTlQ&#xA;8a9K9q4q8S1H80/O2iyTfWdd8sahIrNxtLcXszlgaemhhj4g1FBzb5nNfLUTjzMT83ZR00JchMfJ&#xA;j+meZfP8Pmi484eY9CvIYNQthbJdQ20vC2gBBCqjBmVWIqSTXuOuDHkkJcUxzTkxxMOCEhYZLbeX&#xA;YNcsItW0lZvqd0C0ciRPwPFirfCQpHxAjMfN2Tiy+qB4b+XycnD2xlxemY4q+fzUbn8uXmMdZr63&#xA;lBqz21YmcUpxrxYgfI5bp+yoY97Jk1anteeXagI9ykfyb0Z4UW0sLu2uYyGjvYWl9VWG4arVXt4Z&#xA;lnSQrZwhrMl77sk8keT/AMzNJ1+3lvdZS70JOXrRXUSG4YFCFCuAzggnrzHyxhinGXOwjJlhKP01&#xA;J6hmS4zsVdirsVdirsVdirsVaZVZSrAMrChB3BBxVDaZpWnaXZpZafbpbWsdeMUYoN+p98hDHGAq&#xA;IoM5zlI3I2VaW2t5v72JJP8AXUN+vJsEBd+V/Ll3T61ptvNx3UPGpA+W2RlCMuYtlGco8jSiPJnl&#xA;QBFGk2wWOQSoojUASLUBqDuK5HwYVVBl407uymsNrbQCkMSRj/IUL+rLGtUxV2KuxV2KuxV2KrZI&#xA;45EKSKHQ9VYAg/QcVQX6A0WpIs4lr14qFH3CmAADkkyJ5r49G0qM8ktY69iVB/XXChGAACg2AxV2&#xA;KuxVJ9M8neVdLu3vNP0m1truRizXCRLzBbrxYiqj2XbK44og2A2SyykKJKcZY1uxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KpNea8LbUHWnrWiRqCIRyk+sPJxCDcD&#xA;7O9M0Op7YGLOR9eIRH07y4zKhHnXLeubn4tHx4weUr68uEDn805zfOA7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWg6MSoYEr9oA7j54LTTeFDsVdirsVdirsVdiryb83fzZh&#xA;8ox2sksBntrlpUiXlIiu0KchGGjinrLKdo1YKp7sucdlnPtLLOEZ8GOHL+l5n8bOyiBhiCRcilvm&#xA;v8zbPy1rmj6bLaSPPqgja3/vFkYyTxw+nAqRyK8qCTm6u6UUdSTTNNoOzpZYTyxmInH+OfT3uTlz&#xA;CJESL4nrejX7XduRIayxEBj4g9DnXdhdonU4iJ/XDn59xddqsIhLbkUwzeOK7FXYq7FXYq7FXYq5&#xA;mCgsxoo3JPQDASALKpNq9xa3SRRI5DRzRyeqtfh4Gpp4kjbOc7T12DKIwB3jOMrHSjv79tnP00JQ&#xA;JJHOJFe9NYbiGdeUTBgOviPoze4NTjzC4G3DnAx5qmXsHYq7FXYq7FXYq7FXYq7FXYq8s87+dbq9&#xA;vJtO0+cw6fATHNLGaNM42b4h+wOm3XOX7S7SlKRhA1Efb+x6ns3s6MIicxcz9n7WFpcm2kE9pM8N&#xA;yh5JLGxDV+eaiE5RNg0XcyhxCpCw9b/L/wA3vr1i8F3QajageqenqIdg9PGux/tzrOzdb40al9Uf&#xA;t83ku1NB4Erj9Evs8mWZs3VOxV2KuxVIPMHma40m/ggW2E8c0ZcEsVJIJBAND7ds0Pa3bE9JkiBD&#xA;ijIe5y9PphkB3orrHzbpl8phq1tdsp4RTfDyJG3FunXHT9vYM4Mb4MhGwl+g8lnpJw35hj9RNByS&#xA;lWFULCtG6gkbdDnn3I7u4DCvIOt+ZdW1TVodYt/q/wCi5vRqzchKzVo8a8RwAXwPembPX4cWOETA&#xA;3xC/d727JMcuHhrr3s+s/MNlpc03rcnkKALEm5LE7D2y3sbtGGklKc7NigB1Lr9ThOQABAah531i&#xA;cKIGS19Y8beGNfUlcluNKkH8Bl2f2h1WbbHUL5ACz8z+ikQ0WOIuW7NtFS9TS7YXzFrspymLbkFj&#xA;Whp4VpnbaGOSOGIyG51u6vKQZHh5I3MtrdirsVdirsVSDzTdss2nWI2S6kd5PcQJyC/8GVP0Zz/t&#xA;BnMYRgP4jv8ABzNJGyT3IC5E5t5RblVuCjeiz1Kh6fCWp2r1zlxV7ucwv8vZPzUstF1WbzVIiaio&#xA;UaeiNFcMTHCBK5MSIvGWUclQgla08M22XU48eWMtNttR/Ba8GPiNZeVvTvLR1xtJil1pl+vS/G0a&#xA;qF9NSBxRqdW7n507Z1Wl8TgHifU4Wr8PjPh/SmmZDjOxV2KuxV2KuxV2KuxVAeYJ7mDRL6W2BNws&#xA;L+jx2Iciin6Ca5RqZGOORjzpyNLESyxEuVvIrXyTeOtu80wRHo1xEQQ6+w6iv6s4GeoxwkQTvH8V&#xA;/a9fPXjeh7kp0WXyzrmuXmmWTXKXNszfWLdl4m3Cmnx8weQJ6bj/AGXXMjPWOAnIbS7jt8Odsfzh&#xA;AqwZD3/j9bO9C0a20nzBZXVgzJ6h9CeAkt6iuApapO3E0Y9tu2Xdi63jzgAUfvH6/v8AJ1+rzHJi&#xA;lGXvB7q/FPR87d5p2KuxV2KpT5n0Q6vpT20fBbgFXgkcdCGBI5AFl5AUqM13amh/M4TAVxdCW7Bl&#xA;4JX0eXJMLn01CEXFArLyqdvhFQRWvjnl04kmiN/1O/jun8Vi9rDyW5aNvtS1o6EnqaHf7jkpS70V&#xA;Z2XC0dZCWmWN5j8ZhjWNnoO7EucTPkF3I9yX6lYraSLcRgmMmpqxJDdaljU74COvcyHJNPK3lu+v&#xA;tRh1LUInSyVVng5MnxyclaP4fibjTft2zqOxOxsksozZh6fqjvzPTbuddqtUK4Ynd6FncuqdirsV&#xA;U57m3t4/UuJUhjrTm7BRU9qnKs2eGIcU5CI7yaZwxykaiLK9WVlDKQVIqCNwQcsBBFjkxIpD3d/D&#xA;bCh+KTsg/j4Zga3tHHgFHeXd+OTbiwmfuYr5ka/v44Li3C/WrKT1YE6BgRR0J/ylzkNfrsmoomvT&#xA;ydhixCCBtPM+lzH07h/qdwu0kM/wEH/WO2YIyjrs2mKc6PLDfXa/Vm9aKM8pJo/ijFNwOY2JPgM2&#xA;vZWmObKCPpibJaM8+GPmWUZ3Dq3Yq7FXYq7FXYq7FXYq7FVlxLBFC73DokIB9RpCAoHepO1MjIgC&#xA;zyZRBJoc2C3kf1S9lhsgJ7TkTFGWAkUA/FxJ2Zanap2zzDtGEPHn4Y9AP9vwvk73EZGIMuaT2Wj2&#xA;ljq97qlpZPDe6pwFyZHiVHaMHiTwLtUAtlByzyREOYjdfpbjKxy+LKvLSQpePLeFWuONYpDssYHV&#xA;Vr4g7nN77M5sccsoyHqI2Pu5j8dzga0S4dmV53bqXYq7FXYq7FWIeb54f07ptsLblJwllkugSOAI&#xA;oiEDY8uJO/8ALt3zlfaeMTjBr1Dr7/7PsdpoImib2Qc0Mc0ZjkFVPUdOm+cPKIIouxjIxNhRFunr&#xA;M7tzIbmg/l2p9PTJx0syQaPqOzI5dqCS6t5h0W5065iEnqSLTjHQgMysOO+1VJG9O2bTBouCfETG&#xA;QH47u9uhpJ2LGxZ95Huri78r2VxcEmWT1SSSTt6rgbkk9M7/ALPmZ4YyPM395ef7RxiGeURyFfcE&#xA;9zMcJ2KuxVQvbSK8tZLeQCjggMQDxNNmFe4zH1emjnxmEuo+Xn7w2YsphISHRJWa50qEWazUhiX4&#xA;XIA+E719s5PPlzaIeCJ+iI2NDk7ACOY8dblIbvXDyItxzPeRv6Zymp7V3PBue8uzxaT+chbfVLlL&#xA;lXnYsh2Zemx70GYmHXzE7mbDdPTxMainC/U7tBIFSZegYqD06jfN9CcZixyddKJiaKe6CAscqgUU&#xA;FaAdO+dV7P8A0z94dfrOYTTOicN2KuxV2KuxV2KuxV2KpR5t8y2flny7e65eI8sFmqkxx05Mzusa&#xA;KK+LOMhkmIxss8eMzkAGPedtRtdb8hQ6pYOXsbh4Zg5UqfTY8dwwBHxEZrO1jxaexysO07IHDqKP&#xA;Oi87F7fC5iuRcSevDX03JrTlWooaihruM5QGjb0/hxoxrYqV/e6pc8GnuGlER5J0Wh8dqZDHAQ+n&#xA;ZljxwjyCDu9Uv5hIZbqRnm61Ynk3QfD33y2MbldbsvChEbAbPY/OPn6z8s6t5f02a2eZ9duxbCUE&#xA;KkSVVGcnepDyp8NOld/HucmURIHe8HiwmYJ7mVZc0uxV2KuxVhn5mW97FpsGrWMjRT2T8JWQ0rFK&#xA;R9rxHNV2OajteEuATj05+4u47HlAzOOYsS+8fst51e+bdVuUiCsIGj3do/2z7g129v7M5iJjHeAE&#xA;Sef47vJ6LHoYRu9/egBq2oiWeX129S5UrOdviBFKU6Cg6U6ZIZpWTfNv/LwoCvp5II/EwUVJrWgN&#xA;PlkA2l9C6BYHT9EsbNhR4IUWT/X4/F/w1c7jTY+DHGPcHgNVl8TLKXeUfl7Q7FXYq7FUo8xaJcan&#xA;DGIJxE0daow+F6+JG4p9OaHt3sY62AEZcJj8j7+rm6PV+CTYu2H3flnzDbSNyMTIQOLAsFoN+P2T&#xA;ufHOG1Xs9lwmpcu/oXbY9fGXJfb6DK/7y9mPJjVoY6AADYDnQHp1yvF2bAVxblZamXIck6ggACww&#xA;pQAcURR0A8AM2mPGZERiLLiylW5ZDp9qbaDi322PJv6Z2/ZujODHR+o7l1mbJxyRObBpdirsVdir&#xA;sVdirsVdirBfzxjaT8rNcVRUgW7fQt1Ex/AZj6r+7Lk6T+8H46MQ0j8yba48iab5d0Xy1qeuzpp0&#xA;FrctDEY7dZVhVXPrUf7L714098xpTE8XBRNinJjjMMvHxCNG2HRL5q0N3j806fLZNcv6tm70ZOBA&#xA;HpqyBlqlNxXlvuM5/W6Q462rb8F6LQZ/G4qN7tXOv2/A8amvahA+knMEQdoMRCE02w87ya1beY9P&#xA;sYp4LN0e2s7hyiSlDzV6co+VG3DVH0iub/RaSXAJcPW93nu0dZEZJR4uY4dt0885eedU8w6x5Sj1&#xA;jQp9JuLDVIWeXlzgcPInII9AK/BWm+bDLMyMbFbuqxQEYyIN7PfNK1i11JHMIZWjpzRhuK9NxUds&#xA;2DrUdirsVdiqleWkF5azWtwvOCdDHIvirChyE4CUTE8izxzMJCQ5h4P5l8vXmham9pOCYiS1vPTa&#xA;ROxHv4jtnF6vSywz4Ty6eb3Wj1cc8OIc+o7kpNdqfTmM5SdeUbOJ9WhurpGltLZxI6inxMN1X7+v&#xA;tmz7M0hy5BIj0xdV2rrBixmIPqk9bTznppNGilX3opH/ABLOteNTOx1awvqi2lDMBVkIIYD5HFUX&#xA;irsVcSACSaAbknpTFUluPNukxMVQvMR3RdvvYrirzn8xPOXm/WdHvdF0fQJ4Yp2CNqIvLdHaJHDN&#xA;wQEsPUVab9j0zFz8cgYiP3OXgGOJEjL7Ck+r+e9Zi0rT5ItHvNEh0Ga3luTNOlwt5axsElikkIVm&#xA;c7EHvv7Zg5NJiIs4wOH7W+B3ri4uL7HpVr+Z35d8Upq9pamQBlEkka1B7mhI+/M/GMOMenhj7qcM&#xA;48kuYLLsyWl2KuxV2KuxV2KuxV2KuxVi/wCZflbUPNPk+80OwmjguLl4TzmLCPjHMsjA8Qx6Ltt1&#xA;yrPjM40G7BkEJ2WTRRRxRJFEoSONQqINgFUUAGWtKnd2dne27W95BHcW7/bhlUOhpvurAjBKIIo7&#xA;soyMTYNFIz+XnkwSCWLSbeCUGoeKNVIPtQZUNPjBsRj8g2y1WUijORHvKHu/y60a4vBcGaeNQB8C&#xA;Mv2h0YMQaZj5tDHJPjJI9zkYO0JY8fAAD7/uQ/mn8s9N1qwtbaGdrWa2u4LoTNWSoib4loCvVSd/&#xA;HMnJj4gA4uLJwEmujLre2t7eP04I1iT+VQBlrUqYq7FXYq7FUHqmkabqtqba/gWeE7gNsVPirChU&#xA;/LKs2CGQVIWG7DnnilxQNFi0n5T+XC3KOW4Xf7LMrL+CqfxzXjsfBfX5uxPbeeq2+SLi8hW8KLHD&#xA;c+nGv7IjH/NWbLHjjAVEUHV5Mkpy4pGyrp5KtQf3ly7DwVQv6+WTYJrp2i2GnktAh9QihkY1anh4&#xA;YqjsVdiriAQQRUHYg9KYqk1x5T0iZiyq8JP++22+5g2KoU+SrSu1zIB7hTiqT6p+TnlbV75LvVGm&#xA;uTGgRYuZSPYk14qaE75VPDGRstsM8oiggpPyI8oxXUV1pNxd6XLG6u6RSLJE/E1IaORWG/t92VnS&#xA;xuxs2jVyqju9IzJcV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV//9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:8ECF48A703BBEA11B497B0D6C2CC4BDD</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:8ECF48A703BBEA11B497B0D6C2CC4BDD</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:85a140a4-6c10-b747-bda7-175acdfbae5c</stRef:instanceID>
            <stRef:documentID>xmp.did:102564495E9CEA118AD4809FAF8EEF1B</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7fd40bf3-a1ad-8b4c-afd1-f95ef96d470b</stEvt:instanceID>
                  <stEvt:when>2020-05-16T01:17+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:03d5b1cc-63d9-954a-8e07-eeda5acfb4fb</stEvt:instanceID>
                  <stEvt:when>2020-05-18T12:18:02+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:102564495E9CEA118AD4809FAF8EEF1B</stEvt:instanceID>
                  <stEvt:when>2020-05-22T22:42:11+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:85a140a4-6c10-b747-bda7-175acdfbae5c</stEvt:instanceID>
                  <stEvt:when>2020-06-01T23:04:57+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8ECF48A703BBEA11B497B0D6C2CC4BDD</stEvt:instanceID>
                  <stEvt:when>2020-06-30T21:58:21+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>3100.000000</stDim:w>
            <stDim:h>2000.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
               <rdf:li>CF 10178*</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CF 10178*</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>2</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=211 B=14</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>211</xmpG:green>
                           <xmpG:blue>14</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -2000 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 2000 li
3100 2000 li
3100 0 li
cp
clp
3100 2000 mo
0 2000 li
0 0 li
3100 0 li
3100 2000 li
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
1902.57 1649.83 mo
1902.57 1626.29 1817.77 1607.22 1713.16 1607.22 cv
1608.56 1607.22 1523.76 1626.29 1523.76 1649.83 cv
1523.76 1673.36 1608.56 1692.44 1713.16 1692.44 cv
1817.77 1692.44 1902.57 1673.36 1902.57 1649.83 cv
cp
.760784 .760784 .760784 rgb
f
1656.33 1534.38 mo
1656.33 1534.38 1417.47 1485.55 1412.92 1470.82 cv
1410.36 1462.44 1398.85 1451.15 1399.06 1442.39 cv
1399.11 1440.78 1399.22 1439.17 1399.36 1437.58 cv
1399.36 1437.55 li
1401.82 1413.73 1417.14 1394.03 1417.14 1394.03 cv
1430.52 1406.04 li
1432.52 1407.86 li
1433.52 1404.78 li
1440.73 1381.73 li
1461.79 1388.9 li
1476.81 1335.55 li
1514.53 1365.9 li
1529.4 1357.57 li
1535.1 1362.9 li
1563.77 1336.71 li
1586.38 1357.3 li
1600.83 1370.43 li
1614.66 1350.96 li
1636.79 1319.84 li
1662.89 1341.89 li
1662.9 1341.92 li
1681.57 1372.08 li
1699.37 1330.64 li
1699.37 1330.64 1724.15 1347.6 1733.43 1346.74 cv
1733.43 1346.74 1750.29 1373.26 1755.37 1382.96 cv
1757.02 1386.06 1760.34 1397.87 1760.34 1397.87 cv
1761.92 1402.73 1763.07 1407.7 1763.71 1412.74 cv
1751.19 1433.21 li
1711.46 1475.58 li
1667.75 1522.21 li
1656.33 1534.38 li
cp
.698039 .403922 .160784 rgb
f
1513.62 1312.72 mo
1513.62 1312.72 1440.9 1225.47 1304.52 1204.53 cv
1304.52 1204.53 1299.97 1229.74 1310.05 1250.67 cv
1320.13 1271.61 1346.5 1275.49 1346.5 1275.49 cv
1346.5 1275.49 1327.11 1277.04 1335.64 1298.76 cv
1344.17 1320.47 1368.99 1317.66 1368.99 1317.66 cv
1368.99 1317.66 1350.38 1337.53 1367.44 1347.62 cv
1384.5 1357.7 1405.44 1350.72 1405.44 1350.72 cv
1405.44 1350.72 1398.46 1377.08 1434.91 1388.72 cv
1471.36 1400.35 1493.85 1405.2 1493.85 1405.2 cv
1513.62 1312.72 li
cp
.870588 .721569 .0470588 rgb
f
1493.85 1405.2 mo
1513.62 1312.72 li
1513.62 1312.72 1500.74 1297.26 1475.64 1277.79 cv
1457.9 1300.97 1429.34 1340.71 1415 1373.78 cv
1414.57 1374.75 1414.16 1375.75 1413.76 1376.76 cv
1418.27 1381.28 1424.97 1385.55 1434.91 1388.72 cv
1471.36 1400.35 1493.85 1405.2 1493.85 1405.2 cv
cp
.929412 .682353 .2 rgb
f
1645.71 1288.74 mo
1645.71 1288.74 1718.42 1201.49 1854.81 1180.56 cv
1854.81 1180.56 1859.36 1205.76 1849.28 1226.7 cv
1839.2 1247.64 1812.83 1251.51 1812.83 1251.51 cv
1812.83 1251.51 1832.22 1253.07 1823.69 1274.78 cv
1815.16 1296.49 1790.34 1293.69 1790.34 1293.69 cv
1790.34 1293.69 1808.95 1313.56 1791.89 1323.64 cv
1774.83 1333.72 1753.89 1326.74 1753.89 1326.74 cv
1753.89 1326.74 1760.87 1353.11 1724.42 1364.74 cv
1687.97 1376.38 1665.48 1381.22 1665.48 1381.22 cv
1645.71 1288.74 li
cp
.870588 .721569 .0470588 rgb
f
1640.81 1265.86 mo
1665.48 1381.22 li
1665.48 1381.22 1687.97 1376.38 1724.42 1364.74 cv
1727.26 1363.83 1729.84 1362.84 1732.18 1361.77 cv
1680.7 1270.88 1640.81 1265.86 1640.81 1265.86 cv
cp
.929412 .682353 .2 rgb
f
1409.9 1346 mo
1377.76 1353.08 1348.1 1350.99 1377.65 1313.34 cv
1373.95 1313.06 1351.78 1318.73 1340.96 1301.59 cv
1337.27 1295.53 1334.25 1285.7 1340.15 1281.24 cv
1344.55 1277.64 1349.95 1278.45 1366.27 1275.66 cv
1360.09 1272.14 1297.24 1280.03 1304.52 1204.53 cv
1297.92 1235.98 1306.19 1264.73 1336.8 1275.86 cv
1322.52 1285.54 1331.89 1317.92 1361.67 1321.2 cv
1344.31 1348.35 1374.99 1361.02 1401.65 1355.15 cv
1401.11 1387.01 1443.55 1396.79 1493.85 1405.2 cv
1374.52 1371.3 1416.22 1355.5 1409.9 1346 cv
cp
.74902 .619608 .0431373 rgb
f
1854.81 1180.56 mo
1861.2 1246.86 1816.63 1246.85 1793.06 1251.68 cv
1803.17 1254.79 1820.51 1251.43 1822.39 1262.84 cv
1826.9 1295.55 1782.05 1289.17 1781.68 1289.37 cv
1783.93 1292.73 1806.39 1312.36 1788.4 1321.35 cv
1771.53 1330.47 1750.45 1322.08 1749.43 1322.02 cv
1740.39 1346.63 1779.7 1348.78 1665.48 1381.22 cv
1704.64 1374.67 1758.27 1366.23 1757.67 1331.18 cv
1784.98 1337.19 1814.81 1324.04 1797.66 1297.22 cv
1828.38 1293.84 1836.06 1261.06 1822.53 1251.88 cv
1853.46 1240.64 1861.15 1210.79 1854.81 1180.56 cv
cp
f
1688.5 1139.78 mo
1688.5 1139.78 1667.12 1062.23 1575.44 1062.23 cv
1483.76 1062.23 1444.21 1156.06 1450.42 1213.45 cv
1456.62 1270.84 1503.92 1303.1 1578.98 1298.44 cv
1654.04 1293.79 1735.03 1246.02 1688.5 1139.78 cv
1 .861961 .243922 rgb
f
1498.5 1272 mo
1498.5 1272 1451.97 1326.68 1433.36 1368.55 cv
1414.74 1410.43 1426.53 1484.88 1426.53 1484.88 cv
1663.68 1538.39 li
1728.83 1512.8 li
1728.83 1512.8 1746.28 1456.96 1723.01 1386 cv
1699.75 1315.04 1648.56 1272 1648.56 1272 cv
1498.5 1272 li
cp
f
1552.01 1139.39 mo
1552.01 1152.24 1541.59 1162.65 1528.74 1162.65 cv
1515.9 1162.65 1505.48 1152.24 1505.48 1139.39 cv
1505.48 1126.54 1515.9 1116.12 1528.74 1116.12 cv
1541.59 1116.12 1552.01 1126.54 1552.01 1139.39 cv
cp
0 0 0 rgb
f
1537.28 1132.02 mo
1537.28 1136.3 1533.28 1139.78 1528.36 1139.78 cv
1523.43 1139.78 1519.44 1136.3 1519.44 1132.02 cv
1519.44 1127.74 1523.43 1124.26 1528.36 1124.26 cv
1533.28 1124.26 1537.28 1127.74 1537.28 1132.02 cv
cp
1 1 1 rgb
f
1638.56 1139.39 mo
1638.56 1152.24 1628.14 1162.65 1615.29 1162.65 cv
1602.44 1162.65 1592.03 1152.24 1592.03 1139.39 cv
1592.03 1126.54 1602.44 1116.12 1615.29 1116.12 cv
1628.14 1116.12 1638.56 1126.54 1638.56 1139.39 cv
cp
0 0 0 rgb
f
1623.82 1132.02 mo
1623.82 1136.3 1619.83 1139.78 1614.91 1139.78 cv
1609.98 1139.78 1605.99 1136.3 1605.99 1132.02 cv
1605.99 1127.74 1609.98 1124.26 1614.91 1124.26 cv
1619.83 1124.26 1623.82 1127.74 1623.82 1132.02 cv
cp
1 1 1 rgb
f
1546.19 1199.3 mo
1546.19 1199.3 1568.15 1252.95 1572.37 1257.17 cv
1576.58 1261.39 1592.03 1263.86 1592.03 1263.86 cv
1589.23 1236.23 li
1605.99 1206.28 li
1546.19 1199.3 li
.176471 .101961 .0705882 rgb
f
1616.57 1209.47 mo
1616.57 1209.47 1617.73 1189.41 1593.31 1180.97 cv
1568.88 1172.54 1546.19 1199.3 1546.19 1199.3 cv
1546.19 1199.3 1570.52 1210.45 1586.33 1211.8 cv
1602.14 1213.15 1616.57 1209.47 1616.57 1209.47 cv
.909804 .470588 .176471 rgb
f
1601.45 1250.77 mo
1601.45 1250.77 1595.89 1263.77 1592.03 1267.64 cv
1586.66 1273.01 1577.79 1270.87 1572.07 1267.28 cv
1564.97 1262.83 1563.85 1254.68 1561.03 1247.4 cv
1558.26 1240.26 1555.73 1233.04 1553.28 1225.79 cv
1550.3 1217 1548.89 1208.17 1546.19 1199.3 cv
1546.19 1199.3 1565.1 1247.28 1573.09 1250.77 cv
1581.09 1254.26 1601.45 1250.77 1601.45 1250.77 cv
cp
f
1450.42 1213.45 mo
1471.03 1333.04 1673.71 1313.13 1700.19 1217.24 cv
1688.23 1298.86 1553.69 1324.56 1490.37 1283.48 cv
1465.67 1267.8 1451.82 1242.58 1450.42 1213.45 cv
cp
.74902 .619608 .0431373 rgb
f
gsave
1604.23 1208.82 mo
1604.23 1208.82 1600.96 1206.01 1592.03 1203.21 cv
1583.1 1200.4 1574.01 1188.43 1576.09 1186.35 cv
1577.63 1184.81 1583.36 1184.61 1586.21 1184.61 cv
1587.2 1184.61 1587.85 1184.63 1587.85 1184.63 cv
1588.96 1184.5 1590.01 1184.44 1591.01 1184.44 cv
1600 1184.44 1604.41 1189.35 1605.99 1193.84 cv
1607.74 1198.84 1604.23 1208.82 1604.23 1208.82 cv
clp
1574.01 1184.44 mo
1607.74 1184.44 li
1607.74 1208.82 li
1574.01 1208.82 li
cp
.945098 .580392 .239216 rgb
f
grestore
1758.13 1363.23 mo
1757.97 1365.78 1756.15 1393.5 1756.21 1393.79 cv
1735.84 1375.89 li
1715.76 1428.93 li
1659.03 1415.42 li
1622.8 1466.04 li
1589.69 1438.36 li
1589.69 1438.36 1554.6 1464.78 1554.03 1464.91 cv
1516.34 1456.82 li
1487.6 1489.66 li
1425.63 1457.51 li
1423.69 1461.72 li
1396.9 1428.04 li
1394.47 1436.17 1447.66 1679.72 1592.03 1679.72 cv
1736.26 1679.72 1762.85 1460.51 1766.51 1420.46 cv
1768.64 1400.6 1767.58 1375.69 1758.13 1363.23 cv
cp
.909804 .470588 .176471 rgb
f
1427.34 1459.81 mo
1422.5 1467.31 li
1396.9 1428.04 li
1425.63 1457.51 li
1430.07 1451.94 li
1487.6 1489.66 li
1516.34 1456.82 li
1554.03 1464.91 li
1554.41 1464.82 1589.69 1438.36 1589.69 1438.36 cv
1622.8 1466.04 li
1659.03 1415.42 li
1715.76 1428.93 li
1735.04 1374.44 li
1755.12 1391.84 li
1755.79 1363.23 li
1758.13 1363.23 li
1756.21 1393.79 li
1736.51 1379.81 li
1715.74 1434.38 li
1659.79 1417.37 li
1623.96 1477.77 li
1589.68 1441.01 li
1589.68 1441.01 1555.32 1474.66 1554.04 1474.97 cv
1516.92 1461.38 li
1487.99 1497.66 li
1427.34 1459.81 li
cp
.941176 .901961 .843137 rgb
f
1708.32 1520.68 mo
1706.04 1520.05 1704.95 1516.8 1705.88 1513.42 cv
1706.82 1510.04 1709.43 1507.81 1711.71 1508.44 cv
1713.99 1509.07 1715.09 1512.33 1714.15 1515.71 cv
1713.22 1519.09 1710.61 1521.32 1708.32 1520.68 cv
cp
.717647 .368627 .172549 rgb
f
1690.97 1545.91 mo
1687.93 1545.07 1686.14 1541.92 1686.98 1538.88 cv
1687.82 1535.84 1690.97 1534.05 1694.02 1534.89 cv
1697.06 1535.73 1698.84 1538.88 1698 1541.93 cv
1697.16 1544.97 1694.01 1546.75 1690.97 1545.91 cv
cp
f
1717.99 1477.13 mo
1714.49 1476.16 1712.43 1472.54 1713.4 1469.03 cv
1714.37 1465.53 1718 1463.47 1721.5 1464.44 cv
1725.01 1465.41 1727.06 1469.04 1726.09 1472.54 cv
1725.12 1476.04 1721.49 1478.1 1717.99 1477.13 cv
cp
f
1666.4 1588.17 mo
1662.83 1587.18 1660.75 1583.49 1661.73 1579.93 cv
1662.72 1576.37 1666.4 1574.27 1669.97 1575.26 cv
1673.54 1576.25 1675.63 1579.94 1674.64 1583.5 cv
1673.65 1587.06 1669.96 1589.16 1666.4 1588.17 cv
cp
f
1616.47 1604.59 mo
1613.62 1603.8 1611.94 1600.85 1612.73 1597.99 cv
1613.52 1595.14 1616.48 1593.46 1619.34 1594.25 cv
1622.19 1595.04 1623.87 1598 1623.08 1600.85 cv
1622.29 1603.71 1619.33 1605.38 1616.47 1604.59 cv
cp
f
1561.42 1063.63 mo
1585.37 1061.59 1597.93 1036.66 1587.19 1020.11 cv
1583.72 1014.76 1585.24 1007.61 1590.59 1004.14 cv
1603.73 995.618 1609.68 1014.03 1608.46 1012.84 cv
1614.85 1043.59 1589.1 1070.13 1561.42 1063.63 cv
cp
/0 
<<
/Name (CF 10178*)
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Additive
/TintProc null
/NComponents 3 
/Components [ 1 .702281 .00993362 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
f
1608.31 1070.44 mo
1628.1 1051.08 1613.34 1031 1632.44 1030.73 cv
1660.05 1030.35 1640.94 1066.95 1608.31 1070.44 cv
cp
f
1382.35 1258.64 mo
1389.21 1250.2 li
1378.68 1252.74 li
1366.48 1255.68 1337.79 1256.38 1339.46 1226.68 cv
1329.48 1253.77 1358.42 1261.48 1372.3 1260.94 cv
1358.03 1292.51 1395.73 1317.28 1417.08 1298.58 cv
1398.97 1307.17 1362.48 1283.09 1382.35 1258.64 cv
cp
1 /0 /CSD get_res sepcs
.608295 sep
f
1777.49 1230.2 mo
1772.97 1229.42 li
1773.09 1232.13 1778.85 1247.13 1768.4 1258.99 cv
1754.6 1274.29 1739.19 1257.75 1732.51 1254.04 cv
1738.56 1265.04 1745.2 1268.84 1743.9 1279.99 cv
1742.03 1295.71 1723.7 1301.29 1711.78 1292.92 cv
1725.79 1308.41 1753.81 1295.96 1750.07 1272.16 cv
1758.36 1273.89 1768.16 1270.71 1774 1263.85 cv
1779.59 1257.34 1782.52 1247.78 1780.96 1236.83 cv
1798.61 1236.39 1813.95 1221.35 1814.14 1205.25 cv
1812.1 1213.68 1793.39 1232.96 1777.49 1230.2 cv
cp
f
1549.03 1334.86 mo
1538.3 1360.38 1559.7 1373.17 1542.19 1380.83 cv
1516.9 1391.89 1520.32 1350.74 1549.03 1334.86 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
1581.25 1357.06 mo
1580.07 1384.72 1604.58 1389.26 1590.83 1402.53 cv
1570.97 1421.7 1559.85 1381.93 1581.25 1357.06 cv
cp
f
1615.5 1331.79 mo
1614.31 1359.45 1638.83 1363.99 1625.08 1377.26 cv
1605.21 1396.44 1594.1 1356.67 1615.5 1331.79 cv
cp
f
458.333 734.542 mo
458.333 734.542 372.574 772.075 430.7 811.756 cv
488.825 851.437 657.654 889.935 791.718 889.935 cv
925.781 889.935 1003.4 841.713 1111.9 841.713 cv
1220.41 841.713 1362.04 811.552 1357.74 766.035 cv
1352.75 713.168 1134.99 707.956 1009.13 711.567 cv
883.26 715.177 458.333 734.542 458.333 734.542 cv
.760784 .760784 .760784 rgb
f
788.642 568.036 mo
785.84 470.241 715.087 311.467 623.259 314.096 cv
531.432 316.728 453.308 479.764 456.107 577.56 cv
458.909 675.355 535.621 752.502 627.446 749.872 cv
719.273 747.242 791.442 665.831 788.642 568.036 cv
.917647 .588235 .368627 rgb
f
622.889 749.937 mo
622.805 749.937 622.726 749.937 622.642 749.937 cv
622.726 749.937 622.806 749.937 622.89 749.937 cv
624.406 749.937 625.922 749.915 627.446 749.872 cv
658.008 748.997 686.39 739.397 710.558 723.368 cv
710.558 723.368 li
686.39 739.397 658.008 748.997 627.446 749.872 cv
625.921 749.915 624.405 749.937 622.889 749.937 cv
622.625 749.937 mo
622.552 749.937 622.484 749.936 622.411 749.936 cv
622.483 749.936 622.552 749.937 622.625 749.937 cv
622.337 749.936 mo
622.268 749.936 622.199 749.935 622.129 749.935 cv
622.201 749.935 622.265 749.936 622.337 749.936 cv
622.058 749.935 mo
621.985 749.934 621.914 749.934 621.841 749.934 cv
621.913 749.934 621.986 749.934 622.058 749.935 cv
621.826 749.933 mo
621.579 749.932 621.331 749.93 621.083 749.927 cv
621.328 749.929 621.581 749.932 621.826 749.933 cv
621.035 749.926 mo
620.962 749.925 620.887 749.924 620.814 749.923 cv
620.886 749.924 620.962 749.925 621.035 749.926 cv
620.755 749.923 mo
620.424 749.918 620.091 749.913 619.76 749.906 cv
620.094 749.913 620.421 749.918 620.755 749.923 cv
619.731 749.906 mo
619.655 749.904 619.571 749.902 619.495 749.901 cv
619.578 749.902 619.648 749.904 619.731 749.906 cv
619.458 749.9 mo
619.12 749.892 618.783 749.884 618.446 749.875 cv
618.784 749.884 619.12 749.892 619.458 749.9 cv
618.426 749.874 mo
618.35 749.872 618.269 749.87 618.193 749.867 cv
618.27 749.87 618.349 749.872 618.426 749.874 cv
618.146 749.866 mo
618.069 749.864 617.988 749.861 617.912 749.859 cv
617.989 749.861 618.068 749.864 618.146 749.866 cv
617.898 749.858 mo
617.645 749.85 617.392 749.842 617.139 749.833 cv
617.388 749.842 617.649 749.85 617.898 749.858 cv
617.12 749.832 mo
617.044 749.829 616.968 749.826 616.892 749.823 cv
616.969 749.826 617.043 749.829 617.12 749.832 cv
616.838 749.821 mo
616.765 749.818 616.692 749.816 616.619 749.813 cv
616.696 749.816 616.76 749.818 616.838 749.821 cv
616.565 749.811 mo
616.326 749.801 616.088 749.791 615.849 749.78 cv
616.086 749.791 616.327 749.801 616.565 749.811 cv
615.814 749.779 mo
615.745 749.776 615.672 749.772 615.603 749.769 cv
615.675 749.772 615.742 749.776 615.814 749.779 cv
615.526 749.766 mo
615.46 749.763 615.388 749.759 615.323 749.756 cv
615.389 749.759 615.46 749.763 615.526 749.766 cv
615.253 749.753 mo
615.025 749.742 614.799 749.73 614.571 749.718 cv
614.797 749.73 615.027 749.742 615.253 749.753 cv
614.509 749.715 mo
614.443 749.711 614.378 749.708 614.312 749.704 cv
614.378 749.708 614.443 749.711 614.509 749.715 cv
614.223 749.699 mo
614.157 749.696 614.099 749.693 614.033 749.689 cv
614.099 749.693 614.157 749.696 614.223 749.699 cv
613.94 749.684 mo
613.875 749.68 613.81 749.676 613.744 749.672 cv
613.805 749.676 613.88 749.68 613.94 749.684 cv
613.7 749.67 mo
613.562 749.662 613.421 749.653 613.283 749.645 cv
613.42 749.653 613.563 749.662 613.7 749.67 cv
613.212 749.641 mo
613.15 749.637 613.089 749.633 613.027 749.629 cv
613.088 749.633 613.151 749.637 613.212 749.641 cv
612.922 749.622 mo
612.859 749.619 612.804 749.615 612.742 749.611 cv
612.802 749.615 612.861 749.619 612.922 749.622 cv
612.638 749.604 mo
612.579 749.6 612.516 749.596 612.458 749.593 cv
612.513 749.596 612.583 749.601 612.638 749.604 cv
612.343 749.585 mo
612.244 749.578 612.145 749.571 612.045 749.565 cv
612.144 749.571 612.245 749.578 612.343 749.585 cv
611.91 749.555 mo
611.859 749.552 611.81 749.548 611.758 749.545 cv
611.807 749.548 611.861 749.552 611.91 749.555 cv
611.615 749.534 mo
611.567 749.531 611.52 749.528 611.471 749.524 cv
611.515 749.527 611.571 749.531 611.615 749.534 cv
611.317 749.513 mo
611.273 749.51 611.222 749.506 611.177 749.502 cv
611.221 749.506 611.273 749.51 611.317 749.513 cv
610.998 749.489 mo
610.963 749.486 610.925 749.484 610.89 749.481 cv
610.929 749.484 610.959 749.486 610.998 749.489 cv
610.609 749.459 mo
610.575 749.457 610.543 749.454 610.509 749.451 cv
610.542 749.454 610.577 749.457 610.609 749.459 cv
610.308 749.435 mo
610.273 749.433 610.238 749.43 610.204 749.427 cv
610.237 749.43 610.275 749.433 610.308 749.435 cv
610.007 749.411 mo
609.972 749.408 609.939 749.405 609.905 749.403 cv
609.943 749.406 609.968 749.408 610.007 749.411 cv
609.67 749.383 mo
609.653 749.382 609.628 749.38 609.611 749.378 cv
609.633 749.38 609.648 749.381 609.67 749.383 cv
609.311 749.352 mo
609.294 749.351 609.282 749.35 609.265 749.348 cv
609.281 749.35 609.295 749.351 609.311 749.352 cv
609.012 749.326 mo
608.988 749.324 608.96 749.322 608.937 749.32 cv
608.964 749.322 608.985 749.324 609.012 749.326 cv
608.705 749.299 mo
608.681 749.297 608.657 749.294 608.633 749.292 cv
608.654 749.294 608.683 749.297 608.705 749.299 cv
607.71 749.206 mo
607.703 749.205 607.695 749.204 607.689 749.204 cv
607.694 749.204 607.704 749.205 607.71 749.206 cv
607.391 749.175 mo
607.384 749.174 607.383 749.174 607.376 749.173 cv
607.382 749.174 607.385 749.174 607.391 749.175 cv
.717647 .698039 .682353 rgb
f
622.89 749.937 mo
622.806 749.937 622.726 749.937 622.642 749.937 cv
622.639 749.937 622.628 749.937 622.625 749.937 cv
622.552 749.937 622.483 749.936 622.411 749.936 cv
622.386 749.936 622.362 749.936 622.337 749.936 cv
622.265 749.936 622.201 749.935 622.129 749.935 cv
622.108 749.935 622.079 749.935 622.058 749.935 cv
621.986 749.934 621.913 749.934 621.841 749.934 cv
621.837 749.933 621.83 749.933 621.826 749.933 cv
621.581 749.932 621.328 749.929 621.083 749.927 cv
621.066 749.926 621.052 749.926 621.035 749.926 cv
620.962 749.925 620.886 749.924 620.814 749.923 cv
620.793 749.923 620.776 749.923 620.755 749.923 cv
620.421 749.918 620.094 749.913 619.76 749.906 cv
619.75 749.906 619.742 749.906 619.731 749.906 cv
619.648 749.904 619.578 749.902 619.495 749.901 cv
619.481 749.9 619.472 749.9 619.458 749.9 cv
619.12 749.892 618.784 749.884 618.446 749.875 cv
618.439 749.874 618.433 749.874 618.426 749.874 cv
618.349 749.872 618.27 749.87 618.193 749.867 cv
618.175 749.867 618.163 749.866 618.146 749.866 cv
618.068 749.864 617.989 749.861 617.912 749.859 cv
617.905 749.859 617.905 749.859 617.898 749.858 cv
617.649 749.85 617.388 749.842 617.139 749.833 cv
617.136 749.832 617.124 749.832 617.12 749.832 cv
617.043 749.829 616.969 749.826 616.892 749.823 cv
616.871 749.823 616.858 749.822 616.838 749.821 cv
616.76 749.818 616.696 749.816 616.619 749.813 cv
616.602 749.812 616.582 749.811 616.565 749.811 cv
616.327 749.801 616.086 749.791 615.849 749.78 cv
615.839 749.78 615.824 749.779 615.814 749.779 cv
615.742 749.776 615.675 749.772 615.603 749.769 cv
615.575 749.768 615.554 749.767 615.526 749.766 cv
615.46 749.763 615.389 749.759 615.323 749.756 cv
615.298 749.755 615.277 749.754 615.253 749.753 cv
615.027 749.742 614.797 749.73 614.571 749.718 cv
614.55 749.717 614.53 749.716 614.509 749.715 cv
614.443 749.711 614.378 749.708 614.312 749.704 cv
614.284 749.703 614.251 749.701 614.223 749.699 cv
614.157 749.696 614.099 749.693 614.033 749.689 cv
614.002 749.687 613.971 749.685 613.94 749.684 cv
613.88 749.68 613.805 749.676 613.744 749.672 cv
613.73 749.672 613.714 749.671 613.7 749.67 cv
613.563 749.662 613.42 749.653 613.283 749.645 cv
613.258 749.643 613.236 749.642 613.212 749.641 cv
613.151 749.637 613.088 749.633 613.027 749.629 cv
612.993 749.627 612.956 749.625 612.922 749.622 cv
612.861 749.619 612.802 749.615 612.742 749.611 cv
612.707 749.609 612.672 749.607 612.638 749.604 cv
612.583 749.601 612.513 749.596 612.458 749.593 cv
612.42 749.59 612.381 749.587 612.343 749.585 cv
612.245 749.578 612.144 749.571 612.045 749.565 cv
612.001 749.562 611.955 749.558 611.91 749.555 cv
611.861 749.552 611.807 749.548 611.758 749.545 cv
611.71 749.541 611.663 749.538 611.615 749.534 cv
611.571 749.531 611.515 749.527 611.471 749.524 cv
611.42 749.52 611.369 749.517 611.317 749.513 cv
611.273 749.51 611.221 749.506 611.177 749.502 cv
611.115 749.498 611.06 749.494 610.998 749.489 cv
610.959 749.486 610.929 749.484 610.89 749.481 cv
610.798 749.474 610.702 749.466 610.609 749.459 cv
610.577 749.457 610.542 749.454 610.509 749.451 cv
610.44 749.446 610.376 749.441 610.308 749.435 cv
610.275 749.433 610.237 749.43 610.204 749.427 cv
610.139 749.422 610.072 749.416 610.007 749.411 cv
609.968 749.408 609.943 749.406 609.905 749.403 cv
609.826 749.396 609.749 749.39 609.67 749.383 cv
609.648 749.381 609.633 749.38 609.611 749.378 cv
609.512 749.37 609.41 749.361 609.311 749.352 cv
609.295 749.351 609.281 749.35 609.265 749.348 cv
609.179 749.341 609.098 749.334 609.012 749.326 cv
608.985 749.324 608.964 749.322 608.937 749.32 cv
608.861 749.313 608.78 749.306 608.705 749.299 cv
608.683 749.297 608.654 749.294 608.633 749.292 cv
608.325 749.264 608.018 749.236 607.71 749.206 cv
607.704 749.205 607.694 749.204 607.689 749.204 cv
607.589 749.194 607.49 749.184 607.391 749.175 cv
607.385 749.174 607.382 749.174 607.376 749.173 cv
557.995 744.287 514.568 716.32 487.045 675.293 cv
509.867 687.758 535.677 694.787 562.928 694.787 cv
564.44 694.787 565.959 694.765 567.479 694.721 cv
659.308 692.091 731.476 610.68 728.675 512.885 cv
727.038 455.711 702.15 377.739 663.43 323.317 cv
717.614 349.803 760.174 428.932 778.675 501.813 cv
734.417 556.225 725.834 627.722 751.352 685.162 cv
739.852 700.142 726.075 713.078 710.558 723.368 cv
686.39 739.397 658.008 748.997 627.446 749.872 cv
625.922 749.915 624.406 749.937 622.89 749.937 cv
.866667 .537255 .329412 rgb
f
587.247 642.202 mo
583.351 642.202 579.438 641.904 575.518 641.293 cv
519.191 632.508 483.349 562.419 495.462 484.743 cv
506.734 412.472 555.551 359.095 607.659 359.095 cv
611.556 359.095 615.466 359.393 619.385 360.004 cv
675.714 368.788 711.555 438.877 699.441 516.554 cv
688.172 588.824 639.355 642.202 587.247 642.202 cv
.937255 .690196 .517647 rgb
f
672.116 383.156 mo
672.308 387.757 668.735 391.646 664.132 391.837 cv
659.53 392.029 655.643 388.456 655.451 383.853 cv
655.258 379.252 658.832 375.364 663.435 375.172 cv
668.036 374.98 671.924 378.555 672.116 383.156 cv
cp
.717647 .313726 .0352941 rgb
f
701.12 409.968 mo
701.277 413.724 698.359 416.897 694.601 417.054 cv
690.845 417.211 687.671 414.293 687.514 410.537 cv
687.357 406.78 690.276 403.607 694.032 403.45 cv
697.79 403.293 700.963 406.211 701.12 409.968 cv
cp
f
701.654 386.095 mo
701.75 388.396 699.963 390.338 697.662 390.435 cv
695.361 390.532 693.417 388.745 693.321 386.442 cv
693.226 384.142 695.012 382.198 697.313 382.103 cv
699.613 382.006 701.558 383.793 701.654 386.095 cv
cp
f
667.818 342.018 mo
667.981 345.91 664.958 349.196 661.066 349.359 cv
657.175 349.521 653.889 346.5 653.726 342.607 cv
653.563 338.715 656.586 335.429 660.478 335.267 cv
664.369 335.104 667.656 338.126 667.818 342.018 cv
cp
f
690.208 474.902 mo
690.371 478.832 687.32 482.149 683.391 482.314 cv
679.46 482.479 676.143 479.426 675.979 475.498 cv
675.814 471.568 678.866 468.251 682.794 468.086 cv
686.724 467.921 690.043 470.974 690.208 474.902 cv
cp
f
484.393 523.831 mo
484.53 527.069 482.014 529.805 478.775 529.94 cv
475.536 530.076 472.8 527.562 472.665 524.323 cv
472.53 521.084 475.046 518.348 478.285 518.213 cv
481.523 518.077 484.258 520.592 484.393 523.831 cv
cp
f
504.124 462.896 mo
504.193 464.559 502.902 465.963 501.238 466.032 cv
499.575 466.102 498.173 464.811 498.103 463.148 cv
498.034 461.486 499.325 460.082 500.987 460.012 cv
502.649 459.943 504.054 461.234 504.124 462.896 cv
cp
f
599.037 635.035 mo
599.179 638.449 596.527 641.333 593.113 641.476 cv
589.697 641.618 586.813 638.966 586.67 635.552 cv
586.528 632.136 589.182 629.252 592.596 629.109 cv
596.01 628.967 598.894 631.618 599.037 635.035 cv
cp
f
633.562 623.265 mo
633.666 625.766 631.724 627.88 629.222 627.984 cv
626.721 628.089 624.606 626.146 624.502 623.645 cv
624.398 621.143 626.342 619.029 628.842 618.925 cv
631.344 618.821 633.458 620.763 633.562 623.265 cv
cp
f
1034.9 713.958 mo
1098.19 639.351 1151.7 473.966 1081.64 414.542 cv
1011.59 355.115 844.5 424.152 781.211 498.76 cv
717.923 573.37 723.409 682.025 793.464 741.451 cv
863.518 800.876 971.613 788.567 1034.9 713.958 cv
.909804 .470588 .176471 rgb
f
897.338 779.072 mo
860.085 779.068 823.313 766.771 793.464 741.451 cv
793.464 741.451 li
793.464 741.451 li
823.313 766.771 860.085 779.068 897.338 779.072 cv
947.515 779.076 998.58 756.777 1034.9 713.958 cv
1034.96 713.89 1035.02 713.824 1035.07 713.756 cv
1035.02 713.821 1034.96 713.893 1034.9 713.958 cv
998.58 756.777 947.515 779.076 897.338 779.072 cv
793.232 741.254 mo
793.205 741.231 793.175 741.205 793.148 741.182 cv
793.178 741.207 793.202 741.228 793.232 741.254 cv
792.998 741.054 mo
792.966 741.027 792.935 740.999 792.902 740.972 cv
792.937 741.001 792.964 741.025 792.998 741.054 cv
792.762 740.852 mo
792.73 740.824 792.698 740.797 792.666 740.769 cv
792.696 740.795 792.732 740.826 792.762 740.852 cv
792.491 740.619 mo
792.451 740.584 792.412 740.55 792.372 740.516 cv
792.414 740.552 792.449 740.582 792.491 740.619 cv
792.218 740.383 mo
792.183 740.353 792.146 740.32 792.112 740.29 cv
792.145 740.32 792.184 740.353 792.218 740.383 cv
791.989 740.184 mo
791.952 740.151 791.912 740.117 791.875 740.085 cv
791.913 740.118 791.951 740.151 791.989 740.184 cv
791.76 739.984 mo
791.723 739.952 791.681 739.915 791.644 739.883 cv
791.682 739.916 791.722 739.951 791.76 739.984 cv
791.517 739.772 mo
791.454 739.716 791.388 739.659 791.325 739.603 cv
791.388 739.659 791.454 739.716 791.517 739.772 cv
791.211 739.503 mo
791.172 739.468 791.129 739.431 791.09 739.396 cv
791.132 739.433 791.169 739.466 791.211 739.503 cv
790.985 739.303 mo
790.946 739.269 790.9 739.228 790.861 739.193 cv
790.902 739.23 790.943 739.266 790.985 739.303 cv
790.761 739.105 mo
790.719 739.067 790.677 739.03 790.635 738.993 cv
790.676 739.03 790.719 739.068 790.761 739.105 cv
790.544 738.912 mo
790.466 738.842 790.383 738.768 790.305 738.698 cv
790.384 738.769 790.465 738.842 790.544 738.912 cv
790.211 738.614 mo
790.166 738.574 790.127 738.539 790.083 738.5 cv
790.129 738.541 790.165 738.573 790.211 738.614 cv
789.988 738.414 mo
789.946 738.377 789.901 738.336 789.859 738.299 cv
789.905 738.34 789.942 738.373 789.988 738.414 cv
789.765 738.213 mo
789.723 738.176 789.678 738.135 789.637 738.097 cv
789.682 738.139 789.719 738.172 789.765 738.213 cv
789.559 738.027 mo
789.473 737.949 789.389 737.872 789.303 737.795 cv
789.39 737.874 789.472 737.948 789.559 738.027 cv
789.22 737.719 mo
789.176 737.679 789.13 737.637 789.086 737.597 cv
789.132 737.638 789.174 737.677 789.22 737.719 cv
789 737.518 mo
788.953 737.476 788.914 737.439 788.867 737.397 cv
788.912 737.438 788.955 737.477 789 737.518 cv
788.779 737.315 mo
788.735 737.275 788.692 737.236 788.648 737.195 cv
788.693 737.237 788.734 737.274 788.779 737.315 cv
788.581 737.134 mo
788.497 737.056 788.407 736.973 788.322 736.895 cv
788.408 736.974 788.495 737.055 788.581 737.134 cv
788.234 736.813 mo
788.193 736.775 788.148 736.733 788.108 736.696 cv
788.148 736.733 788.193 736.775 788.234 736.813 cv
788.014 736.609 mo
787.973 736.571 787.93 736.53 787.889 736.492 cv
787.93 736.53 787.974 736.571 788.014 736.609 cv
787.795 736.404 mo
787.752 736.364 787.713 736.328 787.67 736.287 cv
787.71 736.325 787.754 736.366 787.795 736.404 cv
787.599 736.221 mo
787.518 736.145 787.436 736.068 787.355 735.992 cv
787.436 736.068 787.518 736.145 787.599 736.221 cv
787.256 735.899 mo
787.216 735.861 787.179 735.826 787.138 735.787 cv
787.179 735.826 787.216 735.861 787.256 735.899 cv
787.038 735.693 mo
786.998 735.655 786.96 735.618 786.919 735.58 cv
786.96 735.618 786.998 735.655 787.038 735.693 cv
786.817 735.483 mo
786.779 735.447 786.741 735.411 786.703 735.375 cv
786.743 735.413 786.777 735.445 786.817 735.483 cv
786.506 735.187 mo
786.471 735.154 786.434 735.118 786.399 735.085 cv
786.435 735.119 786.47 735.153 786.506 735.187 cv
786.288 734.979 mo
786.251 734.943 786.215 734.908 786.178 734.872 cv
786.214 734.907 786.252 734.944 786.288 734.979 cv
786.069 734.768 mo
786.032 734.732 785.999 734.7 785.961 734.664 cv
785.997 734.699 786.033 734.733 786.069 734.768 cv
785.845 734.552 mo
785.81 734.518 785.78 734.489 785.745 734.455 cv
785.781 734.49 785.809 734.517 785.845 734.552 cv
785.544 734.26 mo
785.514 734.231 785.485 734.202 785.455 734.173 cv
785.483 734.2 785.516 734.233 785.544 734.26 cv
785.327 734.049 mo
785.297 734.02 785.261 733.985 785.232 733.956 cv
785.263 733.987 785.295 734.018 785.327 734.049 cv
785.103 733.83 mo
785.073 733.801 785.046 733.774 785.016 733.745 cv
785.044 733.772 785.076 733.803 785.103 733.83 cv
784.865 733.597 mo
784.843 733.575 784.822 733.554 784.8 733.533 cv
784.82 733.552 784.845 733.577 784.865 733.597 cv
784.59 733.325 mo
784.568 733.303 784.549 733.285 784.527 733.263 cv
784.547 733.282 784.57 733.306 784.59 733.325 cv
784.369 733.107 mo
784.347 733.085 784.321 733.059 784.299 733.037 cv
784.323 733.061 784.345 733.083 784.369 733.107 cv
784.145 732.884 mo
784.123 732.862 784.101 732.84 784.079 732.818 cv
784.102 732.841 784.122 732.861 784.145 732.884 cv
783.895 732.634 mo
783.883 732.622 783.875 732.615 783.863 732.603 cv
783.875 732.614 783.883 732.623 783.895 732.634 cv
783.642 732.381 mo
783.632 732.371 783.62 732.358 783.61 732.348 cv
783.622 732.36 783.63 732.369 783.642 732.381 cv
783.422 732.16 mo
783.405 732.142 783.39 732.126 783.373 732.109 cv
783.388 732.125 783.407 732.144 783.422 732.16 cv
783.193 731.928 mo
783.179 731.913 783.167 731.902 783.153 731.887 cv
783.168 731.902 783.178 731.912 783.193 731.928 cv
782.703 731.429 mo
782.702 731.428 li
782.703 731.429 li
782.479 731.2 mo
782.474 731.195 782.466 731.186 782.461 731.181 cv
782.469 731.189 782.472 731.192 782.479 731.2 cv
782.243 730.957 mo
782.239 730.952 li
782.243 730.957 li
1035.13 713.683 mo
1035.17 713.637 1035.21 713.599 1035.24 713.554 cv
1035.21 713.596 1035.17 713.641 1035.13 713.683 cv
1035.32 713.463 mo
1035.35 713.427 1035.39 713.386 1035.42 713.35 cv
1035.39 713.385 1035.35 713.428 1035.32 713.463 cv
1035.49 713.257 mo
1035.53 713.22 1035.55 713.185 1035.59 713.148 cv
1035.55 713.187 1035.53 713.218 1035.49 713.257 cv
1035.67 713.044 mo
1035.7 713.012 1035.73 712.976 1035.76 712.944 cv
1035.73 712.979 1035.7 713.009 1035.67 713.044 cv
1035.84 712.844 mo
1035.88 712.798 1035.91 712.757 1035.95 712.711 cv
1035.92 712.754 1035.88 712.801 1035.84 712.844 cv
1036.09 712.544 mo
1036.12 712.512 1036.15 712.479 1036.17 712.447 cv
1036.15 712.478 1036.12 712.513 1036.09 712.544 cv
1036.28 712.322 mo
1036.3 712.299 1036.31 712.277 1036.33 712.254 cv
1036.31 712.277 1036.3 712.299 1036.28 712.322 cv
1036.44 712.119 mo
1036.46 712.096 1036.49 712.07 1036.5 712.047 cv
1036.48 712.071 1036.46 712.096 1036.44 712.119 cv
1036.61 711.914 mo
1036.63 711.896 1036.65 711.874 1036.66 711.856 cv
1036.65 711.876 1036.63 711.895 1036.61 711.914 cv
1036.78 711.71 mo
1036.79 711.701 1036.8 711.693 1036.81 711.683 cv
1036.8 711.691 1036.79 711.702 1036.78 711.71 cv
1037.24 711.15 mo
1037.25 711.145 1037.26 711.136 1037.26 711.131 cv
1037.26 711.135 1037.25 711.146 1037.24 711.15 cv
.737255 .607843 .521569 rgb
f
1037.41 710.942 mo
1037.42 710.937 1037.42 710.931 1037.43 710.926 cv
1037.42 710.93 1037.42 710.938 1037.42 710.942 cv
1037.41 710.942 li
.964706 .8 .686274 rgb
f
1037.39 710.971 mo
1037.4 710.961 1037.41 710.951 1037.41 710.942 cv
1037.42 710.942 li
1037.41 710.95 1037.4 710.963 1037.39 710.971 cv
.737255 .607843 .521569 rgb
f
1037.56 710.76 mo
1037.57 710.756 1037.57 710.747 1037.58 710.743 cv
1037.57 710.751 1037.57 710.753 1037.56 710.76 cv
.964706 .8 .686274 rgb
f
897.338 779.072 mo
860.085 779.068 823.313 766.771 793.464 741.451 cv
793.464 741.451 li
793.386 741.385 793.31 741.32 793.232 741.254 cv
793.202 741.228 793.178 741.207 793.148 741.182 cv
793.097 741.139 793.049 741.097 792.998 741.054 cv
792.964 741.025 792.937 741.001 792.902 740.972 cv
792.854 740.931 792.81 740.893 792.762 740.852 cv
792.732 740.826 792.696 740.795 792.666 740.769 cv
792.61 740.721 792.547 740.667 792.491 740.619 cv
792.449 740.582 792.414 740.552 792.372 740.516 cv
792.319 740.47 792.271 740.428 792.218 740.383 cv
792.184 740.353 792.145 740.32 792.112 740.29 cv
792.069 740.253 792.031 740.22 791.989 740.184 cv
791.951 740.151 791.913 740.118 791.875 740.085 cv
791.835 740.05 791.799 740.019 791.76 739.984 cv
791.722 739.951 791.682 739.916 791.644 739.883 cv
791.602 739.846 791.559 739.809 791.517 739.772 cv
791.454 739.716 791.388 739.659 791.325 739.603 cv
791.286 739.569 791.25 739.538 791.211 739.503 cv
791.169 739.466 791.132 739.433 791.09 739.396 cv
791.053 739.364 791.022 739.336 790.985 739.303 cv
790.943 739.266 790.902 739.23 790.861 739.193 cv
790.827 739.163 790.795 739.135 790.761 739.105 cv
790.719 739.068 790.676 739.03 790.635 738.993 cv
790.603 738.965 790.576 738.94 790.544 738.912 cv
790.465 738.842 790.384 738.769 790.305 738.698 cv
790.274 738.671 790.242 738.642 790.211 738.614 cv
790.165 738.573 790.129 738.541 790.083 738.5 cv
790.052 738.472 790.019 738.442 789.988 738.414 cv
789.942 738.373 789.905 738.34 789.859 738.299 cv
789.826 738.268 789.798 738.243 789.765 738.213 cv
789.719 738.172 789.682 738.139 789.637 738.097 cv
789.611 738.074 789.584 738.05 789.559 738.027 cv
789.472 737.948 789.39 737.874 789.303 737.795 cv
789.275 737.769 789.248 737.745 789.22 737.719 cv
789.174 737.677 789.132 737.638 789.086 737.597 cv
789.058 737.571 789.028 737.544 789 737.518 cv
788.955 737.477 788.912 737.438 788.867 737.397 cv
788.839 737.371 788.807 737.341 788.779 737.315 cv
788.734 737.274 788.693 737.237 788.648 737.195 cv
788.625 737.174 788.604 737.155 788.581 737.134 cv
788.495 737.055 788.408 736.974 788.322 736.895 cv
788.292 736.866 788.265 736.841 788.234 736.813 cv
788.193 736.775 788.148 736.733 788.108 736.696 cv
788.074 736.665 788.047 736.639 788.014 736.609 cv
787.974 736.571 787.93 736.53 787.889 736.492 cv
787.858 736.463 787.826 736.433 787.795 736.404 cv
787.754 736.366 787.71 736.325 787.67 736.287 cv
787.647 736.266 787.622 736.243 787.599 736.221 cv
787.518 736.145 787.436 736.068 787.355 735.992 cv
787.322 735.961 787.289 735.93 787.256 735.899 cv
787.216 735.861 787.179 735.826 787.138 735.787 cv
787.105 735.756 787.071 735.724 787.038 735.693 cv
786.998 735.655 786.96 735.618 786.919 735.58 cv
786.886 735.549 786.85 735.514 786.817 735.483 cv
786.777 735.445 786.743 735.413 786.703 735.375 cv
786.638 735.313 786.572 735.25 786.506 735.187 cv
786.47 735.153 786.435 735.119 786.399 735.085 cv
786.361 735.049 786.326 735.015 786.288 734.979 cv
786.252 734.944 786.214 734.907 786.178 734.872 cv
786.143 734.839 786.104 734.802 786.069 734.768 cv
786.033 734.733 785.997 734.699 785.961 734.664 cv
785.924 734.628 785.882 734.588 785.845 734.552 cv
785.809 734.517 785.781 734.49 785.745 734.455 cv
785.677 734.39 785.611 734.326 785.544 734.26 cv
785.516 734.233 785.483 734.2 785.455 734.173 cv
785.413 734.132 785.369 734.09 785.327 734.049 cv
785.295 734.018 785.263 733.987 785.232 733.956 cv
785.187 733.912 785.148 733.874 785.103 733.83 cv
785.076 733.803 785.044 733.772 785.016 733.745 cv
784.966 733.696 784.915 733.645 784.865 733.597 cv
784.845 733.577 784.82 733.552 784.8 733.533 cv
784.731 733.464 784.659 733.393 784.59 733.325 cv
784.57 733.306 784.547 733.282 784.527 733.263 cv
784.475 733.212 784.421 733.158 784.369 733.107 cv
784.345 733.083 784.323 733.061 784.299 733.037 cv
784.248 732.986 784.196 732.935 784.145 732.884 cv
784.122 732.861 784.102 732.841 784.079 732.818 cv
784.017 732.757 783.956 732.695 783.895 732.634 cv
783.883 732.623 783.875 732.614 783.863 732.603 cv
783.79 732.529 783.715 732.454 783.642 732.381 cv
783.63 732.369 783.622 732.36 783.61 732.348 cv
783.547 732.285 783.486 732.223 783.422 732.16 cv
783.407 732.144 783.388 732.125 783.373 732.109 cv
783.314 732.05 783.252 731.987 783.193 731.928 cv
783.178 731.912 783.168 731.902 783.153 731.887 cv
783.002 731.734 782.852 731.582 782.703 731.429 cv
782.702 731.428 li
782.628 731.352 782.554 731.276 782.479 731.2 cv
782.472 731.192 782.469 731.189 782.461 731.181 cv
782.387 731.105 782.318 731.034 782.243 730.957 cv
782.239 730.952 li
746.42 694.024 731.718 642.591 738.891 592.13 cv
748.014 618.017 763.661 641.627 785.728 660.348 cv
815.586 685.675 852.34 697.972 889.604 697.969 cv
939.772 697.964 990.854 675.666 1027.17 632.856 cv
1064.17 589.238 1097.78 514.608 1105.36 448.251 cv
1134.7 520.863 1090.12 646.403 1037.58 710.743 cv
1037.57 710.747 1037.57 710.756 1037.56 710.76 cv
1037.52 710.816 1037.47 710.871 1037.43 710.926 cv
1037.42 710.931 1037.42 710.937 1037.41 710.942 cv
1037.41 710.951 1037.4 710.961 1037.39 710.971 cv
1037.35 711.027 1037.31 711.075 1037.26 711.131 cv
1037.26 711.136 1037.25 711.145 1037.24 711.15 cv
1037.1 711.329 1036.95 711.505 1036.81 711.683 cv
1036.8 711.693 1036.79 711.701 1036.78 711.71 cv
1036.74 711.762 1036.71 711.804 1036.66 711.856 cv
1036.65 711.874 1036.63 711.896 1036.61 711.914 cv
1036.58 711.958 1036.54 712.004 1036.5 712.047 cv
1036.49 712.07 1036.46 712.096 1036.44 712.119 cv
1036.41 712.163 1036.37 712.21 1036.33 712.254 cv
1036.31 712.277 1036.3 712.299 1036.28 712.322 cv
1036.24 712.365 1036.21 712.404 1036.17 712.447 cv
1036.15 712.479 1036.12 712.512 1036.09 712.544 cv
1036.05 712.599 1036 712.656 1035.95 712.711 cv
1035.91 712.757 1035.88 712.798 1035.84 712.844 cv
1035.81 712.879 1035.79 712.909 1035.76 712.944 cv
1035.73 712.976 1035.7 713.012 1035.67 713.044 cv
1035.65 713.076 1035.61 713.117 1035.59 713.148 cv
1035.55 713.185 1035.53 713.22 1035.49 713.257 cv
1035.47 713.288 1035.44 713.318 1035.42 713.35 cv
1035.39 713.386 1035.35 713.427 1035.32 713.463 cv
1035.29 713.494 1035.27 713.522 1035.24 713.554 cv
1035.21 713.599 1035.17 713.637 1035.13 713.683 cv
1035.11 713.71 1035.1 713.729 1035.07 713.756 cv
1035.02 713.824 1034.96 713.89 1034.9 713.958 cv
998.58 756.777 947.515 779.076 897.338 779.072 cv
.878431 .376471 .121569 rgb
f
898.618 656.418 mo
869.762 656.418 844.055 646.386 827.423 625.984 cv
791.399 581.797 811.593 505.709 872.525 456.035 cv
905.323 429.296 943.239 415.661 976.879 415.661 cv
1005.73 415.661 1031.44 425.693 1048.08 446.095 cv
1084.1 490.281 1063.9 566.369 1002.97 616.044 cv
970.175 642.782 932.257 656.418 898.618 656.418 cv
.929412 .537255 .215686 rgb
f
1071.82 498.563 mo
1068.89 502.114 1063.63 502.615 1060.08 499.682 cv
1056.52 496.749 1056.02 491.493 1058.96 487.941 cv
1061.89 484.39 1067.15 483.889 1070.7 486.822 cv
1074.25 489.753 1074.75 495.011 1071.82 498.563 cv
cp
.717647 .313726 .0352941 rgb
f
1075.47 537.89 mo
1073.07 540.791 1068.78 541.2 1065.88 538.805 cv
1062.98 536.411 1062.57 532.119 1064.97 529.22 cv
1067.36 526.321 1071.65 525.912 1074.55 528.306 cv
1077.45 530.701 1077.86 534.992 1075.47 537.89 cv
cp
f
1091.82 520.491 mo
1090.36 522.267 1087.73 522.52 1085.95 521.053 cv
1084.18 519.586 1083.93 516.958 1085.39 515.183 cv
1086.86 513.405 1089.49 513.154 1091.26 514.621 cv
1093.04 516.088 1093.29 518.716 1091.82 520.491 cv
cp
f
1096.12 465.092 mo
1093.64 468.095 1089.19 468.521 1086.19 466.04 cv
1083.19 463.56 1082.76 459.114 1085.24 456.109 cv
1087.73 453.107 1092.17 452.683 1095.17 455.164 cv
1098.18 457.644 1098.6 462.09 1096.12 465.092 cv
cp
f
1023.95 578.893 mo
1021.44 581.925 1016.95 582.353 1013.92 579.848 cv
1010.89 577.344 1010.46 572.856 1012.97 569.824 cv
1015.47 566.792 1019.96 566.364 1022.99 568.868 cv
1026.02 571.373 1026.45 575.861 1023.95 578.893 cv
cp
f
864.885 461.38 mo
862.443 464.337 858.067 464.754 855.11 462.313 cv
852.153 459.871 851.736 455.493 854.177 452.536 cv
856.619 449.581 860.997 449.162 863.954 451.605 cv
866.911 454.047 867.328 458.423 864.885 461.38 cv
cp
f
838.165 477.708 mo
836.1 480.207 832.4 480.56 829.9 478.496 cv
827.402 476.431 827.049 472.733 829.114 470.233 cv
831.177 467.733 834.876 467.38 837.376 469.445 cv
839.875 471.508 840.229 475.208 838.165 477.708 cv
cp
f
830.502 521.94 mo
828.384 524.507 824.584 524.87 822.019 522.75 cv
819.453 520.63 819.09 516.832 821.21 514.266 cv
823.33 511.699 827.128 511.336 829.694 513.456 cv
832.26 515.576 832.622 519.374 830.502 521.94 cv
cp
f
893.571 445.576 mo
892.51 446.86 890.612 447.039 889.328 445.98 cv
888.044 444.921 887.863 443.021 888.924 441.737 cv
889.983 440.455 891.883 440.274 893.165 441.333 cv
894.449 442.394 894.63 444.292 893.571 445.576 cv
cp
f
853.331 503.67 mo
851.752 505.582 848.921 505.852 847.01 504.272 cv
845.098 502.694 844.829 499.863 846.407 497.952 cv
847.987 496.039 850.816 495.768 852.729 497.348 cv
854.64 498.927 854.911 501.757 853.331 503.67 cv
cp
f
849.097 637.048 mo
846.921 639.683 843.02 640.056 840.385 637.88 cv
837.75 635.704 837.378 631.803 839.555 629.168 cv
841.73 626.533 845.631 626.159 848.267 628.337 cv
850.902 630.512 851.273 634.413 849.097 637.048 cv
cp
f
882.644 651.375 mo
881.049 653.304 878.191 653.576 876.26 651.983 cv
874.33 650.389 874.056 647.53 875.651 645.599 cv
877.245 643.668 880.104 643.396 882.035 644.99 cv
883.966 646.585 884.237 649.443 882.644 651.375 cv
cp
f
945.726 841.442 mo
945.043 837.631 li
957.995 834.742 970.557 831.016 981.898 826.221 cv
981.375 823.564 li
985.271 822.621 989.166 821.673 993.032 820.61 cv
999.584 818.809 li
998.507 813.458 li
1000.37 813.104 1002.17 812.752 1003.9 812.405 cv
1005.93 815.585 1007.94 818.806 1009.92 822.059 cv
1008.67 822.553 1007.4 823.052 1006.12 823.549 cv
988.656 830.334 967.932 837.37 945.726 841.442 cv
cp
777.742 861.453 mo
773.62 861.453 769.501 861.306 765.387 861.032 cv
765.899 853.572 li
778.111 854.735 790.917 855.637 804.583 856.301 cv
808.809 856.506 812.97 856.676 817.057 856.811 cv
804.263 859.924 791.264 861.451 777.75 861.453 cv
777.742 861.453 li
cp
575.471 802.577 mo
575.943 802.162 576.417 801.749 576.89 801.337 cv
622.948 815.194 665.529 816.933 688.688 817.15 cv
652.438 820.481 618.628 820.717 575.471 802.577 cv
cp
1243.24 618.233 mo
1232.08 627.05 li
1252.83 580.045 1246.77 580.02 1248.58 572.646 cv
1235.02 569.563 li
1210.91 629.932 1202.83 641.909 1199.2 647.863 cv
1205.68 615.227 1201.65 578.599 1201.65 578.224 cv
1238.48 532.428 1231.01 505.005 1231.07 504.616 cv
1223.62 502.692 li
1226.94 491.441 1240.14 442.434 1232.67 433.632 cv
1209.93 406.864 1208.09 478.569 1189.78 525.345 cv
1189.16 523.498 1188.44 521.48 1187.61 519.261 cv
1194.69 492.499 1209.21 400.705 1183.03 400.705 cv
1162.83 400.705 1173.1 426.864 1172.87 450.375 cv
1156.67 423.021 li
1148.79 393.226 1147.3 402.629 1142.8 393.697 cv
1137.42 399.679 li
1124.7 413.854 1149.56 447.606 1142.34 495.271 cv
1139.34 475.626 1131.53 459.811 1130.56 457.21 cv
1117.51 457.148 li
1117.95 462.781 1118.78 470.445 1119.24 482.356 cv
1116 474.884 1116.16 473.62 1114.46 472.033 cv
1111.28 468.287 li
1097.64 473.49 li
1104.91 493.729 li
1095.26 554.741 1094.92 553.793 1094.84 554.168 cv
1078.87 567.405 1034.64 612.808 1033.03 619.488 cv
1011.79 624.881 988.793 634.047 970.022 642.373 cv
969.54 637.721 li
962.062 639.188 li
878.955 655.502 871.787 662.495 852.791 667.956 cv
854.221 668.415 li
851.419 682.568 li
853.674 683.619 856.052 684.431 859.053 685.172 cv
856.064 686 853.067 686.924 850.079 687.974 cv
849.695 683.153 li
769.31 671.535 863.229 694.504 664.294 651.449 cv
660.849 667.93 li
666.174 669.911 685.804 678.603 718.876 687.966 cv
648.605 685.913 680.697 687.37 646.53 668.538 cv
654.821 660.233 li
641.517 643.273 629.35 614.881 610.457 630.684 cv
597.996 628.782 584.778 630.402 572.404 632.884 cv
557.503 618.373 547.485 606.539 540.119 600.827 cv
519.317 584.698 li
535.586 617.332 524.613 612.339 547.723 638.667 cv
540.937 640.389 534.176 642.373 527.451 644.615 cv
526.487 643.838 525.553 643.059 524.644 642.274 cv
517.583 593.675 478.665 496.042 478.537 495.667 cv
478.601 502.105 464.975 516.916 483.277 584.1 cv
475.066 579.723 477.87 581.289 477.261 580.973 cv
475.948 575.954 481.544 598.474 465.743 535.677 cv
460.771 537.832 li
460.387 522.123 460.626 505.6 462.819 491.392 cv
493.504 432.584 453.571 457.794 450.936 462.307 cv
447.161 464.721 438.952 465.665 429.85 479.948 cv
432.489 434.566 434.976 443.69 416.255 428.636 cv
415.684 441.723 415.408 448.549 414.574 466.879 cv
397.718 481.678 395.01 483.596 382.574 499.594 cv
371.699 427.583 335.972 500.351 377.688 570.653 cv
376.881 575.078 376.157 579.751 375.541 584.678 cv
348.742 528.379 343.598 463.649 323.119 491.15 cv
309.497 509.455 360.691 616.306 386.662 654.461 cv
385.939 656.508 385.202 658.505 384.456 660.453 cv
330.612 597.062 335.561 574.083 320.279 574.083 cv
282.016 574.083 350.478 660.723 373.14 686.156 cv
372.43 687.625 363.4 708.055 360.17 715.363 cv
374.521 723.344 li
376.891 718.589 381.126 710.316 385.985 700.17 cv
386.737 715.078 396.756 711.02 397.334 711.279 cv
405.034 718.675 412.985 725.783 421.178 732.588 cv
435.762 772.534 458.196 788.722 480.573 799.554 cv
485.042 790.409 li
485.991 791.676 487.024 793.011 488.138 794.402 cv
466.881 821.523 490.106 833.43 505.361 813.27 cv
509.286 817.077 513.571 820.951 518.187 824.758 cv
484.309 864.805 480.428 874.784 484.269 882.463 cv
497.106 908.146 520.257 861.103 538.788 839.611 cv
592.345 872.868 580.341 843.128 587.303 842.543 cv
573.725 835.273 578.681 836.107 552.601 824.444 cv
553.846 823.147 555.101 821.86 556.364 820.583 cv
632.979 856.153 641.305 862.116 642.433 862.628 cv
656.866 844.317 643.629 846.74 625.128 831.795 cv
647.624 834.941 668.433 834.036 689.575 832.106 cv
685.568 844.447 701.583 845.323 713.708 847.075 cv
705.025 849.613 li
701.654 848.669 716.811 852.941 674.168 840.936 cv
670.893 855.1 li
766.347 889.038 785.39 887.103 850.121 861.087 cv
849.662 861.577 849.699 861.449 837.214 875.964 cv
837.521 876.342 848.203 889.464 847.533 888.643 cv
881.887 855.505 li
898.629 854.021 911.229 851.793 921.582 849.73 cv
920.402 859.02 li
929.548 862.405 974.629 863.018 1017.84 835.475 cv
1033.68 863.142 1051.77 844.452 1040.38 824.325 cv
1062.34 819.778 1081.57 812.72 1103.01 803.111 cv
1119.31 829.643 1136.93 810.83 1125.9 792.396 cv
1142.36 784.458 1140.54 785.681 1151.54 772.615 cv
1145.9 762.399 li
1208.36 722.64 1197.57 702.829 1200.19 699.508 cv
1199.84 699.303 1192.42 695.029 1192.89 695.302 cv
1204.89 680.37 1212.43 668.272 1220.68 662.406 cv
1273.92 624.566 1242.42 620.214 1243.24 618.233 cv
cp
.537255 .235294 .027451 rgb
f
859.614 711.219 mo
832.057 726.524 835.497 724.712 833.512 726.129 cv
833.949 726.815 834.29 727.345 834.749 728.066 cv
844.104 722.545 853.353 717.088 862.908 711.448 cv
861.518 709.473 860.512 710.722 859.614 711.219 cv
cp
.968627 .576471 .117647 rgb
f
867.871 733.574 mo
877.192 731.782 873.262 733.951 901.12 699.689 cv
902.098 698.485 901.685 697.69 900.275 696.896 cv
889.129 708.361 877.944 719.864 866.765 731.361 cv
867.458 733.239 867.182 732.656 867.871 733.574 cv
cp
f
1163.79 624.462 mo
1157.84 628.533 1141.65 655.076 1112.69 677.138 cv
1090.89 693.745 1055.42 713.125 1036.05 725.568 cv
1036.47 726.359 1036.76 726.914 1037.2 727.731 cv
1050.9 721.899 1059.17 716.623 1072.57 710.896 cv
1132.88 685.121 1170.19 630.779 1167.3 626.662 cv
1166.01 627.912 1161.03 634.976 1153.59 644.86 cv
1153.38 644.705 1153.16 644.548 1152.94 644.391 cv
1155.42 639.237 1161.89 629.566 1163.79 624.462 cv
cp
f
987.483 668.708 mo
986.467 669.637 986.758 671.369 988.085 671.563 cv
999.833 673.259 995.329 674.413 1030.98 646.187 cv
1031.13 646.067 1031.19 645.824 1031.38 645.477 cv
1030.97 644.93 1030.53 644.326 1029.97 643.573 cv
1027.59 644.708 987.718 668.494 987.483 668.708 cv
cp
f
1067.15 653.769 mo
1066.93 653.661 1066.71 653.554 1066.49 653.446 cv
1057.33 667.907 1048.17 682.367 1038.74 697.258 cv
1050.38 693.899 1063.45 670.408 1067.15 653.769 cv
cp
f
956.757 724.141 mo
965.54 721.417 991.966 701.6 996.951 694.016 cv
983.253 697.562 975.3 707.031 956.757 724.141 cv
cp
f
1109.21 477.042 mo
1108.52 477.305 1107.84 477.563 1106.81 477.958 cv
1111.12 489.977 1115.36 501.791 1119.64 513.721 cv
1120.64 513.303 1121.21 513.063 1121.91 512.769 cv
1120.61 499.843 1113.78 489.258 1109.68 477.614 cv
1109.61 477.42 1109.41 477.277 1109.21 477.042 cv
cp
f
1036.03 666.04 mo
998.659 704.352 1003.32 699.457 1000.95 701.145 cv
1001.52 701.943 li
1003.69 701.47 1002.72 701.583 1005.39 701.419 cv
1005.69 702.11 li
1000.36 706.877 994.78 711.3 989.025 716.466 cv
991.71 717.614 990.459 717.828 993.195 716.142 cv
1006.25 708.09 1017.69 697.553 1028.72 686.399 cv
1090.72 623.696 1103.81 591.118 1115.12 539.286 cv
1115.5 537.576 1115.06 536.186 1114.06 534.71 cv
1111.71 543.155 1109.37 551.599 1107.02 560.042 cv
1105.13 555.527 1116.78 510.841 1108.48 495.38 cv
1103.29 519.69 1109.75 590.465 1036.03 666.04 cv
cp
f
1042.95 640.596 mo
1021.5 660.586 1005.66 675.728 977.769 687.22 cv
929.285 707.2 934.958 706.911 924.616 715.497 cv
925.358 718.244 925.402 717.141 939.888 711.819 cv
939.996 712.079 940.102 712.338 940.206 712.596 cv
933.451 716.307 926.414 719.454 919.651 723.152 cv
919.722 723.53 919.793 723.909 919.867 724.288 cv
925.208 723.984 929.217 721.938 977.788 698.599 cv
1002.59 686.681 1040.37 663.26 1053.12 634.442 cv
1046.87 632.074 1047.51 636.348 1042.95 640.596 cv
cp
f
855.655 732.12 mo
866.732 728.369 871.768 720.568 882.553 708.341 cv
882.379 708.116 882.207 707.891 882.035 707.666 cv
872.218 715.321 862.401 722.975 852.702 730.538 cv
853.331 732.616 854.342 732.564 855.655 732.12 cv
cp
f
948.253 689.795 mo
949.511 688.709 949.813 687.701 948.346 686.268 cv
930.408 691.62 936.775 688.638 904.445 717.609 cv
900.504 721.14 893.735 729.042 892.624 732.098 cv
893.23 732.839 893.845 733.59 894.416 734.285 cv
909.271 728.439 905.789 726.491 948.253 689.795 cv
cp
f
1132.75 694.129 mo
1131.94 693.325 1131.35 692.738 1130.58 691.971 cv
1112.86 711.075 1095.26 730.046 1077.66 749.018 cv
1077.82 749.186 1077.97 749.356 1078.13 749.524 cv
1100.66 735.962 1118.23 716.883 1132.75 694.129 cv
cp
f
1024.57 728.218 mo
1003.04 741.54 981.503 754.861 959.968 768.182 cv
970.454 766.768 1018.54 737.114 1024.57 728.218 cv
cp
f
888.834 771.311 mo
714.311 774.401 838.017 776.472 568.648 771.7 cv
568.645 771.861 568.643 772.022 568.639 772.183 cv
622.302 786.828 622.19 782.464 716.687 777.786 cv
719.47 777.649 722.1 778.117 725.251 779.721 cv
677.118 786.797 640.636 787.089 642.817 791.705 cv
650.84 794.468 737.934 788.583 746.194 788.121 cv
785.651 785.914 851.326 784.878 888.834 771.311 cv
cp
f
1168.83 639.639 mo
1142.51 661.842 1143.36 691.295 1019.42 742.725 cv
1011.82 745.878 1004.43 749.578 996.962 753.023 cv
997.184 755.775 997.865 755.715 1007.34 751.725 cv
1055.62 731.387 1089.36 719.507 1123.48 692.882 cv
1136.57 682.663 1164.99 656.375 1168.83 639.639 cv
cp
f
1146.46 702.185 mo
1146.32 702.086 1146.17 701.986 1146.02 701.885 cv
1133.68 713.975 1121.34 726.063 1109 738.153 cv
1116.53 735.875 1129.61 726.868 1135.48 720.681 cv
1141.39 714.458 1144.23 708.829 1146.46 702.185 cv
cp
f
912.95 800.426 mo
912.938 799.709 li
861.394 799.709 814.749 800.783 776.007 804.57 cv
781.124 807.383 895.14 807.683 912.95 800.426 cv
cp
f
640.758 795.148 mo
639.25 794.125 646.506 795.836 573.408 780.89 cv
573.092 783.428 573.086 783.45 574.699 783.851 cv
587.843 787.109 639.397 801.478 640.758 795.148 cv
cp
f
485.108 699.093 mo
489.241 702.891 493.467 706.797 498.215 709.588 cv
595.789 766.951 578.316 758.396 606.485 763.836 cv
607.864 761.483 606.994 761.456 603.845 759.896 cv
497.595 707.225 521.575 716.691 482.154 690.309 cv
481.84 691.399 481.284 692.277 481.505 692.739 cv
482.564 694.952 483.427 697.547 485.108 699.093 cv
cp
f
975.52 741.004 mo
966.045 743.502 957.302 747.937 948.628 752.505 cv
911.321 772.152 864.528 776.702 867.805 782.389 cv
900.026 782.389 901.985 780.268 966.945 749.444 cv
970.937 747.549 974.578 744.823 978.64 742.321 cv
977.199 740.52 977.206 740.558 975.52 741.004 cv
cp
f
547.433 760.771 mo
547.5 760.499 547.568 760.225 547.635 759.952 cv
529.789 746.342 511.939 732.731 493.752 718.863 cv
495.87 727.365 525.555 754.164 547.433 760.771 cv
cp
f
473.149 664.021 mo
472.323 671.502 476.511 675.809 482.716 680.331 cv
592.65 760.408 620.073 757.955 704.944 768.214 cv
766.479 775.652 904.333 769.515 927.193 756.953 cv
906.729 758.822 886.431 761.693 865.901 759.599 cv
887.915 756.139 910.187 754.245 931.567 746.876 cv
918.729 747.467 905.891 748.058 892.832 748.658 cv
892.781 747.487 892.744 746.637 892.693 745.448 cv
1036.44 745.448 1152.15 669.322 1167.53 577.284 cv
1169.33 566.507 1170.29 555.573 1171.94 544.763 cv
1172.53 540.942 1171.26 538.208 1169.34 535.458 cv
1167.64 535.878 1167.58 537.245 1167.43 538.448 cv
1160.94 590.665 1166.21 584.84 1134.05 631.647 cv
1129.45 638.333 1124.11 644.305 1117.98 649.392 cv
960.814 779.827 879.734 723.684 695.144 730.866 cv
672.058 731.766 676.203 732.462 640.381 725.571 cv
625.733 722.753 611.315 719.024 597.669 712.545 cv
510.424 671.114 508.099 655.01 499.363 655.01 cv
502.372 659.012 504.506 662.214 506.649 663.808 cv
533.049 683.453 587.042 718.194 617.915 728.428 cv
678.475 748.502 694.411 728.702 872.926 745.669 cv
875.587 745.922 878.213 746.626 880.833 747.233 cv
881.324 747.347 881.706 747.986 882.136 748.381 cv
882.101 748.618 882.064 748.852 882.027 749.087 cv
876.501 749.651 862.226 749.334 850.035 749.422 cv
852.1 752.301 848.656 751.556 866.97 751.556 cv
866.92 751.774 866.869 751.99 866.819 752.208 cv
843.188 754.716 811.081 757.913 807.864 758.5 cv
808.317 759.575 804.522 759.189 841.251 759.996 cv
838.17 761.437 834.908 761.761 831.614 761.814 cv
717.89 763.683 722.519 767.838 650.792 753.625 cv
588.691 741.319 548.442 726.57 473.149 664.021 cv
cp
f
1092.88 722.453 mo
1093.05 722.203 1093.08 721.852 1093.23 721.398 cv
1092.55 720.853 1091.9 720.33 1091 719.611 cv
1049.89 751.6 1073.25 740.521 1007.2 763.648 cv
920.079 794.152 846.626 781.74 824.654 788.64 cv
825.025 788.871 922.248 796.182 1015.89 769.692 cv
1015.93 769.828 1015.98 769.963 1016.02 770.098 cv
977.486 787.396 926.185 791.533 908.309 794.887 cv
908.344 795.108 908.378 795.333 908.415 795.555 cv
947.644 797.345 1019.36 782.325 1055.53 759.979 cv
1077.12 746.644 1083.83 735.937 1092.88 722.453 cv
cp
f
756.951 831.344 mo
773.459 839.178 906.522 850.019 979.282 819.263 cv
972.989 819.484 966.954 821.32 960.687 821.45 cv
970.741 818.122 981.101 816.152 991.258 813.359 cv
991.196 813.052 991.134 812.745 991.072 812.436 cv
985.39 812.767 992.716 811.348 942.227 819.687 cv
872.785 831.161 832.163 823.981 817.958 829.471 cv
817.017 832.988 815.618 831.711 868.018 835.321 cv
841.584 840.672 788.153 829.242 756.951 831.344 cv
cp
f
1025.57 780.195 mo
1041.37 773.577 1056.44 767.267 1072.33 760.607 cv
1070.07 759.043 1070.88 758.866 1068.47 759.883 cv
1019.68 780.46 1026.55 776.601 1025.57 780.195 cv
cp
f
1184.21 595.284 mo
1184.01 595.288 1183.81 595.292 1183.62 595.297 cv
1180.1 607.231 1174.03 639.674 1165.2 665.021 cv
1159.63 680.973 1151.41 702.794 1149.12 709.65 cv
1149.38 709.785 1149.65 709.922 1149.92 710.058 cv
1178.85 669.406 1188.24 629.628 1184.21 595.284 cv
cp
f
764.176 799.618 mo
735.647 798.815 706.969 798.009 678.332 797.204 cv
677.584 802.632 680.675 802.155 705.537 803.166 cv
643.882 806.114 584.459 795.621 527.892 769.248 cv
526.08 771.755 526.479 771.583 546.158 781.923 cv
549.042 783.439 552.044 784.732 555.066 785.921 cv
626.79 814.124 697.728 808.883 708.351 809.833 cv
706.373 810.635 705.083 811.158 703.792 811.681 cv
703.853 811.904 703.913 812.129 703.973 812.352 cv
708.09 812.114 754.052 803.901 762.728 802.442 cv
764.215 802.193 764.937 801.665 764.176 799.618 cv
cp
f
1178.81 501.917 mo
1188.2 490.028 1181.61 481.052 1172.69 465.724 cv
1172.36 465.162 1171.91 464.681 1171.11 463.633 cv
1172.35 482.795 1171.15 485.668 1178.81 501.917 cv
cp
f
589.854 724.066 mo
590.16 724.194 590.555 724.083 591.683 724.083 cv
566.534 708.873 542.048 694.063 517.562 679.254 cv
517.183 679.779 li
536.068 702.232 563.888 713.254 589.854 724.066 cv
cp
f
1186.1 566.937 mo
1187.56 577.033 1184 578.156 1165.77 599.264 cv
1166.9 601.621 1167.95 603.815 1169.12 606.264 cv
1172.07 603.292 1194.11 576.111 1198.02 571.183 cv
1208.93 557.414 1226.04 526.817 1224.53 510.632 cv
1223.75 510.43 1222.96 510.225 1222.04 509.989 cv
1212.98 531.071 1206.5 551.463 1191.28 568.692 cv
1190.54 563.592 1189.89 559.018 1189.25 554.598 cv
1187.99 554.192 1187.08 553.897 1185.78 553.479 cv
1186.56 541.228 1187.93 539.057 1178.1 514.403 cv
1177.37 512.593 1176.54 511.033 1174.5 510.581 cv
1176.02 507.385 1173.87 505.38 1172.83 503.135 cv
1171.75 500.801 1170.65 498.413 1168.81 496.11 cv
1164.54 510.887 1177.93 510.378 1186.1 566.937 cv
cp
f
1166.25 694.971 mo
1168.42 692.882 1176.67 682.142 1178.56 679.68 cv
1191.99 662.289 1194.98 635.627 1195.56 612.848 cv
1195.68 608.327 1195.63 584.498 1194.84 580.327 cv
1182.4 594.666 1193.55 594.692 1186.9 634.8 cv
1180.93 670.829 1165.74 689.104 1165.42 694.733 cv
1166.25 694.971 li
cp
f
843.192 690.51 mo
843.168 690.229 843.146 689.947 843.124 689.665 cv
823.697 686.518 751.889 684.804 718.042 674.34 cv
667.175 658.611 686.859 663.656 669.708 660.175 cv
669.428 661.511 669.237 662.42 669.075 663.196 cv
701.903 676.216 735.243 685.927 769.536 691.933 cv
769.368 692.697 li
742.968 699.978 668.537 691.532 653.949 693.058 cv
660.368 698.154 662.158 696.134 692.203 698.952 cv
692.359 698.966 692.498 699.201 693.268 699.897 cv
692.549 700.073 691.923 700.225 691.298 700.378 cv
737.39 708.178 810.393 701.697 843.192 690.51 cv
cp
f
898.792 675.71 mo
854.26 675.71 li
856.559 676.78 858.903 677.466 861.275 678.025 cv
874.854 681.222 887.36 684.023 898.792 675.71 cv
cp
f
654.571 681.818 mo
649.595 677.155 651.639 678.371 649.862 677.71 cv
649.533 678.433 649.229 679.104 648.893 679.843 cv
651.698 682.546 654.375 685.128 657.223 687.871 cv
661.132 683.731 658.43 685.434 654.571 681.818 cv
cp
f
724.794 713.94 mo
843.733 729.757 875.649 685.746 974.929 681.218 cv
979.768 680.997 984.216 679.722 988.791 677.824 cv
988.709 676.902 988.634 676.058 988.526 674.832 cv
956.464 674.562 957.508 672.237 876.549 688.738 cv
864.596 691.174 852.744 694.095 841.614 699.515 cv
820.442 709.828 758.586 706.713 721.116 711.267 cv
721.835 713.465 723.272 713.737 724.794 713.94 cv
cp
f
1062.7 674.322 mo
1090.07 667.426 1153.03 571.595 1151.66 523.405 cv
1148.64 526.875 1136.01 578.125 1113.17 609.128 cv
1103.38 622.423 1082.07 644.838 1062.7 674.322 cv
cp
f
803.224 744.726 mo
789.785 740.161 668.457 743.956 634.008 739.28 cv
645.661 756.178 784.831 752.112 803.224 744.726 cv
cp
f
1123.39 563.193 mo
1126.26 552.738 1127.52 542.054 1129.88 531.634 cv
1130.11 531.669 1130.35 531.704 1130.59 531.738 cv
1130.59 542.819 li
1130.83 542.802 1131.07 542.788 1131.31 542.773 cv
1140.54 515.934 1136.82 490.046 1126 464.679 cv
1125.24 464.675 li
1130.03 521.693 1121.09 555.988 1123.39 563.193 cv
cp
f
1111.91 647.015 mo
1111.88 647.092 1112.12 647.264 1112.36 647.536 cv
1125.03 632.783 1130.01 614.265 1135.02 595.678 cv
1123.08 609.514 1121.21 618.603 1111.91 647.015 cv
cp
f
549.689 657.671 mo
566.265 668.834 592.77 686.747 596.06 688.265 cv
590.458 679.362 558.668 658.247 549.689 657.671 cv
cp
f
610.726 700.939 mo
611.202 699.828 611.496 699.14 611.97 698.03 cv
605.337 695.528 599.304 692.5 592.654 690.455 cv
592.654 692.401 589.725 690.466 610.726 700.939 cv
cp
f
621.272 698.932 mo
641.095 716.748 664.898 722.408 689.967 724.202 cv
621.272 698.932 li
cp
f
415.607 636.933 mo
415.377 636.095 415.026 635.294 414.503 633.84 cv
410.719 638.809 416.932 669.075 429.601 694.071 cv
431.781 692.979 432.297 697.419 415.607 636.933 cv
cp
f
456.996 770.323 mo
445.714 758.948 441.671 748.325 434.42 732.332 cv
428.447 719.16 427.015 711.21 423.824 698.471 cv
421.805 698.017 421.127 698.862 421.297 700.608 cv
421.626 704.01 421.71 707.472 422.389 710.797 cv
427.866 737.656 440.59 760.1 459.599 778.62 cv
465.072 783.953 470.679 787.554 477.197 790.18 cv
477.467 789.626 li
476.67 788.887 475.867 788.155 475.075 787.411 cv
469.033 781.731 462.845 776.217 456.996 770.323 cv
cp
f
473.847 754.736 mo
474.558 753.916 474.982 753.427 475.489 752.84 cv
470.092 746.048 460.533 735.854 458.333 734.542 cv
458.368 744.398 464.01 746.865 473.847 754.736 cv
cp
f
435.106 717.148 mo
434.219 717.735 433.412 718.269 432.278 719.021 cv
436.132 726.191 439.83 733.077 443.601 740.095 cv
444.44 739.498 444.946 739.137 445.418 738.801 cv
440.011 723.331 439.307 719.469 435.106 717.148 cv
cp
f
484.095 775.329 mo
483.455 777.464 518.865 830.161 573.297 847.733 cv
575.802 848.542 575.808 848.52 577.514 845.435 cv
573.516 843.136 569.835 840.791 565.973 838.851 cv
560.631 836.166 555.177 833.727 549.729 831.289 cv
522.261 818.99 503.555 791.519 484.095 775.329 cv
cp
f
522.516 798.907 mo
517.031 793.746 512.205 787.666 504.835 784.84 cv
504.387 785.764 504.058 786.44 503.582 787.418 cv
509.986 791.59 516.06 795.545 522.131 799.501 cv
522.259 799.304 522.388 799.106 522.516 798.907 cv
cp
f
410.898 548.289 mo
413.967 517.083 414.777 480.434 414.378 476.813 cv
402.197 487.604 399.853 488.627 382.375 511.739 cv
380.199 514.619 379.283 517.618 379.586 521.087 cv
381.199 522.306 382.143 521.566 383.132 520.177 cv
396.623 501.262 395.72 501.178 404.3 499.193 cv
404.752 501.472 405.123 503.48 405.551 505.476 cv
407.239 513.332 384.065 540.714 380.793 605.851 cv
386.598 602.821 378.125 594.458 396.584 539.543 cv
398.452 533.988 401.848 529.727 405.253 525.504 cv
410.057 525.643 406.804 531.464 408.045 550.445 cv
410.587 550.536 410.677 550.545 410.898 548.289 cv
cp
f
399.404 564.429 mo
398.049 564.53 397.021 564.605 395.571 564.713 cv
396.928 576.771 398.234 588.399 399.569 600.279 cv
400.767 600.123 401.661 600.008 402.846 599.856 cv
401.688 587.933 400.557 576.291 399.404 564.429 cv
cp
f
452.207 740.767 mo
452.859 740.354 453.476 739.962 454.471 739.331 cv
443.876 708.644 449.032 728.777 432.449 655.27 cv
439.82 658.103 446.709 697.427 499.422 741.758 cv
506.634 747.824 515.04 751.313 523.159 755.476 cv
524.458 756.141 524.917 755.402 525.107 754.204 cv
507.887 740.754 496.713 733.084 483.813 717.673 cv
440.325 665.723 446.777 676.108 428.586 635.87 cv
409.19 592.967 412.903 566.425 412.138 562.707 cv
409.915 568.612 408.009 590.356 412.138 608.614 cv
414.318 618.252 443.046 731.268 452.207 740.767 cv
cp
f
506.155 765.23 mo
506.241 765.082 506.327 764.934 506.411 764.786 cv
446.095 706.091 449.019 708.463 448.061 708.904 cv
447.767 727.298 491.915 758.838 506.155 765.23 cv
cp
f
450.16 745.836 mo
463.088 758.191 477.184 768.268 493.767 774.16 cv
485.492 764.796 463.437 748.277 450.16 745.836 cv
cp
f
1020.19 820.137 mo
1061.97 814.662 1091.37 801.024 1132.27 781.065 cv
1136.64 778.935 1139.85 775.614 1142.91 771.806 cv
1142.49 771.045 1142.12 770.371 1141.61 769.445 cv
1089.28 798.534 1048.23 806.461 1020.19 820.137 cv
cp
f
672.124 825.892 mo
684.104 825.243 696.051 823.988 708.36 822.69 cv
672.124 825.892 li
cp
f
641.053 851.294 mo
638.785 849.386 636.543 847.404 634.09 845.798 cv
628.129 841.896 621.419 839.869 616.536 833.293 cv
616.126 832.743 615.913 832.031 615.373 830.905 cv
672.124 825.892 li
620.296 828.694 567.861 820.107 482.778 754.223 cv
482.215 756.335 483.312 757.419 484.426 758.478 cv
490.6 764.349 496.633 770.393 502.98 776.042 cv
522.413 793.334 543.64 807.542 567.375 817.301 cv
577.106 821.3 586.934 825.043 596.634 829.129 cv
629.155 842.821 625.546 849.004 640.987 854.267 cv
642.322 853.137 642.005 852.093 641.053 851.294 cv
cp
f
962.544 850.209 mo
982.054 846.211 1000.18 838.441 1017.02 827.222 cv
986.58 839.54 955.632 849.6 922.725 851.946 cv
928.341 854.019 947.885 853.214 962.544 850.209 cv
cp
f
1160.23 443.12 mo
1160.23 455.049 li
1163.24 456.04 1165.82 456.889 1169.01 457.94 cv
1166.02 452.893 1163.29 448.286 1160.23 443.12 cv
cp
f
1184 714.88 mo
1153.18 755.695 1115.45 764.774 1057.37 797.517 cv
1056.47 798.021 1054.59 798.173 1055.38 799.869 cv
1056.16 801.535 1056.29 800.2 1077.44 790.776 cv
1109.8 776.362 1140.45 758.698 1169.3 737.46 cv
1182.48 727.762 1191.25 711.835 1192.45 703.591 cv
1192.29 703.503 1192.14 703.416 1191.99 703.326 cv
1189.39 706.506 1187.31 710.499 1184 714.88 cv
cp
f
839.397 857.672 mo
782.872 879.023 732.946 866.414 679.405 849.749 cv
679.36 849.942 679.316 850.136 679.27 850.33 cv
733.009 870.787 787.972 885.656 840.739 857.684 cv
840.173 857.409 839.779 857.528 839.397 857.672 cv
cp
f
937.962 838.247 mo
937.911 837.96 937.86 837.671 937.811 837.384 cv
929.04 837.068 895.032 843.851 870.935 843.677 cv
845.516 843.494 820.164 841.854 794.801 840.305 cv
727.738 836.205 725.569 830.671 696.382 834.146 cv
695.684 836.627 692.796 836.951 744.418 843.637 cv
764.511 846.241 784.688 847.837 804.905 848.817 cv
882.26 852.572 912.114 843.737 935.909 839.215 cv
936.624 839.078 937.278 838.578 937.962 838.247 cv
cp
f
719.064 853.28 mo
734.185 858.302 749.506 855.988 764.794 854.825 cv
749.634 851.288 734.442 848.783 719.064 853.28 cv
cp
f
846.707 876.139 mo
846.93 876.414 847.398 876.992 848.153 877.92 cv
854.066 872.218 859.742 866.743 865.947 860.758 cv
857.948 861.271 856.017 865.521 846.707 876.139 cv
cp
f
1243.58 627.31 mo
1234.31 634.628 1224.92 642.042 1215.54 649.456 cv
1215.79 641.92 1239.63 599.14 1241.07 578.604 cv
1240.08 578.375 1239.28 578.196 1238.47 578.012 cv
1230 592.927 1222.56 635.516 1182.72 683.14 cv
1174.69 692.752 1150.93 718.653 1130.89 731.806 cv
1090.26 758.458 1013.02 793.583 997.474 796.961 cv
970.829 802.753 958.578 806.683 937.3 809.347 cv
866.083 818.268 870.272 814.448 834.549 814.17 cv
830.038 814.135 764.621 813.729 760.137 814.055 cv
760.137 816.772 li
765.27 818.559 828.809 827.262 867.957 824.742 cv
892.111 823.188 949.131 814.247 971.681 810.56 cv
1064.11 795.447 1037.6 791.533 1114.83 750.121 cv
1183.89 713.086 1196.17 670.813 1216.75 656.184 cv
1225.08 650.265 1243.65 631.644 1244.15 630.265 cv
1244.48 629.367 1245.14 628.357 1243.58 627.31 cv
cp
f
715.749 723.408 mo
723.342 724.226 730.982 724.565 738.601 725.123 cv
738.663 724.876 738.725 724.631 738.788 724.384 cv
725.931 720.125 698.882 714.906 647.991 696.847 cv
617.434 686.002 606.994 671.842 598.043 664.948 cv
565.892 640.183 546.615 615.145 535.948 606.873 cv
538.186 612.424 539.501 617.451 542.804 621.555 cv
589.052 679.031 645.427 715.85 715.749 723.408 cv
cp
f
960.855 650.158 mo
961.771 649.921 962.656 649.547 963.622 649.215 cv
963.538 648.397 963.472 647.752 963.348 646.554 cv
933.838 652.346 904.748 658.061 876.49 667.724 cv
884.167 670.184 882.232 670.565 960.855 650.158 cv
cp
f
402.623 621.84 mo
394.679 665.792 376.62 692.451 369.139 711.885 cv
369.959 712.34 370.605 712.7 371.589 713.247 cv
394.791 667.058 388.112 673.219 393.115 671.328 cv
392.548 706.58 393.112 704.186 394.763 704.025 cv
395.603 700.848 394.354 710.808 402.378 640.078 cv
404.39 622.359 405.1 621.621 402.623 621.84 cv
cp
f
926.677 671.068 mo
928.506 675.798 938.355 673.682 943.196 671.672 cv
1008.35 644.623 1045.11 632.533 1056.29 626.158 cv
1057.91 625.234 1057.92 622.524 1054.43 622.942 cv
1011.63 628.096 948.986 660.423 936.3 666.564 cv
933.176 668.077 930.018 669.507 926.677 671.068 cv
cp
f
1150.11 464.871 mo
1154.07 503.425 1138.62 529.196 1136.74 548.519 cv
1137.66 548.793 li
1140.33 545.414 1141.82 539.533 1147.61 519.489 cv
1155.57 491.959 1157.59 464.05 1152.33 435.677 cv
1150.76 427.189 1147.27 415.955 1147.05 415.052 cv
1146.15 411.449 1145.02 407.891 1142.54 404.846 cv
1140.37 407.263 1139.21 409.708 1140.4 412.929 cv
1140.54 413.314 1148.28 447.074 1150.11 464.871 cv
cp
f
1140.21 602.365 mo
1144.03 604.889 1143.84 601.255 1154.83 564.632 cv
1164.18 533.43 1162.96 516.062 1164.03 473.187 cv
1164.11 469.902 1162.66 466.556 1158.61 467.722 cv
1157.86 468.84 1161.29 492.597 1153.89 532.998 cv
1150.32 552.517 1147.67 564.51 1140.21 602.365 cv
cp
f
640.658 664.114 mo
642.51 662.257 644.052 660.712 645.914 658.849 cv
643.708 654.791 639.359 649.599 637.854 647.915 cv
620.552 628.557 622.084 630.596 609.927 640.751 cv
621.651 646.689 631.801 654.537 640.658 664.114 cv
cp
f
421.699 495.763 mo
421.853 494.592 421.975 493.963 422.01 493.327 cv
425.04 438.793 425.463 445.612 422.692 443.35 cv
420.205 500.94 420.006 494.444 421.699 495.763 cv
cp
f
444.511 606.844 mo
446.578 590.308 441.66 575.316 436.457 560.36 cv
437.312 575.53 437.072 594.727 444.511 606.844 cv
cp
f
432.103 613.62 mo
448.73 650.067 445.828 643.765 447.633 647.157 cv
448.565 646.779 449.321 646.475 450.235 646.104 cv
434.083 585.824 416.888 582.731 441.243 491.752 cv
439.395 491.738 439.473 494.879 436.931 493.903 cv
440.55 486.559 444.431 479.589 447.62 472.157 cv
425.538 482.883 405.354 554.991 432.103 613.62 cv
cp
f
426.56 615.374 mo
425.971 615.733 li
427.653 622.871 430.06 629.775 432.112 636.986 cv
433.085 636.651 433.657 636.456 434.625 636.125 cv
426.533 613.007 428.036 616.527 426.56 615.374 cv
cp
f
502.423 610.354 mo
504.208 612.874 513.772 625.726 516.151 627.603 cv
515.614 621.952 498.747 594.555 491.061 548.313 cv
489.462 538.682 485.45 530.189 480.511 518.56 cv
479.185 524.288 479.611 527.891 481.531 532.205 cv
484.045 537.854 484.285 584.743 502.423 610.354 cv
cp
f
483.508 611.981 mo
488.224 645.085 569.623 689.931 570.407 689.903 cv
570.947 689.885 571.474 689.435 572.364 688.996 cv
569.423 685.572 548.506 667.398 534.152 658.399 cv
509.325 642.831 500.625 624.3 483.508 611.981 cv
cp
f
449.762 642.249 mo
452.133 670.14 457.971 697.09 465.423 723.545 cv
466.638 727.852 469.002 731.169 471.529 734.178 cv
473.881 733.393 473.089 733.629 468.455 714.345 cv
468.291 713.653 468.433 712.852 468.433 712.101 cv
468.682 712.031 468.933 711.96 469.181 711.889 cv
473.133 723.024 477.085 734.159 481.002 745.198 cv
485.973 744.857 472.469 720.771 465.561 685.951 cv
457.792 646.793 454.944 639.416 455.529 611.525 cv
456.169 580.947 448.302 513.632 460.058 474.438 cv
462.212 478.813 461.292 482.921 460.952 487.069 cv
461.731 486.303 462.353 485.536 462.622 484.615 cv
467.638 467.468 470.162 463.232 465.103 459.299 cv
458.296 465.171 456.054 461.662 450.467 493.023 cv
443.226 533.667 447.208 612.243 449.762 642.249 cv
cp
f
500.453 615.642 mo
500.438 615.549 500.455 615.428 500.406 615.366 cv
477.142 586.713 481.631 591.859 478.437 590.085 cv
480.754 599.906 493.594 614.176 500.453 615.642 cv
cp
f
461.755 545.496 mo
461.02 545.814 460.439 546.067 459.547 546.453 cv
465.919 602.642 474.689 649.999 513.278 690.499 cv
513.18 687.451 511.199 686.021 503.833 671.502 cv
471.275 607.325 464.288 552.425 461.755 545.496 cv
cp
f
434.625 636.125 mo
433.657 636.456 433.085 636.651 432.112 636.986 cv
430.06 629.775 427.653 622.871 425.971 615.733 cv
426.56 615.374 li
428.025 616.52 426.487 612.874 434.625 636.125 cv
cp
.494118 .301961 0 rgb
f
473.847 754.736 mo
464.212 747.028 458.368 744.388 458.333 734.542 cv
460.533 735.854 470.092 746.048 475.489 752.84 cv
474.982 753.427 474.558 753.917 473.847 754.736 cv
cp
f
493.767 774.16 mo
477.184 768.268 463.088 758.191 450.16 745.836 cv
463.492 748.287 485.556 764.872 493.767 774.16 cv
cp
f
445.418 738.801 mo
444.946 739.137 444.44 739.498 443.601 740.095 cv
439.83 733.077 436.132 726.191 432.278 719.021 cv
433.412 718.269 434.219 717.735 435.106 717.148 cv
439.411 719.527 440.185 723.823 445.418 738.801 cv
cp
f
503.582 787.418 mo
504.058 786.44 504.387 785.764 504.835 784.84 cv
512.205 787.666 517.031 793.746 522.516 798.907 cv
522.388 799.106 522.259 799.304 522.131 799.501 cv
516.06 795.545 509.986 791.59 503.582 787.418 cv
cp
f
425.971 615.733 mo
427.653 622.871 430.06 629.775 432.112 636.986 cv
433.085 636.651 433.657 636.456 434.625 636.125 cv
426.487 612.874 428.025 616.52 426.56 615.374 cv
425.971 615.733 li
cp
f
458.333 734.542 mo
458.368 744.388 464.212 747.028 473.847 754.736 cv
474.558 753.917 474.982 753.427 475.489 752.84 cv
470.092 746.048 460.533 735.854 458.333 734.542 cv
cp
f
493.767 774.16 mo
485.556 764.872 463.492 748.287 450.16 745.836 cv
463.088 758.191 477.184 768.268 493.767 774.16 cv
cp
f
432.278 719.021 mo
436.132 726.191 439.83 733.077 443.601 740.095 cv
444.44 739.498 444.946 739.137 445.418 738.801 cv
440.185 723.823 439.411 719.527 435.106 717.148 cv
434.219 717.735 433.412 718.269 432.278 719.021 cv
cp
f
504.835 784.84 mo
504.387 785.764 504.058 786.44 503.582 787.418 cv
509.986 791.59 516.06 795.545 522.131 799.501 cv
522.259 799.304 522.388 799.106 522.516 798.907 cv
517.031 793.746 512.205 787.666 504.835 784.84 cv
cp
f
1177.24 415.242 mo
1186.43 470.12 1170.88 523.88 1149.83 573.608 cv
1147.05 580.149 1156.19 585.872 1158.98 579.279 cv
1181.33 526.479 1197.21 470.438 1187.46 412.254 cv
1186.27 405.147 1176.06 408.159 1177.24 415.242 cv
cp
.968627 .611765 .192157 rgb
f
1217.83 442.412 mo
1210.09 520.389 1169.87 587.646 1130.66 652.046 cv
1126.95 658.137 1136.12 663.777 1139.81 657.717 cv
1180.2 591.376 1220.46 522.64 1228.43 442.412 cv
1229.14 435.229 1218.54 435.282 1217.83 442.412 cv
cp
f
327.777 500.481 mo
345.421 578.9 383.622 650.067 438.158 706.241 cv
443.054 711.283 450.555 703.346 445.652 698.297 cv
392.338 643.381 355.244 574.146 337.996 497.495 cv
336.415 490.463 326.193 493.44 327.777 500.481 cv
cp
f
362.674 486.583 mo
367.451 514.136 369.544 543.457 384.171 567.502 cv
400.191 593.838 419.102 618.647 437.558 643.096 cv
441.819 648.741 449.275 640.746 445.053 635.151 cv
427.158 611.445 408.863 587.377 393.322 561.831 cv
379.307 538.79 377.472 510.013 372.893 483.594 cv
371.662 476.493 361.447 479.501 362.674 486.583 cv
cp
f
315.334 590.005 mo
354.408 664.313 412.164 725.387 482.357 766.611 cv
488.329 770.118 493.681 760.417 487.707 756.909 cv
419.003 716.559 362.73 657.065 324.485 584.333 cv
321.165 578.017 312.008 583.675 315.334 590.005 cv
cp
f
657.731 727.508 mo
589.869 758.367 532.312 809.124 490.92 873.905 cv
487.083 879.908 496.262 885.536 500.071 879.576 cv
540.478 816.337 596.902 767.302 663.08 737.209 cv
669.329 734.368 663.938 724.686 657.731 727.508 cv
cp
f
635.038 715.974 mo
576.309 713.167 520.482 761.342 486.816 808.173 cv
482.683 813.923 491.884 819.526 495.967 813.844 cv
527.398 770.122 580.349 724.597 635.038 727.21 cv
641.857 727.535 641.841 716.299 635.038 715.974 cv
cp
f
608.638 637.761 mo
556.937 636.185 507.79 663.214 478.155 689.488 cv
474.516 692.714 482.615 695.857 486.211 692.67 cv
513.878 668.139 560.494 642.598 608.638 644.065 cv
614.64 644.248 614.627 637.942 608.638 637.761 cv
cp
f
879.906 694.548 mo
914.68 697.337 941.785 721.65 964.604 747.676 cv
988.983 775.48 1009.95 806.297 1028.06 839.004 cv
1031.51 845.237 1040.68 839.589 1037.21 833.333 cv
1016.85 796.555 992.791 761.496 964.39 731.18 cv
941.086 706.307 913.702 686.022 879.906 683.312 cv
873.105 682.765 873.138 694.005 879.906 694.548 cv
cp
f
950.806 669.955 mo
956.658 681.542 972.462 683.012 983.025 687.625 cv
1000.9 695.432 1017.98 705.389 1033.91 716.998 cv
1065.96 740.364 1092.66 770.786 1113.02 805.861 cv
1116.58 812.01 1125.75 806.372 1122.17 800.19 cv
1103.8 768.545 1080.59 740.673 1052.88 717.87 cv
1039.18 706.598 1024.56 696.627 1009.15 688.182 cv
1002.35 684.452 995.398 681.042 988.332 677.903 cv
981.729 674.969 963.386 671.074 959.957 664.284 cv
956.736 657.907 947.583 663.576 950.806 669.955 cv
cp
f
1027.06 650.672 mo
1077.62 650.25 1146.54 668.748 1172.22 720.063 cv
1175.42 726.455 1184.57 720.784 1181.37 714.392 cv
1153.88 659.449 1081.42 638.981 1027.06 639.437 cv
1020.24 639.493 1020.23 650.729 1027.06 650.672 cv
cp
f
1048.77 626.737 mo
1079.49 594.12 1117.4 545.022 1163.69 541.222 cv
1170.45 540.668 1170.51 529.427 1163.69 529.986 cv
1113.58 534.099 1074.45 583.573 1041.28 618.793 cv
1036.46 623.916 1043.95 631.863 1048.77 626.737 cv
cp
f
1874.52 847.323 mo
1874.52 823.789 1811.46 804.711 1733.66 804.711 cv
1655.86 804.711 1592.8 823.789 1592.8 847.323 cv
1592.8 870.858 1655.86 889.935 1733.66 889.935 cv
1811.46 889.935 1874.52 870.858 1874.52 847.323 cv
.760784 .760784 .760784 rgb
f
1831.63 691.946 mo
1828.83 594.151 1758.07 435.377 1666.25 438.008 cv
1574.42 440.638 1496.3 603.675 1499.1 701.47 cv
1501.9 799.265 1578.61 876.413 1670.44 873.782 cv
1762.26 871.152 1834.43 789.741 1831.63 691.946 cv
.909804 .470588 .176471 rgb
f
1831.62 691.731 mo
1831.62 691.719 1831.62 691.699 1831.62 691.687 cv
1831.62 691.702 1831.62 691.715 1831.62 691.731 cv
1831.62 691.473 mo
1831.62 691.461 1831.62 691.457 1831.62 691.445 cv
1831.62 691.455 1831.62 691.462 1831.62 691.473 cv
.945098 .913725 .898039 rgb
f
1668.93 873.818 mo
1669.15 873.814 1669.37 873.81 1669.59 873.804 cv
1669.37 873.81 1669.15 873.814 1668.93 873.818 cv
1670.07 873.793 mo
1670.19 873.789 1670.31 873.786 1670.44 873.782 cv
1720.7 872.343 1765.08 847.299 1794.49 808.879 cv
1794.49 808.879 li
1765.08 847.299 1720.7 872.343 1670.44 873.782 cv
1670.31 873.786 1670.19 873.789 1670.07 873.793 cv
.717647 .698039 .682353 rgb
f
1665.88 873.848 mo
1610.15 873.845 1560.41 844.477 1530.03 799.203 cv
1552.86 811.668 1578.67 818.697 1605.92 818.697 cv
1607.43 818.697 1608.95 818.675 1610.47 818.632 cv
1702.3 816.002 1774.47 734.59 1771.67 636.795 cv
1770.03 579.621 1745.14 501.65 1706.42 447.229 cv
1777.83 482.132 1829.05 608.48 1831.62 691.445 cv
1831.62 691.457 1831.62 691.461 1831.62 691.473 cv
1831.62 691.544 1831.62 691.616 1831.62 691.687 cv
1831.62 691.699 1831.62 691.719 1831.62 691.731 cv
1831.63 691.802 1831.63 691.875 1831.63 691.946 cv
1831.68 693.76 1831.71 695.569 1831.71 697.372 cv
1831.73 739.544 1817.81 778.417 1794.49 808.879 cv
1765.08 847.299 1720.7 872.343 1670.44 873.782 cv
1670.31 873.786 1670.19 873.789 1670.07 873.793 cv
1669.91 873.797 1669.75 873.801 1669.59 873.804 cv
1669.37 873.81 1669.15 873.814 1668.93 873.818 cv
1667.91 873.838 1666.9 873.848 1665.88 873.848 cv
.858823 .431373 .156863 rgb
f
1630.24 766.112 mo
1626.34 766.112 1622.43 765.814 1618.51 765.203 cv
1562.18 756.419 1526.34 686.329 1538.45 608.654 cv
1549.72 536.382 1598.54 483.005 1650.65 483.005 cv
1654.54 483.005 1658.45 483.303 1662.37 483.914 cv
1718.7 492.698 1754.54 562.787 1742.43 640.464 cv
1731.16 712.734 1682.34 766.112 1630.24 766.112 cv
.933333 .6 .372549 rgb
f
1715.11 507.066 mo
1715.3 511.669 1711.72 515.556 1707.12 515.748 cv
1702.52 515.939 1698.63 512.366 1698.44 507.763 cv
1698.25 503.162 1701.82 499.276 1706.43 499.082 cv
1711.03 498.89 1714.91 502.465 1715.11 507.066 cv
cp
.717647 .313726 .0352941 rgb
f
1744.11 533.878 mo
1744.27 537.634 1741.35 540.807 1737.59 540.964 cv
1733.83 541.122 1730.66 538.205 1730.5 534.447 cv
1730.35 530.69 1733.26 527.518 1737.02 527.36 cv
1740.78 527.203 1743.95 530.122 1744.11 533.878 cv
cp
f
1744.64 510.005 mo
1744.74 512.306 1742.95 514.25 1740.65 514.345 cv
1738.35 514.442 1736.41 512.655 1736.31 510.353 cv
1736.22 508.052 1738 506.108 1740.3 506.013 cv
1742.6 505.916 1744.55 507.705 1744.64 510.005 cv
cp
f
1710.81 465.928 mo
1710.97 469.82 1707.95 473.108 1704.06 473.269 cv
1700.16 473.432 1696.88 470.411 1696.71 466.517 cv
1696.55 462.625 1699.58 459.339 1703.47 459.176 cv
1707.36 459.014 1710.65 462.037 1710.81 465.928 cv
cp
f
1733.2 598.812 mo
1733.36 602.742 1730.31 606.06 1726.38 606.224 cv
1722.45 606.389 1719.13 603.338 1718.97 599.408 cv
1718.8 595.478 1721.86 592.161 1725.79 591.996 cv
1729.71 591.832 1733.03 594.884 1733.2 598.812 cv
cp
f
1527.38 647.741 mo
1527.52 650.981 1525 653.715 1521.76 653.851 cv
1518.53 653.986 1515.79 651.472 1515.66 648.232 cv
1515.52 644.994 1518.04 642.258 1521.27 642.123 cv
1524.51 641.987 1527.25 644.504 1527.38 647.741 cv
cp
f
1547.11 586.806 mo
1547.18 588.47 1545.89 589.873 1544.23 589.942 cv
1542.57 590.014 1541.16 588.721 1541.09 587.059 cv
1541.02 585.396 1542.31 583.992 1543.98 583.922 cv
1545.64 583.853 1547.04 585.144 1547.11 586.806 cv
cp
f
1642.03 758.944 mo
1642.17 762.359 1639.52 765.243 1636.1 765.385 cv
1632.69 765.528 1629.8 762.876 1629.66 759.462 cv
1629.52 756.048 1632.17 753.164 1635.59 753.021 cv
1639 752.876 1641.88 755.53 1642.03 758.944 cv
cp
f
1676.55 747.175 mo
1676.66 749.676 1674.71 751.791 1672.21 751.895 cv
1669.71 751.999 1667.6 750.057 1667.49 747.555 cv
1667.39 745.053 1669.33 742.939 1671.83 742.835 cv
1674.33 742.73 1676.45 744.673 1676.55 747.175 cv
cp
f
1621.56 547.224 mo
1625.96 555.194 li
1636.4 562.066 li
1645.19 554.646 li
1649.59 530.458 li
1647.12 556.569 li
1640.25 567.014 li
1644.1 567.014 li
1643.27 574.985 li
1637.5 585.704 li
1644.1 590.376 li
1651.79 589.002 li
1662.79 577.733 li
1669.93 568.938 li
1669.93 579.383 li
1668.29 574.16 li
1663.06 581.031 li
1650.14 593.401 li
1651.52 598.348 li
1660.04 601.921 li
1660.04 610.992 li
1656.46 614.289 li
1657.29 625.834 li
1653.44 630.781 li
1644.37 633.804 li
1641.35 629.407 li
1627.88 631.605 li
1627.33 638.355 li
1642.45 654.143 li
1654.27 652.77 li
1656.46 648.372 li
1658.11 650.57 li
1662.24 654.143 li
1657.02 654.143 li
1657.02 666.513 li
1654.27 655.519 li
1644.1 657.442 li
1647.12 670.086 li
1641.07 655.793 li
1635.58 651.671 li
1628.7 643.699 li
1621.56 645.897 li
1621.56 650.021 li
1617.99 650.57 li
1619.91 664.589 li
1617.99 668.711 li
1615.78 651.671 li
1610.01 647.547 li
1610.01 645.074 li
1604.79 646.448 li
1599.02 655.519 li
1594.9 668.711 li
1597.65 651.395 li
1600.39 645.074 li
1601.77 638.355 li
1589.13 638.355 li
1580.33 640.951 li
1564.11 647.272 li
1553.12 652.77 li
1574.28 640.402 li
1586.93 637.103 li
1593.25 629.956 li
1592.42 620.885 li
1586.93 619.695 li
1583.08 610.717 li
1588.85 600.271 li
1599.02 594.774 li
1589.95 601.921 li
1586.1 610.992 li
1592.7 615.664 li
1604.24 612.641 li
1611.53 606.593 li
1607.27 600.271 li
1613.59 596.149 li
1616.06 588.452 li
1611.53 584.604 li
1602.87 590.376 li
1595.72 593.949 li
1611.53 582.681 li
1601.77 553.821 li
1611.53 577.733 li
1613.86 583.505 li
1618.26 585.979 li
1628.98 588.178 li
1634.75 584.056 li
1638.78 577.183 li
1635.3 563.99 li
1625.32 556.478 li
1621.56 547.224 li
cp
.239216 .239216 .239216 rgb
f
1619.77 668.163 mo
1617.71 671.734 li
1617.71 677.371 li
1619.77 668.163 li
cp
0 0 0 rgb
f
1618.74 678.331 mo
1619.77 685.478 li
1621.83 697.984 li
1623.07 709.665 li
1621.56 687.952 li
1618.74 678.331 li
cp
f
1613.86 583.505 mo
1618.81 589.002 li
1626.92 591.751 li
1635.16 587.627 li
1638.78 577.183 li
1634.75 584.056 li
1628.98 588.178 li
1618.26 585.979 li
1613.86 583.505 li
cp
.941176 .901961 .843137 rgb
f
1637.5 585.704 mo
1638.78 590.102 li
1643.54 593.401 li
1650.14 593.401 li
1663.75 581.031 li
1668.29 574.16 li
1670.09 579.881 li
1669.93 568.938 li
1662.79 577.733 li
1651.79 589.002 li
1644.1 590.376 li
1637.5 585.704 li
cp
f
1586.1 610.992 mo
1590.04 617.862 li
1595.54 620.245 li
1603.6 618.961 li
1611.53 606.593 li
1604.24 612.641 li
1592.7 615.664 li
1586.1 610.992 li
cp
f
1018.1 1635.06 mo
1018.1 1611.53 933.301 1592.45 828.695 1592.45 cv
724.09 1592.45 639.29 1611.53 639.29 1635.06 cv
639.29 1658.6 724.09 1677.68 828.695 1677.68 cv
933.301 1677.68 1018.1 1658.6 1018.1 1635.06 cv
.760784 .760784 .760784 rgb
f
666.417 1239 mo
666.417 1239 847.065 1304.56 848.912 1316.57 cv
849.949 1323.4 857.624 1333.53 856.45 1340.33 cv
856.229 1341.58 855.958 1342.83 855.664 1344.05 cv
855.662 1344.07 li
850.999 1362.37 836.787 1375.96 836.787 1375.96 cv
827.741 1365.06 li
826.382 1363.41 li
825.251 1365.7 li
816.98 1382.84 li
801.377 1374.83 li
783.526 1414.7 li
757.61 1386.7 li
745.051 1391.48 li
741.219 1386.67 li
715.854 1403.79 li
700.588 1385.13 li
690.837 1373.23 li
677.807 1386.83 li
656.968 1408.54 li
639.152 1388.35 li
639.155 1388.33 li
628.066 1362.66 li
609.415 1392.93 li
609.415 1392.93 592.04 1376.85 584.704 1376.45 cv
584.704 1376.45 574.617 1353.83 571.769 1345.68 cv
570.837 1343.08 569.608 1333.49 569.608 1333.49 cv
568.932 1329.51 568.609 1325.5 568.688 1321.5 cv
580.808 1306.98 li
616.668 1278.51 li
656.114 1247.18 li
666.417 1239 li
.960784 .701961 .537255 rgb
f
823.876 1263.62 mo
823.876 1263.62 802.498 1186.06 710.818 1186.06 cv
619.139 1186.06 579.588 1279.9 585.792 1337.29 cv
591.996 1394.68 639.299 1426.94 714.355 1422.28 cv
789.412 1417.63 870.407 1369.86 823.876 1263.62 cv
1 .861961 .243922 rgb
f
630.679 1357.69 mo
630.679 1357.69 587.343 1450.52 568.73 1492.39 cv
550.119 1534.27 585.047 1597.81 585.047 1597.81 cv
825.198 1592.32 li
825.198 1592.32 861.911 1574.56 858.387 1509.84 cv
854.325 1435.28 794.923 1355.42 794.923 1355.42 cv
630.679 1357.69 li
f
687.384 1263.23 mo
687.384 1276.08 676.968 1286.5 664.119 1286.5 cv
651.27 1286.5 640.854 1276.08 640.854 1263.23 cv
640.854 1250.38 651.27 1239.96 664.119 1239.96 cv
676.968 1239.96 687.384 1250.38 687.384 1263.23 cv
cp
0 0 0 rgb
f
672.65 1255.86 mo
672.65 1260.14 668.658 1263.62 663.731 1263.62 cv
658.806 1263.62 654.813 1260.14 654.813 1255.86 cv
654.813 1251.58 658.806 1248.11 663.731 1248.11 cv
668.658 1248.11 672.65 1251.58 672.65 1255.86 cv
cp
1 1 1 rgb
f
773.933 1263.23 mo
773.933 1276.08 763.516 1286.5 750.667 1286.5 cv
737.818 1286.5 727.401 1276.08 727.401 1263.23 cv
727.401 1250.38 737.818 1239.96 750.667 1239.96 cv
763.516 1239.96 773.933 1250.38 773.933 1263.23 cv
cp
0 0 0 rgb
f
759.198 1255.86 mo
759.198 1260.14 755.204 1263.62 750.279 1263.62 cv
745.354 1263.62 741.36 1260.14 741.36 1255.86 cv
741.36 1251.58 745.354 1248.11 750.279 1248.11 cv
755.204 1248.11 759.198 1251.58 759.198 1255.86 cv
cp
1 1 1 rgb
f
681.569 1323.14 mo
681.569 1323.14 703.525 1376.79 707.742 1381.01 cv
711.959 1385.23 727.401 1387.7 727.401 1387.7 cv
724.609 1360.07 li
741.36 1330.12 li
681.569 1323.14 li
.176471 .101961 .0705882 rgb
f
751.947 1333.32 mo
751.947 1333.32 753.11 1313.25 728.682 1304.82 cv
704.253 1296.38 681.569 1323.14 681.569 1323.14 cv
681.569 1323.14 705.887 1334.29 721.701 1335.64 cv
737.515 1336.99 751.947 1333.32 751.947 1333.32 cv
.909804 .470588 .176471 rgb
f
736.823 1374.61 mo
736.823 1374.61 731.27 1387.61 727.401 1391.48 cv
722.032 1396.85 713.17 1394.71 707.446 1391.12 cv
700.343 1386.67 699.224 1378.52 696.404 1371.24 cv
693.637 1364.1 691.104 1356.88 688.65 1349.63 cv
685.676 1340.84 684.263 1332.01 681.569 1323.14 cv
681.569 1323.14 700.471 1371.12 708.468 1374.61 cv
716.467 1378.1 736.823 1374.61 736.823 1374.61 cv
cp
f
585.792 1337.29 mo
606.401 1456.88 809.082 1436.97 835.568 1341.08 cv
823.606 1422.7 689.065 1448.4 625.746 1407.33 cv
601.041 1391.64 587.19 1366.42 585.792 1337.29 cv
cp
.74902 .619608 .0431373 rgb
f
739.607 1332.66 mo
739.607 1332.66 736.33 1329.85 727.401 1327.04 cv
718.473 1324.23 709.385 1312.27 711.464 1310.19 cv
713.007 1308.65 718.73 1308.45 721.583 1308.45 cv
722.576 1308.45 723.221 1308.47 723.221 1308.47 cv
724.333 1308.34 725.386 1308.28 726.383 1308.28 cv
735.371 1308.28 739.782 1313.19 741.36 1317.68 cv
743.115 1322.68 739.607 1332.66 739.607 1332.66 cv
.945098 .580392 .239216 rgb
f
856.737 1334.02 mo
857.475 1337.22 859.501 1342.16 857.098 1347.59 cv
840.407 1316.06 li
838.368 1319.4 li
794.049 1285.12 li
767.548 1309.54 li
739.164 1298.38 li
738.709 1298.42 738.204 1298.46 737.696 1298.52 cv
708.051 1316.69 li
685.117 1288.82 li
651.122 1328.08 li
608.572 1310.15 li
586.301 1352.62 li
572.649 1335.17 li
572.657 1335.41 573.26 1363.07 573.326 1365.18 cv
573.26 1365.05 572.731 1364.06 571.997 1362.17 cv
570.169 1357.45 563.601 1333.49 566.768 1316.68 cv
572.185 1287.88 578.011 1273.18 592.188 1247.18 cv
600.957 1231.11 611.028 1217.08 622.061 1205.27 cv
696.065 1125.95 814.875 1146.73 856.737 1334.02 cv
cp
.909804 .470588 .176471 rgb
f
838.042 1317.55 mo
840.513 1313.52 li
857.098 1347.59 li
840.326 1318.58 li
838.717 1321.22 li
794.137 1286.75 li
767.827 1310.99 li
738.979 1299.63 li
738.676 1299.66 738.372 1299.69 738.118 1299.72 cv
707.788 1318.32 li
685.106 1290.74 li
651.497 1329.58 li
608.584 1310.14 li
586.645 1354.66 li
572.858 1335.58 li
573.335 1365.19 li
573.337 1365.17 572.785 1364.17 572.009 1362.15 cv
572.858 1335.58 li
586.111 1350.31 li
608.584 1310.14 li
651.135 1328.07 li
685.149 1286.88 li
708.064 1316.68 li
737.551 1297.26 li
737.957 1297.21 738.312 1297.19 739.349 1297.09 cv
767.602 1308.99 li
793.987 1283.47 li
838.042 1317.55 li
cp
1 .94902 .921569 rgb
f
791.18 1236.37 mo
789.472 1237.12 788.995 1239.78 790.112 1242.31 cv
791.231 1244.84 793.521 1246.28 795.229 1245.52 cv
796.937 1244.77 797.414 1242.11 796.295 1239.58 cv
795.178 1237.05 792.886 1235.61 791.18 1236.37 cv
cp
.717647 .368627 .172549 rgb
f
774.741 1218.69 mo
772.464 1219.7 771.437 1222.36 772.442 1224.63 cv
773.448 1226.91 776.109 1227.94 778.386 1226.93 cv
780.663 1225.93 781.69 1223.26 780.685 1220.99 cv
779.679 1218.71 777.018 1217.68 774.741 1218.69 cv
cp
f
803.729 1269.22 mo
801.108 1270.38 799.923 1273.44 801.083 1276.06 cv
802.24 1278.68 805.304 1279.86 807.924 1278.71 cv
810.545 1277.55 811.729 1274.48 810.572 1271.87 cv
809.413 1269.24 806.35 1268.06 803.729 1269.22 cv
cp
f
750.722 1188.56 mo
748.056 1189.75 746.851 1192.86 748.03 1195.53 cv
749.208 1198.19 752.326 1199.4 754.992 1198.22 cv
757.659 1197.04 758.864 1193.93 757.686 1191.26 cv
756.506 1188.59 753.388 1187.39 750.722 1188.56 cv
cp
f
709.9 1181.5 mo
707.764 1182.45 706.797 1184.94 707.742 1187.08 cv
708.688 1189.22 711.184 1190.18 713.322 1189.24 cv
715.458 1188.29 716.423 1185.8 715.48 1183.66 cv
714.534 1181.52 712.036 1180.56 709.9 1181.5 cv
cp
f
869.546 1489.64 mo
869.67 1500.7 868.76 1511.54 866.875 1522.04 cv
853.299 1597.89 789.51 1655.71 712.148 1656.62 cv
672.741 1657.1 636.511 1642.73 608.389 1618.54 cv
573.602 1588.65 551.229 1543.78 550.599 1493.38 cv
550.38 1474.56 553.555 1459 554.182 1454.29 cv
554.937 1454.29 581.866 1441.59 582.181 1441.44 cv
581.835 1440.09 587.492 1462.05 589.125 1468.43 cv
589.566 1468.49 590.037 1468.59 590.476 1468.65 cv
591.42 1468.27 607.004 1462.33 607.319 1462.21 cv
615.426 1471.92 li
642.859 1441.09 li
642.985 1441.22 li
643.11 1441.41 643.424 1441.81 643.927 1442.47 cv
644.023 1442.6 644.023 1442.6 644.023 1442.6 cv
646.409 1445.68 652.978 1454.19 669.285 1475.44 cv
685.279 1475.94 702.406 1476.19 721.699 1475.81 cv
732.823 1453.38 li
736.469 1458.37 li
752.18 1440.43 li
785.332 1469.94 li
811.444 1458.37 li
829.544 1467.24 li
838.027 1465.73 845.224 1464.06 850.942 1462.3 cv
855.215 1449.76 li
865.837 1452.62 li
865.775 1452.47 li
867.472 1453.13 869.451 1483.07 869.546 1489.64 cv
.909804 .470588 .176471 rgb
f
865.837 1452.62 mo
865.771 1452.47 li
865.775 1452.46 li
867.51 1454.58 869.09 1474.49 869.336 1477.46 cv
881.23 1630.13 712.769 1711.9 608.389 1618.54 cv
714.34 1706.24 876.086 1628.62 868.506 1477.52 cv
868.33 1474.27 867.326 1454.52 865.774 1452.47 cv
865.777 1452.46 li
865.837 1452.62 li
.658824 .286275 .0352941 rgb
f
708.558 1655.37 mo
674.128 1655.37 638.938 1643.82 608.389 1618.54 cv
630.817 1622.87 651.677 1624.83 671.043 1624.83 cv
769.812 1624.84 830.042 1573.72 865.196 1524.42 cv
849.047 1605.04 780.456 1655.37 708.558 1655.37 cv
.862745 .32549 .0941176 rgb
f
710.265 1656.63 mo
671.587 1656.63 636.063 1642.35 608.389 1618.54 cv
608.389 1618.54 li
638.938 1643.82 674.128 1655.37 708.558 1655.37 cv
780.456 1655.37 849.047 1605.04 865.196 1524.42 cv
865.763 1523.62 866.321 1522.83 866.875 1522.04 cv
853.299 1597.89 789.51 1655.71 712.148 1656.62 cv
711.52 1656.63 710.891 1656.63 710.265 1656.63 cv
.623529 .196078 .0196078 rgb
f
566.313 1511.32 mo
566.313 1511.32 579.667 1573.38 640.156 1593.02 cv
700.646 1612.66 757.993 1565.52 763.492 1542.75 cv
768.991 1519.96 555.316 1439.83 566.313 1511.32 cv
cp
.929412 .537255 .215686 rgb
f
582.181 1441.44 mo
589.125 1468.43 li
590.476 1468.65 li
582.181 1441.44 li
cp
1 1 1 rgb
f
607.319 1462.21 mo
615.426 1471.92 li
616.745 1470.44 li
607.319 1462.21 li
cp
f
642.859 1441.09 mo
669.285 1475.44 li
675.702 1475.62 li
642.859 1441.09 li
cp
f
732.824 1453.38 mo
736.469 1458.37 li
739.588 1454.81 li
734.819 1453.38 li
732.824 1453.38 li
cp
f
752.18 1440.43 mo
785.332 1469.94 li
790.697 1467.56 li
752.18 1440.43 li
cp
f
798.438 1604.99 mo
798.438 1609.02 795.174 1612.28 791.149 1612.28 cv
787.122 1612.28 783.857 1609.02 783.857 1604.99 cv
783.857 1600.96 787.122 1597.7 791.149 1597.7 cv
795.174 1597.7 798.438 1600.96 798.438 1604.99 cv
cp
.607843 .294118 .121569 rgb
f
770.317 1601.06 mo
770.317 1602.92 768.814 1604.42 766.958 1604.42 cv
765.102 1604.42 763.597 1602.92 763.597 1601.06 cv
763.597 1599.2 765.102 1597.7 766.958 1597.7 cv
768.814 1597.7 770.317 1599.2 770.317 1601.06 cv
cp
f
744.883 1612.39 mo
744.883 1613.33 744.124 1614.09 743.189 1614.09 cv
742.255 1614.09 741.496 1613.33 741.496 1612.39 cv
741.496 1611.46 742.255 1610.7 743.189 1610.7 cv
744.124 1610.7 744.883 1611.46 744.883 1612.39 cv
cp
f
754.581 1630.47 mo
754.581 1633.15 752.41 1635.32 749.731 1635.32 cv
747.054 1635.32 744.883 1633.15 744.883 1630.47 cv
744.883 1627.79 747.054 1625.62 749.731 1625.62 cv
752.41 1625.62 754.581 1627.79 754.581 1630.47 cv
cp
f
723.563 1628.83 mo
723.563 1629.74 722.83 1630.47 721.924 1630.47 cv
721.019 1630.47 720.286 1629.74 720.286 1628.83 cv
720.286 1627.93 721.019 1627.19 721.924 1627.19 cv
722.83 1627.19 723.563 1627.93 723.563 1628.83 cv
cp
f
813.377 1577.51 mo
813.377 1579.13 812.057 1580.45 810.431 1580.45 cv
808.804 1580.45 807.485 1579.13 807.485 1577.51 cv
807.485 1575.88 808.804 1574.56 810.431 1574.56 cv
812.057 1574.56 813.377 1575.88 813.377 1577.51 cv
cp
f
690.883 1623.1 mo
690.883 1624.74 689.552 1626.07 687.909 1626.07 cv
686.265 1626.07 684.934 1624.74 684.934 1623.1 cv
684.934 1621.46 686.265 1620.13 687.909 1620.13 cv
689.552 1620.13 690.883 1621.46 690.883 1623.1 cv
cp
f
667.102 1625.97 mo
667.102 1627.55 665.818 1628.83 664.234 1628.83 cv
662.652 1628.83 661.367 1627.55 661.367 1625.97 cv
661.367 1624.38 662.652 1623.1 664.234 1623.1 cv
665.818 1623.1 667.102 1624.38 667.102 1625.97 cv
cp
f
649.368 1619.84 mo
649.368 1621.64 647.911 1623.1 646.113 1623.1 cv
644.317 1623.1 642.859 1621.64 642.859 1619.84 cv
642.859 1618.05 644.317 1616.59 646.113 1616.59 cv
647.911 1616.59 649.368 1618.05 649.368 1619.84 cv
cp
f
837.093 1548.32 mo
837.093 1550.09 835.652 1551.54 833.876 1551.54 cv
832.101 1551.54 830.659 1550.09 830.659 1548.32 cv
830.659 1546.54 832.101 1545.1 833.876 1545.1 cv
835.652 1545.1 837.093 1546.54 837.093 1548.32 cv
cp
f
831.642 1576.03 mo
831.642 1576.85 830.981 1577.51 830.167 1577.51 cv
829.355 1577.51 828.695 1576.85 828.695 1576.03 cv
828.695 1575.22 829.355 1574.56 830.167 1574.56 cv
830.981 1574.56 831.642 1575.22 831.642 1576.03 cv
cp
f
798.439 1656.63 mo
850.43 1647.86 li
876.616 1676.82 li
841.526 1680.48 li
823.196 1690.43 li
798.439 1656.63 li
.909804 .470588 .176471 rgb
f
825.292 1682.58 mo
809.056 1662.41 li
815.842 1658.32 822.608 1656.75 828.998 1656.75 cv
849.978 1656.75 866.875 1673.67 866.875 1673.67 cv
845.979 1675.51 li
825.292 1682.58 li
.921569 .54902 .298039 rgb
f
831.642 1585.45 mo
841.74 1572.65 li
831.642 1574.56 li
833.876 1560.94 li
823.902 1570.05 li
818.332 1551.54 li
815.21 1589.33 li
801.791 1597.21 li
818.098 1599.71 li
794.923 1616.59 li
821.536 1609.41 li
831.642 1585.45 li
cp
.239216 .239216 .239216 rgb
f
807.485 1607.21 mo
928.449 1635.89 li
928.449 1635.89 938.892 1647.77 937.749 1665.84 cv
936.605 1683.92 942.733 1698.72 951.338 1697.57 cv
959.942 1696.42 963.346 1687.24 960.524 1666.11 cv
957.7 1644.99 955.047 1638.31 954.968 1623.38 cv
954.89 1608.46 961.42 1545.23 954.785 1521.86 cv
948.527 1499.82 939.68 1495.66 934.512 1503.07 cv
929.343 1510.48 933.369 1521.14 933.369 1521.14 cv
933.369 1521.14 939.828 1565.38 938.487 1581.98 cv
938.487 1581.98 933.405 1520.39 929.245 1516.92 cv
925.086 1513.44 917.453 1518.79 920.871 1532.07 cv
924.287 1545.35 930.179 1607.88 926.505 1613.15 cv
922.829 1618.42 816.39 1575.06 816.39 1575.06 cv
814.12 1589.51 li
801.791 1597.21 li
816.786 1599.88 li
807.485 1607.21 li
cp
.454902 .235294 .0901961 rgb
f
600.829 1596.69 mo
590.73 1583.89 li
600.829 1585.79 li
598.594 1572.18 li
608.568 1581.29 li
614.139 1562.77 li
617.258 1600.57 li
630.68 1608.44 li
614.373 1610.94 li
637.547 1627.82 li
613.339 1621.3 li
600.829 1596.69 li
cp
.239216 .239216 .239216 rgb
f
623.244 1617.41 mo
493.138 1645.67 li
493.138 1645.67 481.902 1657.45 483.363 1675.56 cv
484.826 1693.67 478.325 1708.43 468.936 1707.17 cv
459.547 1705.92 455.729 1696.68 458.551 1675.56 cv
461.374 1654.44 464.185 1647.77 464.092 1632.83 cv
463.999 1617.88 456.125 1554.47 463.077 1531.14 cv
469.631 1509.15 479.221 1505.08 484.941 1512.57 cv
490.66 1520.05 486.403 1530.68 486.403 1530.68 cv
486.403 1530.68 479.896 1574.91 481.553 1591.56 cv
481.553 1591.56 486.355 1529.93 490.845 1526.5 cv
495.334 1523.07 503.716 1528.52 500.151 1541.78 cv
496.587 1555.04 490.916 1617.6 494.983 1622.92 cv
499.051 1628.24 615.797 1587.27 615.797 1587.27 cv
617.152 1600.58 li
630.68 1608.44 li
614.373 1610.94 li
623.244 1617.41 li
cp
.454902 .235294 .0901961 rgb
f
714.555 1181.68 mo
714.555 1181.68 634.762 1191.14 619.181 1246.91 cv
603.6 1302.68 669.64 1227.94 726.507 1236.75 cv
783.375 1245.56 753.41 1181.68 714.555 1181.68 cv
cp
.929412 .537255 .215686 rgb
f
2684.02 1265.29 mo
2684.02 1265.29 2708.78 1248.04 2715.28 1241.53 cv
2728.59 1228.22 2747.16 1196.13 2747.16 1196.13 cv
2676.26 1221.97 li
2673.19 1258.67 li
2684.02 1265.29 li
cp
.682353 .352941 .133333 rgb
f
2674.7 1194.63 mo
2674.7 1194.63 2693.94 1192.53 2710.47 1192.53 cv
2727.01 1192.53 2747.16 1196.13 2747.16 1196.13 cv
2747.16 1196.13 2715.94 1234.32 2703.13 1240.33 cv
2690.33 1246.34 2677.7 1247.36 2677.7 1247.36 cv
2674.7 1194.63 li
cp
.909804 .470588 .176471 rgb
f
2600.79 1646.21 mo
2600.79 1622.67 2515.99 1603.6 2411.39 1603.6 cv
2306.78 1603.6 2221.98 1622.67 2221.98 1646.21 cv
2221.98 1669.74 2306.78 1688.82 2411.39 1688.82 cv
2515.99 1688.82 2600.79 1669.74 2600.79 1646.21 cv
cp
.760784 .760784 .760784 rgb
f
2249.2 1400.5 mo
2252.11 1376.64 2230.28 1359.24 2211.88 1366.36 cv
2205.94 1368.66 2199.25 1365.71 2196.95 1359.76 cv
2191.3 1345.15 2210.55 1343.1 2209.13 1344.06 cv
2240.54 1344.1 2261.24 1374.74 2249.2 1400.5 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
2571.14 1133.58 mo
2593.47 1124.68 2598.25 1097.17 2583.17 1084.45 cv
2578.3 1080.34 2577.68 1073.06 2581.79 1068.19 cv
2591.89 1056.22 2602.93 1072.11 2601.41 1071.33 cv
2616.45 1098.9 2599.51 1131.77 2571.14 1133.58 cv
cp
f
2260.14 1402.62 mo
2237.03 1387.37 2220.52 1406.04 2216.22 1387.43 cv
2210.01 1360.53 2249.83 1371.47 2260.14 1402.62 cv
cp
f
2479.07 1560.62 mo
2479.07 1560.62 2473.96 1576.25 2476.66 1581.37 cv
2479.37 1586.48 2507.63 1630.97 2507.63 1636.08 cv
2507.63 1641.2 2490.19 1650.81 2484.18 1650.81 cv
2478.16 1650.81 2468.99 1643.15 2457.12 1655.02 cv
2445.24 1666.9 2456.82 1677.27 2462.53 1677.27 cv
2468.24 1677.27 2513.04 1662.54 2520.56 1662.54 cv
2528.07 1662.54 2590.01 1692 2600.23 1689 cv
2610.45 1685.99 2618.87 1665.25 2597.22 1663.44 cv
2575.57 1661.64 2546.86 1654.88 2550.02 1651.72 cv
2553.17 1648.56 2602.03 1654.72 2608.04 1651.72 cv
2614.06 1648.71 2622.18 1636.38 2605.04 1632.48 cv
2587.9 1628.57 2541.6 1646.61 2525.67 1635.48 cv
2509.73 1624.36 2503.12 1565.13 2503.12 1565.13 cv
2511.84 1552.2 li
2478.47 1559.12 li
2479.07 1560.62 li
cp
.454902 .235294 .0901961 rgb
f
2414.93 1546.69 mo
2414.93 1546.69 2400.9 1565.93 2398.5 1576.35 cv
2396.09 1586.78 2393.69 1599.61 2393.69 1599.61 cv
2393.69 1599.61 2379.25 1606.82 2367.23 1604.22 cv
2355.2 1601.61 2338.97 1602.42 2338.97 1608.83 cv
2338.97 1615.24 2338.77 1622.46 2353.2 1622.46 cv
2367.63 1622.46 2389.68 1618.85 2399.7 1620.25 cv
2409.72 1621.65 2457.25 1630.48 2473.53 1627.97 cv
2485.66 1626.09 2486.79 1621.55 2482.28 1617.04 cv
2477.77 1612.54 2470.25 1614.44 2470.25 1614.44 cv
2470.25 1614.44 2439.99 1614.84 2428.96 1612.24 cv
2428.96 1612.24 2470.76 1614.54 2473.46 1611.83 cv
2476.17 1609.13 2473.26 1603.01 2464.04 1604.22 cv
2454.82 1605.42 2412.33 1603.61 2409.12 1600.41 cv
2405.92 1597.2 2444.6 1553.51 2444.6 1553.51 cv
2414.93 1546.69 li
cp
f
2514.15 1295.35 mo
2514.15 1295.35 2481.08 1280.92 2443.2 1295.35 cv
2405.32 1309.78 2333.16 1375.92 2299.48 1382.53 cv
2265.81 1389.15 2246.57 1375.32 2243.56 1378.33 cv
2240.56 1381.33 2255.41 1431.84 2272.85 1458.9 cv
2290.29 1485.96 2378.56 1557.3 2469.66 1564.73 cv
2580.4 1573.77 2633.81 1516.63 2648.84 1481.15 cv
2663.87 1445.67 2668.08 1358.52 2641.03 1331.46 cv
2613.97 1304.4 2514.15 1295.35 2514.15 1295.35 cv
cp
1 .896471 .432941 rgb
f
2589.92 1131.75 mo
2589.92 1131.75 2525.62 1129.39 2496.13 1176.29 cv
2449.83 1249.94 2482.06 1341.34 2569.79 1359.14 cv
2631.17 1371.6 2695.98 1337.76 2702.36 1271.29 cv
2706.57 1227.4 2696.95 1141.93 2589.92 1131.75 cv
cp
f
2639.93 1344.25 mo
2602.11 1354.47 2522.61 1325.61 2503.37 1291.33 cv
2484.13 1257.06 2481.12 1206.55 2510.6 1159.65 cv
2510.9 1159.18 2511.2 1158.72 2511.49 1158.27 cv
2505.81 1163.27 2500.58 1169.22 2496.13 1176.29 cv
2449.83 1249.94 2482.06 1341.33 2569.79 1359.14 cv
2614.68 1368.25 2661.41 1352.6 2685.77 1317.53 cv
2672.63 1330.37 2656.57 1339.75 2639.93 1344.25 cv
cp
.74902 .619608 .0431373 rgb
f
2658.43 1207.45 mo
2658.43 1220.3 2648.01 1230.71 2635.17 1230.71 cv
2622.32 1230.71 2611.9 1220.3 2611.9 1207.45 cv
2611.9 1194.6 2622.32 1184.18 2635.17 1184.18 cv
2648.01 1184.18 2658.43 1194.6 2658.43 1207.45 cv
cp
0 0 0 rgb
f
2643.7 1200.08 mo
2643.7 1204.36 2639.71 1207.84 2634.78 1207.84 cv
2629.85 1207.84 2625.86 1204.36 2625.86 1200.08 cv
2625.86 1195.79 2629.85 1192.32 2634.78 1192.32 cv
2639.71 1192.32 2643.7 1195.79 2643.7 1200.08 cv
cp
1 1 1 rgb
f
2482.2 1371.32 mo
2482.2 1371.32 2369.17 1382.43 2275.19 1483.47 cv
2275.19 1483.47 2293.48 1501.4 2316.47 1504.83 cv
2339.45 1508.26 2357.48 1488.63 2357.48 1488.63 cv
2357.48 1488.63 2347.87 1505.54 2370.62 1510.69 cv
2393.38 1515.84 2405 1493.73 2405 1493.73 cv
2405 1493.73 2410.97 1520.3 2428.9 1511.85 cv
2446.83 1503.41 2452.83 1482.16 2452.83 1482.16 cv
2452.83 1482.16 2470.71 1502.76 2500.82 1479.15 cv
2530.93 1455.54 2547.58 1439.66 2547.58 1439.66 cv
2538.55 1437.16 li
2508.11 1428.74 2485.83 1402.7 2482.2 1371.32 cv
cp
1 .752941 0 rgb
f
2275.19 1483.47 mo
2326.44 1526.02 2351.49 1489.15 2368.73 1472.37 cv
2365.62 1482.48 2353.09 1494.93 2361.47 1502.9 cv
2385.99 1525.02 2405.92 1484.34 2406.29 1484.14 cv
2407.81 1487.89 2411.42 1517.5 2428.97 1507.68 cv
2445.99 1498.84 2450.91 1476.7 2451.44 1475.82 cv
2476.86 1482.18 2456.55 1515.89 2547.58 1439.66 cv
2520.15 1468.37 2483.03 1507.98 2454.37 1487.79 cv
2443.99 1513.75 2416.36 1531.03 2403.81 1501.77 cv
2383.75 1525.28 2352.32 1513.2 2352.34 1496.86 cv
2325.65 1516.12 2296.63 1505.7 2275.19 1483.47 cv
cp
.74902 .619608 .0431373 rgb
f
2455.08 1433.73 mo
2437 1454.7 2453.42 1473.46 2434.41 1475.35 cv
2406.94 1478.08 2422.87 1439.98 2455.08 1433.73 cv
cp
1 .827451 .054902 rgb
f
2405.64 1443.85 mo
2393.69 1457.71 2404.54 1470.11 2391.98 1471.35 cv
2373.82 1473.16 2384.35 1447.98 2405.64 1443.85 cv
cp
f
2361.93 1450.76 mo
2349.98 1464.62 2360.83 1477.02 2348.26 1478.27 cv
2330.11 1480.07 2340.64 1454.89 2361.93 1450.76 cv
cp
f
2693.78 820.307 mo
2693.78 796.772 2598.65 777.695 2481.28 777.695 cv
2363.92 777.695 2268.77 796.772 2268.77 820.307 cv
2268.77 843.842 2363.92 862.921 2481.28 862.921 cv
2598.65 862.921 2693.78 843.842 2693.78 820.307 cv
.760784 .760784 .760784 rgb
f
2496.83 635.616 mo
2496.83 635.616 2489.43 660.655 2493.35 668.841 cv
2497.26 677.027 2538.17 748.288 2538.17 756.474 cv
2538.17 764.659 2529.23 779.917 2518.93 783.896 cv
2510.81 787.033 2492.31 784.317 2483.35 792.168 cv
2464.07 809.06 2481.4 812.526 2489.67 812.526 cv
2497.94 812.526 2549.72 793.494 2560.6 793.494 cv
2571.48 793.494 2660.27 836.464 2675.06 831.649 cv
2689.86 826.834 2699.19 803.18 2667.86 800.291 cv
2636.53 797.402 2594.71 786.332 2599.53 781.513 cv
2606.81 774.23 2633.31 775.04 2655.34 775.849 cv
2670.2 776.395 2683.03 776.941 2686.54 775.001 cv
2695.24 770.186 2703.98 756.956 2679.17 750.697 cv
2668.52 748.008 2650.09 751.802 2630.69 755.596 cv
2604.91 760.636 2577.44 765.677 2564.28 755.512 cv
2541.22 737.696 2531.64 642.84 2531.64 642.84 cv
2544.26 622.134 li
2495.96 633.209 li
2496.83 635.616 li
.454902 .235294 .0901961 rgb
f
2545.94 541.089 mo
2560.63 637.816 2519.34 806.665 2428.52 820.459 cv
2337.69 834.253 2231.74 687.77 2217.04 591.043 cv
2202.35 494.318 2264.07 404.722 2354.89 390.929 cv
2445.72 377.134 2531.25 444.363 2545.94 541.089 cv
.909804 .470588 .176471 rgb
f
2333.76 395.634 mo
2333.78 395.63 2333.79 395.628 2333.8 395.624 cv
2333.79 395.627 2333.78 395.631 2333.76 395.634 cv
2334.08 395.541 mo
2334.09 395.538 2334.1 395.536 2334.11 395.533 cv
2334.1 395.535 2334.08 395.539 2334.08 395.541 cv
2334.71 395.357 mo
2334.73 395.351 2334.75 395.344 2334.77 395.339 cv
2334.75 395.345 2334.73 395.351 2334.71 395.357 cv
2335 395.273 mo
2335.03 395.264 2335.06 395.256 2335.09 395.247 cv
2335.06 395.256 2335.03 395.264 2335 395.273 cv
2335.3 395.188 mo
2335.33 395.179 2335.36 395.171 2335.39 395.162 cv
2335.36 395.171 2335.33 395.179 2335.3 395.188 cv
2335.66 395.086 mo
2335.68 395.08 2335.7 395.073 2335.72 395.068 cv
2335.7 395.074 2335.68 395.08 2335.66 395.086 cv
2335.96 395.001 mo
2336 394.989 2336.04 394.978 2336.09 394.966 cv
2336.04 394.978 2336 394.989 2335.96 395.001 cv
2336.24 394.922 mo
2336.29 394.909 2336.34 394.896 2336.38 394.883 cv
2336.34 394.896 2336.29 394.909 2336.24 394.922 cv
2336.54 394.841 mo
2336.58 394.828 2336.63 394.816 2336.67 394.803 cv
2336.63 394.816 2336.58 394.828 2336.54 394.841 cv
2336.82 394.762 mo
2336.92 394.735 2337.01 394.709 2337.11 394.683 cv
2337.02 394.709 2336.92 394.736 2336.82 394.762 cv
2337.21 394.655 mo
2337.27 394.639 2337.33 394.623 2337.39 394.607 cv
2337.33 394.623 2337.27 394.64 2337.21 394.655 cv
2337.49 394.58 mo
2337.56 394.563 2337.62 394.547 2337.68 394.53 cv
2337.62 394.547 2337.56 394.563 2337.49 394.58 cv
2337.76 394.508 mo
2337.99 394.445 2338.22 394.384 2338.46 394.323 cv
2338.22 394.384 2337.99 394.445 2337.76 394.508 cv
2338.47 394.319 mo
2338.55 394.299 2338.62 394.28 2338.7 394.261 cv
2338.62 394.28 2338.55 394.299 2338.47 394.319 cv
2338.75 394.247 mo
2338.82 394.228 2338.89 394.209 2338.97 394.19 cv
2338.89 394.209 2338.82 394.227 2338.75 394.247 cv
2339.02 394.178 mo
2339.34 394.094 2339.66 394.011 2339.99 393.929 cv
2339.66 394.011 2339.34 394.094 2339.02 394.178 cv
2340.02 393.922 mo
2343 393.171 2346.02 392.504 2349.07 391.924 cv
2346.02 392.504 2343 393.172 2340.02 393.922 cv
2349.09 391.92 mo
2349.43 391.855 2349.77 391.792 2350.11 391.73 cv
2349.77 391.792 2349.43 391.855 2349.09 391.92 cv
2350.14 391.724 mo
2350.22 391.71 2350.3 391.696 2350.37 391.682 cv
2350.3 391.696 2350.22 391.71 2350.14 391.724 cv
2350.42 391.673 mo
2350.74 391.615 2351.07 391.556 2351.4 391.499 cv
2351.07 391.556 2350.74 391.615 2350.42 391.673 cv
2351.47 391.486 mo
2351.54 391.474 2351.61 391.463 2351.67 391.451 cv
2351.61 391.463 2351.54 391.474 2351.47 391.486 cv
2351.77 391.435 mo
2351.83 391.424 2351.9 391.413 2351.96 391.402 cv
2351.9 391.413 2351.83 391.424 2351.77 391.435 cv
2352.06 391.385 mo
2352.18 391.366 2352.29 391.346 2352.41 391.326 cv
2352.29 391.346 2352.17 391.366 2352.06 391.385 cv
2352.52 391.308 mo
2352.57 391.298 2352.63 391.289 2352.69 391.279 cv
2352.64 391.288 2352.57 391.299 2352.52 391.308 cv
2352.81 391.259 mo
2352.87 391.25 2352.92 391.24 2352.98 391.231 cv
2352.92 391.24 2352.87 391.25 2352.81 391.259 cv
2353.12 391.208 mo
2353.17 391.2 2353.22 391.191 2353.28 391.183 cv
2353.22 391.192 2353.18 391.199 2353.12 391.208 cv
2353.46 391.153 mo
2353.52 391.144 2353.58 391.134 2353.64 391.125 cv
2353.58 391.134 2353.52 391.144 2353.46 391.153 cv
2353.85 391.09 mo
2353.9 391.083 2353.94 391.077 2353.98 391.069 cv
2353.94 391.076 2353.9 391.083 2353.85 391.09 cv
2354.16 391.041 mo
2354.2 391.035 2354.25 391.028 2354.29 391.021 cv
2354.25 391.028 2354.21 391.034 2354.16 391.041 cv
2354.48 390.992 mo
2354.52 390.986 2354.55 390.981 2354.59 390.975 cv
2354.55 390.981 2354.52 390.986 2354.48 390.992 cv
2360.1 390.225 mo
2366.3 389.493 2372.47 389.134 2378.59 389.134 cv
2378.59 389.134 li
2372.47 389.135 2366.3 389.493 2360.1 390.225 cv
.964706 .8 .686274 rgb
f
2466.4 804.219 mo
2494.79 743.763 2505.37 662.603 2496.78 606.054 cv
2483.37 517.798 2410.99 454.098 2329.42 454.098 cv
2321.59 454.098 2313.68 454.684 2305.73 455.892 cv
2277.12 460.237 2251.41 472.117 2230.05 489.36 cv
2249.61 444.557 2286.76 409.557 2333.76 395.634 cv
2333.78 395.631 2333.79 395.627 2333.8 395.624 cv
2333.89 395.596 2333.99 395.568 2334.08 395.541 cv
2334.08 395.539 2334.1 395.535 2334.11 395.533 cv
2334.31 395.474 2334.51 395.415 2334.71 395.357 cv
2334.73 395.351 2334.75 395.345 2334.77 395.339 cv
2334.85 395.316 2334.92 395.296 2335 395.273 cv
2335.03 395.264 2335.06 395.256 2335.09 395.247 cv
2335.16 395.227 2335.23 395.208 2335.3 395.188 cv
2335.33 395.179 2335.36 395.171 2335.39 395.162 cv
2335.48 395.137 2335.57 395.111 2335.66 395.086 cv
2335.68 395.08 2335.7 395.074 2335.72 395.068 cv
2335.8 395.045 2335.88 395.023 2335.96 395.001 cv
2336 394.989 2336.04 394.978 2336.09 394.966 cv
2336.14 394.951 2336.19 394.937 2336.24 394.922 cv
2336.29 394.909 2336.34 394.896 2336.38 394.883 cv
2336.43 394.869 2336.49 394.855 2336.54 394.841 cv
2336.58 394.828 2336.63 394.816 2336.67 394.803 cv
2336.72 394.789 2336.77 394.775 2336.82 394.762 cv
2336.92 394.736 2337.02 394.709 2337.11 394.683 cv
2337.14 394.674 2337.18 394.664 2337.21 394.655 cv
2337.27 394.64 2337.33 394.623 2337.39 394.607 cv
2337.43 394.598 2337.46 394.589 2337.49 394.58 cv
2337.56 394.563 2337.62 394.547 2337.68 394.53 cv
2337.71 394.522 2337.73 394.515 2337.76 394.508 cv
2337.99 394.445 2338.22 394.384 2338.46 394.323 cv
2338.46 394.321 2338.47 394.32 2338.47 394.319 cv
2338.55 394.299 2338.62 394.28 2338.7 394.261 cv
2338.71 394.256 2338.73 394.251 2338.75 394.247 cv
2338.82 394.227 2338.89 394.209 2338.97 394.19 cv
2338.98 394.186 2339 394.182 2339.02 394.178 cv
2339.34 394.094 2339.66 394.011 2339.99 393.929 cv
2340 393.927 2340.01 393.924 2340.02 393.922 cv
2343 393.172 2346.02 392.504 2349.07 391.924 cv
2349.08 391.923 2349.09 391.921 2349.09 391.92 cv
2349.43 391.855 2349.77 391.792 2350.11 391.73 cv
2350.12 391.728 2350.13 391.726 2350.14 391.724 cv
2350.22 391.71 2350.3 391.696 2350.37 391.682 cv
2350.39 391.679 2350.4 391.676 2350.42 391.673 cv
2350.74 391.615 2351.07 391.556 2351.4 391.499 cv
2351.42 391.495 2351.45 391.491 2351.47 391.486 cv
2351.54 391.474 2351.61 391.463 2351.67 391.451 cv
2351.71 391.446 2351.74 391.441 2351.77 391.435 cv
2351.83 391.424 2351.9 391.413 2351.96 391.402 cv
2351.99 391.397 2352.03 391.391 2352.06 391.385 cv
2352.17 391.366 2352.29 391.346 2352.41 391.326 cv
2352.44 391.32 2352.48 391.314 2352.52 391.308 cv
2352.57 391.299 2352.64 391.288 2352.69 391.279 cv
2352.73 391.272 2352.77 391.266 2352.81 391.259 cv
2352.87 391.25 2352.92 391.24 2352.98 391.231 cv
2353.03 391.223 2353.07 391.216 2353.12 391.208 cv
2353.18 391.199 2353.22 391.192 2353.28 391.183 cv
2353.34 391.173 2353.4 391.163 2353.46 391.153 cv
2353.52 391.144 2353.58 391.134 2353.64 391.125 cv
2353.71 391.113 2353.78 391.102 2353.85 391.09 cv
2353.9 391.083 2353.94 391.076 2353.98 391.069 cv
2354.04 391.06 2354.1 391.051 2354.16 391.041 cv
2354.21 391.034 2354.25 391.028 2354.29 391.021 cv
2354.35 391.012 2354.42 391.002 2354.48 390.992 cv
2354.52 390.986 2354.55 390.981 2354.59 390.975 cv
2354.69 390.959 2354.79 390.944 2354.89 390.929 cv
2356.63 390.664 2358.37 390.43 2360.1 390.225 cv
2366.3 389.493 2372.47 389.135 2378.59 389.134 cv
2460.16 389.129 2532.54 452.829 2545.94 541.091 cv
2558.4 623.14 2530.56 757.041 2466.4 804.219 cv
.878431 .376471 .121569 rgb
f
2467.36 607.66 mo
2441.58 533.392 2377.03 488.338 2323.17 507.03 cv
2269.31 525.722 2246.55 601.082 2272.33 675.35 cv
2298.1 749.62 2362.66 794.671 2416.51 775.979 cv
2470.37 757.288 2493.14 681.928 2467.36 607.66 cv
cp
.929412 .537255 .215686 rgb
f
2464.27 743.792 mo
2463.64 739.229 2459.43 736.043 2454.86 736.674 cv
2450.3 737.305 2447.12 741.517 2447.75 746.079 cv
2448.38 750.642 2452.59 753.828 2457.15 753.197 cv
2461.71 752.564 2464.9 748.354 2464.27 743.792 cv
cp
.717647 .313726 .0352941 rgb
f
2488.02 712.236 mo
2487.51 708.511 2484.07 705.91 2480.35 706.426 cv
2476.62 706.941 2474.02 710.378 2474.54 714.103 cv
2475.05 717.827 2478.49 720.429 2482.21 719.913 cv
2485.94 719.397 2488.54 715.959 2488.02 712.236 cv
cp
f
2492.81 735.631 mo
2492.5 733.349 2490.39 731.756 2488.11 732.073 cv
2485.83 732.387 2484.23 734.492 2484.55 736.774 cv
2484.87 739.057 2486.97 740.649 2489.25 740.333 cv
2491.53 740.017 2493.13 737.912 2492.81 735.631 cv
cp
f
2467.38 785.036 mo
2466.85 781.179 2463.29 778.483 2459.43 779.017 cv
2455.57 779.551 2452.87 783.112 2453.41 786.97 cv
2453.94 790.829 2457.5 793.525 2461.36 792.991 cv
2465.22 792.457 2467.91 788.895 2467.38 785.036 cv
cp
f
2465.7 650.29 mo
2465.16 646.395 2461.57 643.674 2457.67 644.213 cv
2453.78 644.752 2451.06 648.346 2451.6 652.241 cv
2452.14 656.139 2455.73 658.858 2459.63 658.318 cv
2463.52 657.779 2466.24 654.186 2465.7 650.29 cv
cp
f
2268.63 666.789 mo
2268.11 662.991 2264.6 660.337 2260.8 660.862 cv
2257 661.389 2254.35 664.895 2254.88 668.693 cv
2255.4 672.491 2258.91 675.145 2262.71 674.62 cv
2266.5 674.093 2269.16 670.587 2268.63 666.789 cv
cp
f
2254.46 638.864 mo
2254.02 635.652 2251.05 633.411 2247.84 633.855 cv
2244.63 634.299 2242.39 637.262 2242.84 640.473 cv
2243.28 643.685 2246.24 645.927 2249.45 645.482 cv
2252.66 645.038 2254.91 642.075 2254.46 638.864 cv
cp
f
2271.16 597.195 mo
2270.71 593.898 2267.67 591.596 2264.37 592.053 cv
2261.07 592.508 2258.77 595.551 2259.23 598.849 cv
2259.68 602.144 2262.73 604.448 2266.02 603.991 cv
2269.32 603.534 2271.62 600.493 2271.16 597.195 cv
cp
f
2284.75 695.302 mo
2284.52 693.652 2283 692.502 2281.35 692.73 cv
2279.7 692.957 2278.55 694.479 2278.78 696.128 cv
2279.01 697.776 2280.53 698.926 2282.17 698.699 cv
2283.82 698.471 2284.97 696.949 2284.75 695.302 cv
cp
f
2281 624.731 mo
2280.66 622.275 2278.39 620.56 2275.94 620.9 cv
2273.48 621.24 2271.77 623.506 2272.11 625.964 cv
2272.45 628.42 2274.71 630.135 2277.17 629.795 cv
2279.63 629.455 2281.34 627.187 2281 624.731 cv
cp
f
2347.43 508.992 mo
2346.96 505.607 2343.83 503.242 2340.45 503.71 cv
2337.06 504.181 2334.7 507.304 2335.17 510.689 cv
2335.64 514.074 2338.76 516.439 2342.15 515.971 cv
2345.53 515.502 2347.9 512.377 2347.43 508.992 cv
cp
f
2383.5 514.413 mo
2383.15 511.933 2380.86 510.201 2378.38 510.543 cv
2375.91 510.887 2374.17 513.176 2374.51 515.656 cv
2374.86 518.136 2377.15 519.87 2379.63 519.526 cv
2382.11 519.182 2383.84 516.894 2383.5 514.413 cv
cp
f
2300.14 610.32 mo
2298.62 617.37 li
2292.26 624.963 li
2283.9 621.339 li
2275.05 603.995 li
2282.88 623.237 li
2290.48 629.594 li
2287.56 630.472 li
2290 636.331 li
2296.82 643.147 li
2292.88 648.194 li
2286.73 648.908 li
2275.82 642.865 li
2268.4 637.821 li
2270.78 645.744 li
2270.83 641.408 li
2276.37 645.429 li
2288.98 651.866 li
2289.07 655.934 li
2283.42 660.586 li
2285.49 667.466 li
2288.95 669.154 li
2290.96 678.1 li
2295 680.975 li
2302.58 681.2 li
2303.87 677.175 li
2314.58 675.774 li
2316.54 680.769 li
2308.67 696.192 li
2299.39 697.844 li
2296.72 695.009 li
2295.97 697.052 li
2293.66 700.704 li
2297.62 699.513 li
2300.44 708.895 li
2300.02 699.928 li
2308.17 699.069 li
2308.76 709.35 li
2310.09 697.128 li
2313.32 692.749 li
2316.71 685.135 li
2322.64 685.174 li
2323.58 688.301 li
2326.41 687.904 li
2328.15 698.976 li
2330.55 701.666 li
2328.33 688.237 li
2331.77 683.793 li
2331.21 681.917 li
2335.48 681.769 li
2341.93 687.333 li
2348.06 696.4 li
2342.03 683.892 li
2338.5 679.724 li
2335.93 674.94 li
2345.52 672.058 li
2352.79 672.021 li
2366.53 673.121 li
2376.12 674.783 li
2357.25 670.226 li
2346.9 670.606 li
2340.48 666.626 li
2339.04 659.558 li
2342.94 657.4 li
2343.81 649.712 li
2337.05 643.105 li
2328.08 641.254 li
2336.59 644.606 li
2341.58 650.61 li
2337.64 655.659 li
2328.19 655.998 li
2321.29 653.072 li
2323.08 647.304 li
2317.34 645.618 li
2313.71 640.343 li
2316.27 636.392 li
2324.16 638.794 li
2330.39 639.877 li
2315.83 634.93 li
2316.66 610.814 li
2314.71 631.178 li
2314.25 636.09 li
2311.48 638.968 li
2303.85 643.079 li
2298.53 641.269 li
2293.91 636.975 li
2293.54 626.172 li
2299.4 618.197 li
2300.14 610.32 li
cp
.239216 .239216 .239216 rgb
f
2296.82 643.147 mo
2296.85 646.775 li
2293.99 650.363 li
2288.98 651.866 li
2275.84 645.586 li
2270.83 641.408 li
2270.77 646.159 li
2268.4 637.821 li
2275.82 642.865 li
2286.73 648.908 li
2292.88 648.194 li
2296.82 643.147 li
cp
.941176 .901961 .843137 rgb
f
2341.13 850.076 mo
2331.24 843.446 2313.67 844.944 2305.54 841.797 cv
2295.25 837.829 2275.73 821.572 2275.73 813.371 cv
2275.73 805.434 2327.33 693.239 2331.72 683.707 cv
2333.72 677.729 2330.24 662.157 2328.65 655.992 cv
2328.2 655.992 li
2321.27 653.072 li
2323.08 647.304 li
2317.34 645.618 li
2316.27 636.392 li
2314.07 636.481 li
2306.23 645.321 li
2296.14 642.472 li
2296.82 643.147 li
2292.88 648.202 li
2286.74 648.913 li
2286.18 648.615 li
2286.41 648.99 2293.08 659.889 2292.85 659.513 cv
2289.66 676.138 2270.86 791.846 2248.65 808.952 cv
2225.58 826.779 2170.11 802.359 2145.32 808.614 cv
2120.49 814.868 2129.25 828.09 2137.94 832.922 cv
2146.63 837.715 2212.73 827.229 2224.94 839.438 cv
2229.78 844.233 2187.94 855.319 2156.63 858.203 cv
2125.28 861.087 2134.61 884.756 2149.4 889.55 cv
2164.2 894.381 2253 851.385 2263.86 851.385 cv
2274.76 851.385 2326.52 870.45 2334.79 870.45 cv
2343.07 870.45 2354.68 859.214 2341.13 850.076 cv
cp
.454902 .235294 .0901961 rgb
f
2331.76 683.782 mo
2331.72 683.857 li
2331.72 683.746 li
2331.76 683.782 li
cp
.239216 .239216 .239216 rgb
f
2148 882.772 mo
2148 882.772 2141.45 880.508 2142.85 871.302 cv
2144.26 862.094 2157.45 863.343 2169.46 863.343 cv
2181.48 863.343 2219.09 856.944 2229.23 850.078 cv
2229.23 850.078 2177.03 887.141 2148 882.772 cv
cp
.529412 .27451 .105882 rgb
f
2141.22 827.229 mo
2140.51 826.527 2132.87 821.812 2139.03 815.649 cv
2145.19 809.484 2184.29 817.599 2198.96 820.173 cv
2213.63 822.749 2229.23 825.89 2229.23 825.89 cv
2229.23 825.89 2207.31 827.138 2184.99 824.954 cv
2162.67 822.769 2141.22 827.229 2141.22 827.229 cv
cp
f
2274.88 782.746 mo
2274.88 782.746 2291.26 714.206 2294.07 702.97 cv
2296.88 691.733 2298.99 663.176 2298.99 663.176 cv
2298.99 663.176 2323.99 669.262 2322.26 677.455 cv
2320.52 685.647 2274.88 782.746 2274.88 782.746 cv
cp
f
2314.25 636.09 mo
2311.75 641.388 li
2306.23 645.321 li
2299.03 644.072 li
2293.91 636.975 li
2298.53 641.269 li
2303.85 643.079 li
2311.48 638.968 li
2314.25 636.09 li
cp
.941176 .901961 .843137 rgb
f
2292.88 648.202 mo
2286.74 648.913 li
2282.02 646.298 li
2287.83 651.316 li
2292.88 648.202 li
cp
f
2341.58 650.61 mo
2340.15 656.722 li
2336.53 659.781 li
2330.12 660.646 li
2321.29 653.072 li
2328.19 655.998 li
2337.64 655.659 li
2341.58 650.61 li
cp
f
2316.27 636.392 mo
2313.58 640.706 li
2316.78 646.298 li
2323.08 647.304 li
2324.16 638.794 li
2316.27 636.392 li
cp
.929412 .537255 .215686 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 16.0
%%AI8_CreatorVersion: 16.0.0
%%For: (\702\750\762\740\753\750\751 \702\750\752\762\756\760\756\742\750\767) ()
%%Title: (Cute chick hatching set.eps)
%%CreationDate: 6/30/2020 9:58 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6fok>cZS4AjT38i09<ta1?P8NM-R"&r(K,b`-&Y;cFEdDsD`7W#bg"ea$]NcO_O6mu1&L.(BB\fD-:/=f#ml4-X9Pu0ZD'U)
%7>-#4p_N9@K-<\.V`f&]85Xk)1_.`b"i7+gmF>TqOB3)$#ClZp?mq*GJjG"4:u1r#R'Lk'l4OMhVT'=p6o=/#pf(22#N-)p\L5C,
%l?>s;N-@eMR:O_&cB2T\8'r!?eR0GrS%FQ'g8R(mmTn*c*J0;b![/(uh:q'q]k0NNTOmnh],kc)-f@md?s,0Ud&C53T_+a_WQAU3
%k&a@N\ZoP`C4SX0HqJKFU;8[(B@-&9KRD^9gDpcN!t(*FETE_uH%J4Er8RGI_JYFSgk^7RISE#g_(\S5LAA>LD&PA-fDO8D"sh+7
%3(m/uB?L?<R[QriHGla[)+(`ea_ZpB"?.9efB`'E)upEF-iU@N#3=mDbnK_26f)cQj7%gj:4G5Cd.i$VE!Zn5^#<p4G\At"`,?pk
%HULdTn/ak'1R=ii-M]$V!6jVI]D57]<b"<?kj'\>!Y"iQ$hI:tV0^&s4L&WF2o`Crir3Df:B@2DdfY1*]LRtEO@BgVB\<c$M[KHI
%J?t(=S^_8iZpieiK*A%Q\-4TOQjmC&N%Z1%KJB)'$ZWlT5t?I4MiP'mVpIPB$b!G+KB)A\i3+%n%`iA&JV!W>"?i-fH[2(HX]Q*<
%roJHFHMhYG@(4VR`khbt+E1E`&)\)AC%/!M![%cl'%7"Z?k&p4,*$h.X%bR8m'N+V-?+,FpbN*KBF<C39FZZeWup+[d):;Y@)cJc
%?W,e_EXEcbnZPUb?Dq-Ocb[jg:!I=iBqP7l06=EhFU65$d:FaFb]ci]lb%cj(6/.3lg[)_"7@P?&,ZfCr'.rc^ZH&WleoM7"7L%#
%)nqta"'[qPK>7BC\t=`a#!q"ergYr.ZYUL!TG^I;pq,HemO.eE&-#.F5""snkZKe4jE5hEn\B,Jh5df3[1,<I!YXGkJ/<S<s+3ED
%hc=ps)_n4%YlD[D%6j/nDK0uW17%bRTAm54]CF":keP)dc9\Wf3MOV&"uZ<h^`W%hDK;&LV#rk^aPXdHE53Vf_Zjme#3LkkLkAj)
%YSBEF$`PYH*<P%_9RG"H$%rKX#<BZ:s8<?#,n9XP:e'%63U'@MP*p:L_M#1MC!R7)\)R.47p%nAjd>k@^fPEQBLM.hj+kW;j+fQI
%c"b@?Xa53tLnmhVk')Ho/-go#?^@@_[4+mbHHlpV/W(HrT%G+Q8cit]&/]@P"cb)V#Q!7,Z3@e,!31Vmcp%Vb-1I7]*YTf;cm*M&
%LE@Yji+_i#kgT<O9Fb``2C,nAMh";CD\k1\/(1(S@I+AiKIu9T7c[OgM^5O<ge*]=M(L\l,e:GB5osO7;0\$9!lqd3<rtqrh&fl-
%-P&uV.#QTer)Nn77#r\L,D#ffU'`ir1k3R!mSHh*4#B]r`"p;oRCZ0hJQ]-ic:O>[bq_sb(>hHh$RF]=LJPj>!Z)'S9CuZ13Dm\p
%@JJTm]G-ir%`_Vf&p*Y'Rl>WNl*8TlE%Sh?,2h'Y[;lSd"7CMjlp>2(VgiTp("J]OR#Is$V?>20-9H:7!(MM[!%)CuQc!p#^mh-V
%.0nhZ\;F4.FVB5.5G@$?DON;hgL/F=R\8'm5RR-&5+W-Y^QUg(Vuelr-Ti([J,j4HBOli#3>f%-fIR$sKau'^+JNPfG22p6UN%n8
%!eM'KI:8Np[Zfb)&8u(5d3EuD=@&U.+bRX]C==TNiK(lGi?n[65F8lr)s<p:7!;=Lk.hl"'&+kO5IHanbJs94V,"LL4";8@+`]F0
%4pRIM9X"qS?c[N$@lBlRC0_VTNBe)5@c2[n1o6Wl$*9ohW%f83%""`,-@t"iEc?;@7uSd^q%uOn0)uT<NS9c)9k3%_GDXm/Tck?G
%B$)4bUl\N_eL"//&8GS-"Tt7Kd%FtRN<>LM!LFPb^(>$WF1P$*H+t/,MNDF`n*;8o9kG*WH#a26jVNo.Z[]Fp^m-)>RcqkY4#gbG
%Y2!HsEk[_fGB2dT5pl;>*8'iB98[8oO#)P&-ok14%RG!&I(>FoGOjij^>-hs48EpSfU)2X-XR>iRA9<6J<uHDINukW+l8uCrta?i
%%aR*'G0l?GhYn":!R7j^%.P:YV.([;R:>[a.S_V+n?m"P0A(BdF#?[7`)^q#T/-n4:K-Q2*Oad_Y]tIBihL_M*cqo]Nq`5qaO-<o
%_67mZhe*4<_eM0j[9hm443CPeL=RTnk3I'L9YV+gr>(7@r&I6'%17(Oi]2ZK%q\T2nLi5Uib/Th^eZ05;eWu;O4miUh0`*Am)QS&
%?oW]/I#QNgC<EdU'EtQ18+q\0)]cc]+#@Y(m"F<^OX#!.JC=]$Co>[Q#XnK0O1qA2$&_1FJ2+FQpf\d7=4nF5MO^se[%NNZf+"K(
%/CfVc2]S[AZ_RPJg)2kPbM]"0iuHAta.Z')"LTp]1ZlW>!J0s`=suA/"[F=mp^Z"c*heDId2o,;$4^AV*5"caVN*n\i\\ae-No@5
%VgMHInJCV[mj[tKE[OSOPiJZtIqZE9QUpSMjE+?-H9a_f*i68s^<jUWI/MDiS?dOVb)X>6=[$TQloWDR+&fG,VPnKl-AXkuG/4YQ
%Oi`["K81Me79W7>4-'\h,*[6!G`SAi/@>Z>^1O`B_?2@(V/Q'5;R-jQ31<!5PkirtORL`bV<HSD*q5"/mLISQ3Jk"n(Lu>gGl=?L
%X@'tg,eX+'47jKQ_]fi4*W#=rfP`dAp&2l&1Ab>78"9b[%1D3Y3:"rC\f8Ut4OWMDK]M2mFh`I]5udT&:qW-i;*5-**/if:ncK6K
%E^RdG"gpI$cZKOB9Qg+:,i:q2FqE<kGbc&U1'bQ5P=4'C8.Y7TPSc?91&!"7P[09V8+qXD"(ABIGPp#6fsA-/ON_O"G7"$[VCFbk
%8sM3K6$!<Y\4>NB\2B2ZR^K>djQguB\Z[CsklU@I-/uc,."muAn`Zo)53?jW16-j$h^0Ldf^]KJ%eCMJr]oJJK4"9WOcSO*oa&Wd
%or:6`e^d77Qg0dp0j6'ZG^gBa+?K?U2*o'2"5=V5#^j`l.(1/(8'=ZP&edcbM#idX'B&S<$A,i$+gp\7P/CZXE\dE<+ZZBr#\!f&
%G3>(bL?&XIAg60H/L:NXm%Ks?`'`o"%@Z5Q<eLeEognj]<g;iOK'j!sI/H)*'4HKCTtoYEU.N0gmL,jG3@/WtigDD_m_X0`,N,p1
%h5b1>:WWpk]!q^>&U]4`fc6\a-H\V61>VD`M1U?'Z%Oc*R4*h)T1.b@6XT0:qPA`ka*O:s;$>Ya+r@*QST7S(O?"*,F6'k[#c?^G
%jJ!bOe`#\cHjf&hrD'mO.*.p!;,4YMIttHmje<`^YHoMUja6-a+A'M(f2:ES(Bju1A$Mt.\L;6Zog.Z5+S"+#YPR^PMh6Q)Z)mf*
%gnd$NS/S36ggP?mF"WONn3!KTYL?/bhr,9i1D.BD'`/ld[lV8X=_q`\1L]!E*$I@4rIkmS4.Z#MpB/UQh92./4D!Y#f639lJWj>+
%+MgXPS`JKrXrW4$bL5=ka^"^Ljr+7Jod&'_;XL).eP=-<[kcN0;XGa[rm=V<]Hbq__uBA'OT^4<TA<R4WXZbm1>7-o"]*;IJHVl^
%FBV-HT(0EMIY7hf*pEl,%\F#M?e3jojrI6?ndf27+6,T?H`23P1g[&9$)LhjIrpITBX"GUXhjqne#`ZNU>S-.572:A^/;o;2`_de
%Rufb'MP>dW!M#%!TePHi=HksWoaQsN@:o":PjKlIoN7?k+@T%P7%^!L^FEDB=#0nj1It/2"M7_GA=!s:%a?j,)dL9DL0_R;]*^Vj
%0,d'D,^qRlreY@ea0A'Qn.k&b$i3tLOUtU<U!'\n247;M0Ec-32*(>$H+$L7OBu==PYqK)fJc]d-&EuO!pqROJ:N:+Srs3]h]@2@
%"<:5@n7[mR(Bk&OF=[_.hP7=u%pgXC1s$4T"H0#6O%MA!VGrRJ8,f7#(VbZe4N<A:*U!-0P(?AnI]*/%e,JfEmf2_6i5%e@j_qR,
%b:QDt"71"t&Js\GchHlujg=2$+EuQ24mi':p3cW0.ZDiJmk6Bg:OBgR4l8WZni?+5mU>X8K0<Rp"2C3`h$4-P'D3nu$2EAY2[%lp
%m.]ZOOf#!@nP<$5cIrs/_X8d+*`Kgl7r_34L+E=DFQ('1#T1]+38j&]"W8dk8tZ]"p)U_6&sg?m;G,"ISK_UfW5dddaET-O*RFpD
%NInQ.7"I9`%]JT0,W-q$-r'?.'TGmgG7.0>Zb;+=OL3UgIWh[[ZdYsc:[tbir9P+^qmQ%$!5b$@0a>B(ULte']a=';!`&N_jCHQ9
%]kgLhk8'/+%b"rZc=*nAK4;$p.2h!iW!J^6;6i@Y?"6@>+8Ei!Q#@:_?tMeC=LRiTWuTd@Ai%;m&hr2d@(H9Xrk&8R"LEU%J4m6_
%Ju_C:JX?<??A(!?+*\Bl0O4P;'R2VA?;?'<;rHaOGW>q6:4\a1i8kYtq&9Agq_KD0:S,nK"H]((_fO<>V!h>^qsBE3fI=m^$5r50
%1*-*t'.=(gS.;#J$lfcUYR)!`%fNU<oL-((f8AJZTS[%N.ZZaGl>.Ig<TEHoj`nQBmA(^4_ale0jnKik@bT3[3@W%e="$S6)c%h8
%IBO<OG*pn1kt@r'QhJCqs-RkbRR=_XrI0&ac+hI.k;8a0o(R#<r48p+IB&C(05!e";.L3r9r/iV^/taH#;nXe_;UGB?QKHeb,Ki^
%+]u5mBVL81\rLXPf/OcMM*A^FB(pX5",Acjht:R6-P,V!H"`SkD:m.-^QUgV]Ia/%?ht9(U*)6;d*eSQJ9t5Ps"Np;Mi[Yh$T8L=
%O2->qp?s'I?Sj$)*0Hj`)oi5SiYY2DiLJmE#AF0n^-N_@"c$"rj'Y%+@pAQ&36!D-EG..LMIW19(e54ZpuhFp/<5s7p"fA1q_[/@
%naRnoU?%g8cY]N!ZMD2,eG\BCT)E3D3Y@BEl/2u4UP\_*1$t_1!AaFuiJ)Bsc#c.K!QP$Hl-Kqqn@k!Q;GEHf]5$;18\>/B[E('8
%DA)0H/Lc@?imF:%KS%El(]3+TTHPR`fr(eU$76bFr\-W_)[f<4W*jA$i=Z:$F?2?O$*s^n2s>@"OS\U>NXbi2PYT7'IIgs$IT>=(
%25`P-0i0UF*#(N+I\MG;rl`oTgk6mYea?K!FUFA-`%\o(_A<h?Vh?^c]6b)Tm$.ooX&X!Y;plHh'-;D@(CCN,45l+RAsOIlG(SK5
%rk>(NK^>4-,[S:R+<p>pH%!H/SWb_9VM@s]gu#h\:>XdJRlbn:EbnM-gu%SF+W-^sDsf;Uptjl_2bXa'3t[KR3)Xr1!OItOGB2kA
%mbGpTPG)u:k>(I#pMoBohoVEV6K[@S*L]'692WA'NM?d:KD4IIfJi<^d#e%ZrZ$NBE5]dOI%Q`[r42tJ%N(aHGn&QVT.=nB+7jTW
%`"ARkYt*lhO7<"7"#BQ`N#i(bRXZ9%Ubg$&USrp^7*Y3Rao75AKm"@-k85L;/\pb3mgrj;IPg?r&YEQ97QJP78%FL@G#$71aEa]l
%k%#M!;5uA+OdkV(-/4IWI<c+/'?m!7j'AD4`R-4;$2D5:%H18"iOtq!C<F5f*6%f;5Hum.INKaK99+]BSi\i%7koVd#7c"PGZfdD
%PS32D"8aN(OPdNo1jTK,%Dq$#TT]Am=[U+Er'Cg9MdZ9+9"YEZ%f_`_b`T=mQ]V*]LD/'^30WN,R84]`e"med%9`S3*!dnp.Y8!i
%=`XgYc$ae_kF5QX42#J*BWM:=@s!:s%_fmX,C@<=60U$lS,Hhd9o5DP>Wm*_MG?Xg0/SP]2URj%Ua`D(UGe!)$-EJo]AL_H3#P#[
%@.u=]j@3l<ilQ^9qdM2]@q;CDY:m`.GM"mJLuH`&V(`5dC<$`SE:E9+#P>OhiG1lP-J@@25^H/@;/+)>QE3.pffDm.\r\<$GeaCJ
%U`9o_83(eRLk<O</&r[DP*:J[I"cUhNQ84AO"l66HJ.5M)Eki)Fr\hUr6eF^,tE@#1OQpggUFrh!OJ\J]cGji6sC2j3F\KFa:BVd
%i1N)`"#Gs(L1;.2n5nl/o#c,l\Z[F)CB8Yg/*l,Y<ZXBJCe2)u@O]-Yo2IZN[DNanhtrLrmpbtgqMMe2Y+_UT,K#(?P99]G)340)
%9#e&m1@579g>>j?]?f#W`.q$6A9s8DYN4H7f^3'r*kY$o>7$DO>2Sm-i8[QV^ee>iI['!eDHqBbM[6#FnCUdhd2UTm9jllO#s(T)
%H]3Fog'k<4#A&(>,!+u9+Db;%#iD;0+!o9\Q6s0<[+dQ41%Lm&bSep?2;atLng??M2k+75?^R\`RN02T33X[<7H7=DO7FWO"6B9K
%oC>[SO2Ek<O2?q>\Sf0JoI9F+1cnsb>B2hiGrQo-f2IRgY=Z"s73gIT,tNc$&TbFfe)'Y,8DH'e][XZkVKL5mG8?6,\=OlKjA^Ni
%a1j6>gq=8KY<JP1cPlP8*&+$rO6R:F'Kp)`ROUM?#6_0.d602'D)X?Mh)%;:P65-b$_T)/)S<fJ]K9*&mBUDq_LMV!dc(**e5XEm
%0i/g_77\Hipb\Amc2E9E4aaujf+1*ihb2C6'-7G)JE9n);SQ#<?Z8`.*s"I]5cQsLcFF'__CaFf3LPk`-'2>0K--"&-i!EGLK>DP
%_\r*Y4THjB+;bTA]\F=4`rf.YL>>tI-TlR=KF]V3V!`]K?R>4/%:&cN&40=G4?gA7]cZ0E"0MgS7h6#^9*^7M\pA^i*.u$*YJ:'0
%oC)_@YQ+'ps8)&2r;2!BlTbCFcbKJ:J,euXK+U%>?ue]b[!f[Spm>GlJk)Tm5p*T3YlUG/=IP0+""HS^mf%m(Phu3*YBj9,9'0@G
%pb1Sa.^a551E>kDQ4LR_DJpWti;@J:!!54!+b.9LJFH=\<koB%2hM-<&@RX.n/L7],N]#6o.^Z$VIEm+C9116(Vk=+H%Ac-Z%QN>
%DKe),%;<uM*1.Zr(pXL)rrG";o%J,#R+iR5A&J4^5N_.Kk&H.X6E;8*d-$0kgjWV_mEr]Mq>F\d*Xi,Q_L+]1,CZ`B>9=tm,N]1^
%\A@bE<9pLuP:TjF2ec(hF1lSl8ArD,S+=mT:bi(-_qf/.S91\aD!HK_lQk.`[2oI01/rH]!=ioMB*#CKD:dbK>jLmW`52Ql7-9iQ
%D09=m!&)Tb^T3bUl:&t_0XNcBNJ=mp3+^gYiA;5(C,,iuG[kLpAiUc!qX`oB25R2)%;Pr&VRe!]lfhL+8/@llK0ZY.:>qZQ[jO'9
%=MQ^eK"^6L5sSBXrfp1IH(o+3bRJDG;NNTpLpSp6ApWp)Ye*_fr.Zg>+REMj4N+QfB38nh!93I6Z=np-ToBJ'-s28gSGIH2S*'El
%]YAeUheOYsrSJ-9^Q1XC1Lm`fIDiW37NbqF!Zu>G)<k/Mg`TWNS)-AE*]F.8BJ5t>7Nm*No_sto?p6-O't^TYnb`Y&"t-V/]+q6G
%717lVINAbi5i/:bC(icOM?UFWL$5j#RN-,S\T<C+J*::a#YmSS]+!J1dLX6U!:&qo`\AW=]E\kH0,RCXdt?'BKI@->c\\=*92"64
%)A>NB7Eo^<D+ee*T]?gEp+L=Ha&E9c2i-.7bUh2!j\J6%QaP']Su/JiOs]ZD=OY"s$>dGbg]IR!V?p^?N,QI+O].R@Q+8Uk'=;:%
%/UGO#b\W7<XQ&kc6+=W.cbKJFYQ+OpJ,eh!rq_-DqTlqUj59ll#$gr<s8!hqli6nOs8MKe9`r_i\t5'j5f<h77=Hhs5d-bq/2"a=
%TL]''6Yd7n(=h>5`=K9b[poG.ghi*?(BhT@oLCXHGUbI?RdEp2h%SdrQV*dXJDk1S+Lmr_hS93+);a\]W6'6?_3pFuF(RnHE]AG?
%/gOM;+_,jTdOAGm$(&6QQsR%2ZD^@?=\@/Y)4$r;57)V9aWcIR(4<2$9r[Q:R^8F`:!I=?@7c1lj"-l)[QbQ.=bdK&B)%=X2%2L5
%O&sHn/#`P8E.NV0eI+!13WoMg0El*De*u-#0J9X9g0<Rqp\6ioe^cPu0Y08"m!pFKZ=GI>]o52[r-khV*>B0J@4SF($sS9aA&&.P
%YZqs:Mcam9TDjR$bn[cCa]-i*Jg'@8#Yg6PK@OLZ,`?lf1!0EZ/U.bM)*\=chL)3"i7#L^*tXl%2-Y+D8n]\;Oomh^&lZRW>fWp8
%[%`lW%H:M:R,O3<3PNlt#f(:u<^@kF#AS='#+0SW,G'Dj>HEuK6,V1CTU<q*Q>/dDRMSd"Z@+_YHr2G#j'PWqE#CdS5Z":c%_T':
%VlcVk'sIE1TqL+a3EYg%h(!q?k-E1P?^L>(nC:`b%.+U*$R),Qi@,OL$IZoO6`Lj5+c5(WPOPaekcV-iK84N3_n/<W3Z)djjts+Y
%>^\XnMbu7!r_PS-D.&QlF>[ue>YVh#I/jEXE%EjuLj^_U.Wh*rO2^EfPme3X%BRf3gI.I%L&+Q$n<HAL'T@:@c@_SJHo;'WRaH)d
%TUOSQ"?iMKX<8-aJdd/bibFK@=ehr-^CarZ<TD[&QN@8fUbOkU1^m#UUQkkp(-@U]oM&e"^f_e65kbCebV0Y]XTD_#^_20\8HLJu
%BYeX(m!<+=?id1[.F-!T-&]>0GeB,f2h6utR,G+KRK4"hplm'^J1<O28.QIAmWDt*BfCVA^n5p=op0AYI76J7c2PPZ=gBL%[usjo
%l>:P,:XYVnO1F&;"LhY*rAuj&J=L-M)_u!aVZNKInXhBi(U`0YAt9@i#A?ji3.:r3"e$)AfHSG47ca!)S,lUt,J\d/<BC1/aEpcP
%^()&/DFfNCPpmE-X0*HA71<d\49`/C%Y&G5o*1hMbRj9/=M/[[3>b5Ic)VugLIBRDcO7\'(CTTV"I(C!\IAaoSe!:G%n\s]NXCr<
%JPC+$i#2)qoN4!q,DY!;0&b>mFG#2E^iL^/X#TJYJ)j.hfeu7o1JOT:9c'fW)"o1Lo+KN[=UkUeLpJZ-[@`oM't^ToZaq4>Ss!i/
%Z2La0^/E;s(UQ`nDmJ7[=KtT/Y+Obkb\j?!lh1KK5p-ru@MQ1(m/`0t(Z7&X+I!.$lmk=LJ(VrR,CpJQ+$f=A0/"uB_,N5T\P7[*
%NQY_I?VcP!`p&`IXZ>O@l!7U#7.4#qO6A$#VK#m>XRuM/.]NKR]5WmjRDhuEX$i#=:IGupZUNk7GVm3Sh;U&C'I\'DU#o$8c+3C5
%`QEgK0b";4=qKm,M*PF#XU,oS.BtkfC1+0/+qFH<RM`p2DMd\6f0(R>m_NG<27Yp*:+T)&XZ(Hs(51O60"t%JHL\f*#pt@)Tbn;n
%82?l-3R'6t#\$E.N!'SMjV5:f_N2XX.pBPc&S0K4eT&lBMCrk#jTA_>K3dNtYtWZg_3bfplMs=C>Ms1&0@L=qEN-dD6+bWk]M^cT
%Qn/:H]3qsi7^Sj<";N&Q92qfKm8FpcRCnO+SkU5KKY[CQF?)ml:QFO/<Z).>6a@AQ4a&!(Sk<&3>(bWcm@:9%Cc)csP/4f90XA.o
%%g]c-f++,e.Zc$V#Yt,a^juWg)OCXu'I!?]5n>F@cW/1l&Srcs7chq2HH--N&-Za0\g#j3Q%O'(#qT<8$M`?k9UY<bh#4d7Q$K%j
%FNq=Y"0oX`'*gHrYQRl_`b,S<&-+X40H3\T:1=PN,.W--#0+Hcdu>p&JarOsU8>*q(@XFZZE$FTo_=]UiF%"#+%gVE0":+B44'>L
%#1TKKfesZqGY'#`[_^@ch!M6B6>sDee'+Zq>bOIVqp$q#QdML00j`UbBi-Q4TF*m!kn,-Z#m0a6,RD3FOXR?,rfhR!``qLG%lC'Y
%e@MD-LL]J;jdPfkbn^E.>t'^:`WSOf,h+W>-Co-OM#f6_-W>SJp&YY?D;cWD#aEYW95A#G[YM$fIEKdL311p"oK0=7=qHR!@D$%V
%`j_[t@XBl7TT\[AA*0"F7_%D+J^Lhe\;pAb5R2(t.Y*,&'SWoYk&ppL`r``#!en+o<u>tqV1u2],W4n*OuOEaZYB7rLu',rYa7M_
%`<H@?)hXe<33`C0g>0[u4HSJr//^p&A/m-1?,l8>]F*AgOsa^#b02^5.8;Od%Ue6\^u99B.b"K[c"OB4Vdr="+CItWX$D9Z!#C.)
%mc<OX4'Vn[Z,<\e3,`I[/VItuJ59rH(Y9:E7G0)'Ia/KBWlkQk<t;.,r(W=1^o8G994#2\^Xa.;NhLk$gZ#<f-(1"PL#<$&Ltal(
%c?bRX``)M,b^*JtjgfI:W@3"(oQG,,5XN3nF$&`4H5*7gJ;PqWO:QC:6>DUFX?0+`6#m%.,dCpb%<Q.spd8B\Jb$TcZQS<8D\t);
%0B#P[i%SOqp,&>4RLBW^0Wi3,nG0'#-F&4Ejj[4aP#-$`A!D3sCdW8a\90M,_79Ds/HVY:0]ZUk2H6O@FE.C7G,WBb(&r$T]h\Pm
%N9^W&-bAlR+`HFOX#TDh16nd-*qV6Gpp;F8d*(O=aI66o<Ipj8,gAQmV&??t-1-U$l0R1Crtn@H$_iW:T1qL&Kn+Mmak;WgBsI&X
%q,SH$!1=RMH"E`_D8U6!D3uE'j7/X\74;@2<Upk7X.IGLh=kUoVgFmM(6Ss?0%7j!\*J[N$dGo,G8EV[d5[fV(.`<Cgob1&j_(P$
%J:j,*,]A:r&L05(cPE`FS7->m%a7:B8>OfJBQFVX',mOh21jW7JCP)Z.iHV#6Xm'(nDE/7iDU2U9abm8#]n.."O=fPHmLo=B:172
%e6Fe7_r-a;T9D,0PF?9!_!]cM;[or;i>leQI%pe6S8-+os-uQs89PI+GhKkHi3-Q<fMIp]OBek#f8O_K\XtRT$d@"cm./ga%'7GR
%""m>)SEsB9`qM%V#P\SW#TB_X)A(#(k0jnn3-VBAn:E/Ub?^R,D6nI4;qTa^Dm&kkGK[d:8!rfN0nAMG)kD>t0N)A.[2lof0kdfl
%XTL:^g`3e*J@9-3+s-8$;Cp8+7')O4\L<H`pl$hgf]`+tYZ\-q&h\o:V5@4985g10<rP;EX/D1MYc8i)1V$o-`fq2@/X1j0$8Cnb
%SbIA.E8ZHNO!S(S?A-m"Z9p4WHlpf#djq?29J3eP;'mI>V5XsM<q)a";T:0>m7SVC)%emU.q%Jr.=/A\V9Og:P&pf'S(FMETb4.m
%J1aU/JDI`:0@ARR4LdP@7tn"P,e\I#JSc*QDr22,lJ:SH[EY6TF.J,$K\WHL;',AR`D&KG/NGQ3.`Q%!G\GpSg*2*aGU46&gIS,&
%`/Pt;3UaaDTr)W.;?ppq@99a[hdjD#mED!O/Qo#Zh14F/Z6dXe7Nhcm@UO)^L@[uLMN_P4HpD6o&_U+f\1O=hK*:4^Dl@fSR=;/X
%j1$J]7H;r%_/AR4A<CaF>JbA25;0K7#XgQVd"M0(k-X=Y#t??6'G.#effE'b4-?T>>Hqi+gULeQHJ]k<2qq#heLm1$aq>%-)1.-@
%VJHRT,U"dI5r:T+7CnA"hFKQ(oKebHM!9FOYstu'<%ciOQf51)Q3t3S/>\S1,t0\'!5t'b]lZ4MmVIbc\?a4g\l]C:1B]8aiU6Op
%C;rcuq/+=i`UE.>YHd4\-0Y8;(`?#TV4?+S2Pj"#ad`O;$e^%oP.8fXX1jK_jiLIrd.;-/Qh=<F#2ieQh/4S2Q5S?2B8Pi1e!`8*
%c^4i6p:*@HM.f=N0;(pRC/DF?,gLg+1JPmKh2Kfs)Q`U3l.pt%K:/5Q&q%d,RCD@Dn%iF.:8eM`/2l1T/KW9bEuElgD<btS\cpo#
%qX.6OZ*goG\0&AoH@/>nd`rg)?H$lGkJ[0EpRI$ncA=,_2p?@*I'4'liTQPR"g!gM5MlZDj2C^FdSC>*oJ$&j8LX.Eb]L,4HfFt?
%FNZTG#0irN"tp\cApho=HUVeo&UHN32BDWC5DVD62[A/lhorNH[d1[`Vh`!0oK6jW)JuHHql;<22I5Lo`7u9G.HuW8DAOD2Dknu>
%Y71600t.N$dcB(sKR>6A;IdUua[+[Qk/g6Ep^Rn?,bh-/(N^=HhE30Ke#mCoMcHOTi8c=V#(nP*mnM6d,%_c_Y[s$S9Sp:\PREq9
%i2tVeMi_Wh%ON'o`lnoSOW"Jj'-;r+MBS*7T'L=$p95X1pQ[0k#5%FnRX260ht.s7SrWf<CH"F7!0lIDWub$ZA)K7a22.i`Vacu&
%6X\91?H%mel`1m>IW!ADD%AJi-3.tsE34(%TGr)F=7gJsD"6;knEp-3>NXnnp?X<eRciO+"<;gP[`.90]-hYSL^=OH`m1?m\'#S*
%2O>WmmF>,675k2r<E]mkGr5`K*,@ef_T,sRCK$WZ7rFuU/pr5*^frbNb.QC_I965-MrU\@<1n;\F^E.rj2olVb9lOfh.j7WnNn!^
%#+tAWi1]!pp?qT_^8)Cf]Fo+1)6I'MNLb0"0kpA]VVfVk30Jl:EJlEOO5BH6"Bu)dAD<L=-KViijUsC5]_4do[hmgNL&<2:!&J;r
%gJV#G78?Q+l=/0p8B"@WC^P7t[Dh:j>\8qkga.FQI,s*/hbZG^Tb>`gX%Tlnm!P@mZIoqSIPL_DZkct`6(.H7,a37Hbo:(8B/\$d
%l!^7TOR9R(XVl_fm;AX>M_7N:;e/I[8j:o\@3!Ua4'luIad/Kci`cs1U]<W[U#u6JS?0E"Wk!5d'QR^F:+qt%:$t#5W\=tZe2S#O
%>r<[2/$Xk/Tr!gl"p):9iui*)r5_-R^95bTYjo=%O]uRK]Q1M7ph"111L2@J[RGV217CUh%+S.;$lRtkVrP&MZ07+"'ja`]@[qs+
%h69-kX4h$ZLXMpK_%VoE??"LmZ0'__Dj"qNQ81'JB$ToUoM($)Z;m_*M47NXcXfIFGG(FHRlgMSUrY*&V_1+m@j#ds-@R#]G";#@
%71\0?)<8As2EmQZ5ZYluai8R;'uO>9"X".H^0kGaFXG<+9iqoUP3<:(G+o^.f$]iX(+)m%<b&#!1qcFZ66hh4>I6a-&KlV%"B\k,
%NpQ1c"X(TOU3T.f>Cfu&;d"IJ)Ztc+\ckb)m`ZH-"h`XHACI-;VFg?Y#EdJ%OB/5`/i[n7=hf[&b@*32:3lV82.9%895Z,IYK,0[
%%>HK+X"SJAE<YZ^C'3e7>UR3Sm9/"M3I=>-q/dn`^Vp5O@kfpiM-OG3F8B?k/Io@S5/`(ofAOshP`TVI8a^5a=n,b5].raDAIiL"
%/]BZ64Eok<IRg9oBg9hI&EFg'BF#-PA<qY?+OoMQ+heoJTsTftEqo1d'2]5B%]@U3M&QT9"uMS*#6Q^BEJDA_"DYbg;6I<,2d@;B
%.`"D$oud5<&.LPNPS04--joE`Lg7$[aTKH.nV!DBU/su31c^^O]/^[;Z^S`*`q`&p%,"=)DIesI56U5YC7IYE,F+K;0b1D;:Tg[.
%fD3r>5W@*tN@Qa?`bFB:c$`gU`V6t?.<(_"HQ_e^"Kj<G>4IN@Es6AZknW5uj]9`[,-_m6&@eT*=4r`?h(6YbP@;$J917LRKlf<=
%e[+%:=g*ao=Y2lNhajV&^1(CY(_S'mY[jKO+kDuhKP+9cRiFpkY$G"IM[$GKBfN+[(4`bs2BGq_L)b6W27a__EcWE9m<mRh2p+T4
%KNW'F2gu+"\-<$oc9;g&DdG^AL6L(sUH^./K<m\(l&TB@VEE*L0Pgm'aW'ef5Sh*p+L5,3=,-<ORr):A;0Q;]bMM"h(:qb1-F,?o
%Q@dnO'#R"iL405Ce,ZUe'00u5(cXA6<58WQ6Hc.(]+p8g<,tS!kcD^J#u["(SGN;t#uN!m0^Gt;I@9ZF]2.3VW_F`Xe)keYaVH7,
%>K(0>hAtbl@Dcp?F#5EupPeR7pt0mgf$^NYBA!Pkf0hqEi2/j,9T#ml!XV?.f8X>1WRT"RB^;]s"%e"$\X4r*?9oN6(u)H,P\4_6
%/_G`A5ROI\-g/pcE,KhN2Z"5Zag#e:?u*U:oeTIjoWOXZMl],EP</T4k)FAa8,'OH>>fU/5W<.jBuR"^3Sk@_9@e-O\(c(pHjdHY
%rJ=q_9OB:Sa:`t3"rf]4Nm=mbRfj,.3IY9l"W:KWm<^i7!UDL[&C1b)Q4(E^.rY>#(iV?2H>'od]?#4J,0ZC<<"`8D"M!?W>C"Cg
%VMXK0?Jq[\o]juE-pr^OI=XmW,>n%mN,bHF=6lMc(dl>RjW6s@"49r_,GL\4..qDef609Hakm@#^h_8Bgn)0^.W>&RCO)*=0ES.`
%(EL7sAbt#e4HS:-N5sAink5*dB;%p'o0Vg*gc/29?btO@ZW3X@:?Sf%6[05IYe[gJbk2e[Ft9E=<BUAe\Y!+6JUmR0+aJ4`]ZF_9
%]u>sGcVm;WE&@%5h3E"n[dp6U_$SH*#gQ.jpnWo%iq[bE_-bM`0TF@uC/hSA_nY&8/`$blb.ON>SsX\D@i6t>7s^B()sWY\8FVC7
%>Qd*A$GCq3f7F$G.:0qKkEYGo#(L"PcjD+oja/"e0o&qHj0`DRhg5HH';I^ICMfH.#At/`k.-7tN7[615acdMAEMZ@LTc5a"l6iL
%TT'_ND9oF],'n*HMLoRas&^*)cg,MkehqmeHAIO9\Yk)s%&`#cb%c4#"3/g03NB:&2qSbM[91H.ee"1Q<t^2A]TV*B5gl%apk\(`
%ALn`+>fHlecoFaI*6i'm%j"sQrn4m>,XO=Qe8@^^N)Q#8O<Z3ERs:S_cSuk,7j<!L2HoCI<^<"@VM/\-?pVj"SK]km]4bY>;A8"-
%&hgGMUl7"=HmU1re(^63C48rn;N!oM-8A"CIAtrUqZ+^n@'V\+TJ'2O/+/#u'fa[WLD#a(G;@l*F9[TC>u'/h0>DcK5MUg0BW/nr
%mIu/5f=4AD$_VAnE9Gn,R)=\mL7$L@S;e--=+#==c''TcWk)41_4,G@"Z5,U=gm^h5%j_o$k*\[m8S5"oI#f_fku4SO]bOJ1im%A
%!U1NR"W>qR9sRbj_"AOfX:P?dS=gn]H*Z:G4\*S[:`mpXXVK-@aQhaW;p5F?VIB^@bL:U:*?D`P]mA],'/7l;D;tMg9<<$Hq3iZu
%S_:f8'lNBT2)*;%:2?E64*"p_Cm!Pk3gHFPe](MK_EhNi;WEVG&"$u$&;WhkpPJ)bN3+<P^i=Dt5_Ga\b,PffJOFgtcMKZDK-TCd
%5F?J*+tuWt1,tR<L\)b!a8Sg\,.4I+2ec`0Zc5YnmRF:)pBVO1VOD>.'(>,pU1_nbXNDe43<L>4#i+OjQg'utV:c\fkaUKjfmV'Y
%]8_-ZGO&\hB)b<'"j4c3Pr"aZ.cJ6CNYMt5@3V7mh9(:^q(14F%.ql[?tACn"!`Z0Y+"@p6.fA5THN\dSm0JKD91f$foGB,-8j!B
%Z%ZB$ZY$AB2`:\k[\rK8)r'JkQKog@Ze8*rC'NK^W]'<UZIL^F,qO+7>ddiKJm&4o<-XP<q"^`&,mA]LSU:XMA"j7(K=QrSj^3`[
%q=020a_WIF$o\B!heQs.cqLuM6(hQ"TeBts9^SsYf`qA]f$2/^E?:agD5,O)l8C-!6)6ss[Zp@=l`LW#-_C\O=2Fm"Zsn2BESZS2
%QbYc+;W7is85N,IQ=,4W+RJjfJHt]V?F:B]6JBVQjhB"ebP,+7e8).5fus"7@Cp'j",tJ5KRRbp=@m"/,ZCm6^M(_ApHEilCV-D!
%1Au0+SEX-I6b)\ZTBDBtWK)n1b*WC=!8J-E>c(e&R<&,Y`S5@'X/7,.`VS_%,h^NrB(a^`'LBnWLujfi<5:3ZB8ZK:YU57IFUOkf
%ErubMB;Sq`_*F?'-(WfRp%r"2c*kI,:HLS=eW'YppDQ40p4*n=I0Js,+s^pTCGf=@#;k'?^+?_-&dI#)Sj8'Ec<Qkb_o&BFI4eI%
%2KOV@&'1/C@Z^)V*dk"W.9K*ugWJsD2?K)YVEUORrsFU(LXW!Q%>6M!@?C9k5\7XpMbQE.qTPr)XI8<86^`PJl/cOD&)8F\($rG3
%n"s5ZGqAo[@N1]6e:Wd(3CsZq<j?GJButDN^N9fA/q@NgrfPr$JFhmEi6D0uhN33s!N$aZ7DN^cpC(.HEQ6ZZgf>e86O+7SN3bE)
%(GThj@&J$GM`h'A,G,!])Mp2XB,N#4h&BcE02T4qj!p'h>^19d]5H`nYB-.7Q-XdTS@P.#MeAJgfrHJ`]J3/>40q->:jN2S6#*,%
%]nm/r6t,f'>b3Ho_f^%d4i`3&X'.[>S6pWo'o\d1'IP..oN5i0L,]\(?E8gb\lDRbSARTn]%X4KQ03O'BS=6eX./KQ"ihCgQLXZ/
%Mn^$MWJSkJdb.8g'A4WIQZliK8PpOZX>SB,>f.:+R!ouJAAS*Pbjj]S;FtrHoSkcbjc&dKOn-aq^_Hn\\]ApV5UPV)&?!h?3;)uG
%:Lo?r.lL<]Rr`O5[E.f!--,e6Z^A&"Z)CrM?%Uh3$?g8Tag`':>[$$;gh0Dh=kc2SFsiYZ31&d/]D.aXQS"+!2Sa.n[N_%kSU'Yr
%`A<(8k$@E"5DU1,7\iH+!3UR<&dJ*o&a5*6F/ElGklYaiNTJl(Vb>_Qq-kFr).BV_aG[/,GEcq7\a`k#?=5&Rn>+B@U;GQ"fp*!-
%)&D?X!(3rGh^',_SM!hn4hkWco,$4tdWgi2eHaTIIg.1?P:I4/e;U>e_e6m&q^N;#D>)YF9:1O$F@S""XVX:U/Gt5`d+/ND0EaGD
%kOT4Xel0$+9&=.aINp;*A4n)SOC(Z"c&4,]>-cq*_!D<9Q'i[WT"jHOou&CZA`f46RMZ=CA)TnSS&Rr9/*Z='cb3I*qp7!.QQ]'5
%U^>V$1C&%;Sd[WL3Z'`rEtXEZ>5]VsH7cXIR<atMhRio%Lrke$9p8SM;-T@9.!k:mbSF?F"!Hs!o2]dp%)PY,U!YArb&>D<4I^.?
%Or9'DVZ>)l$^;FJGF`PHQ.J;!h(fU)er\*)ds36TInj^oZ_#8gUs%-nB]CHQ&hX*#/S-te6j#!PGThRoT"T.GF1I6/W5"iF+gMpe
%inT[F#O&5*"Yb`bJA<ePVmnH56`Q_.1CLbY4E+Tp\\OBA[c\'d)0jb7%==tJmCU=snA$h2E:_p^EZ--7W!"?N`g=K&drNH`_)0W=
%So%`*8MT]d8H)Qo7[73R\T@J-/3d6'.i*Xa"f?*[Y'UK*$Jnh9CG/+tD>R$qNm4l'<gJoJEbRnEl+o&dJpZ])ae4t0bQ@Scp!1'T
%b"+,U9]#(]>Mgr.&1QQseJ/B9cLr!WNN5'<hN06]Q@9M:TPi)GR?C;5(O&#Sca)Ae]uQrqgj1T+b7gEYc@-]NEp&T&q/\5%I<!Jp
%X`UcV4OY?j`*Ej88L95KC34hR??7ljLd#1DK%"0:b<-<,4YSM8*%,!Leput_pV9*@cN2<(.lEePjt!c<Wfp@s%,V0h-#sQ13URtO
%=fiq1)GYYS=a4mYK>A>]=bnLX9kkbEE8B0Jh=lm*bVA3Y^0dA<@_cQBk^YI.h9!QRWr_hk\+l"q/Y<7hMPI.jjY2W?_]="T/P0/.
%<ctu9SL,0^M[t&s1aU:b2Qr"!ptS&XQj:UJacG'e2kc<O$ZeODV1LLN\ib1F>KN@4/g`S!N>^=#'cfrY.!$q77iM/?4-fZ^-N4r]
%SW?oo2C=TmK85cRKB0TaP%14Y_*Y9t$tk?"JJ_hr0iWqOd.m&:LL`"*_\7)+:VZV52qDMW9X</_[Foi8?:qW5p[PaPj/Nj2d2[%s
%A#X(TWipZBQWbthldcu&Kgm7a9<_h[=+0p$<4eb53R7WqcTeg@bA0SJ[@22@Xgt6[E>a6P>PiL7#BZa6,j;9Q#/6VTn0d^_T*Jlq
%`GbuEFJ4(360.hR)2Ad=T=B/q[t$+Y'DF<[g+AWKcRANDjUFX3i6N;Pgj80Ri6O%M1E!dpcG17&%Q8d-%+X83i0u"sImW7c2`[(F
%nA>U,F:GI70"p24r=V;c"m07:"b1P[o`N>(@)*Q``n^e&0`;K2?GiCqltcOT%):`Y,OA3OL)l`[a^Ytg@gi&Z.f`sa4idO)H?M1L
%[Xq_M3sU)`l)e2m]d];CSnu(rL0QWJo`0<-T<k)pa<Tl1B?G;a$V*(7SmG/VJ/PR;p"H)e;tO*RRBsqiqt1//r;!71G"*k1jNJle
%>KdCu*<*uQ1n;GK^+b8ld0"kqFSC^ueC!S)X_hqC,((A80*,$HjVMla6nX"4&NE4e2Rl\%X9K[*QmQt+]EieT/tH*.FoTfZ2L61Z
%<7[o?E?d5##Oa=S9RIPt)Q>f654oV79oU>[HfG!q9Sk`DeSG]c)f/YFJt?rbj)BWrmQ=RP"Tmd<9WTg6CtWP,KCQpR/R->&#/"U?
%m[o!?7\qjo.TeaAON+,QOT%*#_6YA=PGbo(HAt3u>iekR=mdd6D8+rh&\F?gV]%-BKc3dQp,UJ&qEC:m2d=E:^3YGM[3dO&Or/OE
%A&"]^8S/Dr_hFhs.Y5;a'X4TfqG(TbrHo6Q*AFb,ZS:7-]U;a,)OF7$0Va,<bl"A>Do!Ds]rO6Bl?\.CXYt7d"3aE9[G$NO$V.31
%-HoqIenH_&GOJ^N,])S0SY'0f,-5,B1].E`3u)f9)7XgJD8;5SK]"EeA9+eLX"uq0[!I)];L@Q2FgQlG=N/9^%>N6;VMI=;2.):a
%[?bWmdTXgkVq)&g6`p=Lj[SQ\b._S\*J[)L)NZ\UHW%W,@SDm1HM-WmeiUVVB`5sBOu?_"^M&7%S(<<,<Ne<No+eWpC[I$<g?%2?
%XGn*9KA(R_<7>1/`!4r6'XMLP&Sjk*Iakj7=X/?lc.1\bg4Ec,Ub1/0H>OO%!87ctBPT7SC_gmD(as.&3_<6(/672QC\QYmp1F<$
%e)!sqXS/>.K8ui&l0^U2ICU7\BjY(n]=)e0BPMm<ZSQI5(U%M-'[CG`7X%-[M;5j]WL>WHIIH%,CK\9IT[O\H\P>@^<HZ<GhP`4@
%n#gfAoS$N4?js5"G862(]NB:X]$^?2+sgOYdU^ot,L\#Ggk;<c'(l.7/j4#-Fh*jE:KMorNcgVb6;:PI<IMHuphHh@AoCkaHT,X%
%.65uDg.cEgf9q/lqpD-.7p^fP-MlE%DH7:aaGGp7>mL#5-@MaMqC[MK$e`)@4.:_P*qS6DoR<ReV@QC?7XtCUmHYFF[g.?DZ;f9h
%RdQ][E]]0ClVCSGIHrKId,4.@-N/"1VUORJSCS@+k!]73.DLFOo[?9UW+V(2_3qHLd6BG?dt9I297D-JNgASJr7^JY=nnupIMOT_
%ZtJV3Ai_GePE)uLmFHd<YVWPj>A#42p>ifaTA^C\j&s-#*hJ?tRJGNpbrZBgkT"1Y)2rd+'n^@@!`o:H4uEJqUs3k-BoF!/mXEWH
%+'oBceT/lCBEk"6_nD)D1VAZ:mtT[<))/_2?gEGL^H4/bHaqC8)YL7l:?,ksoEBA7A#,,J)A?Wo`ds*E^eNKa]c0\*/YbI@I(7=C
%N4>AL)$bipd5]D+3fS39jjmsQDB1&/iOUi@DP!DrkZ.8sPU]Tq;mFp?RHdT<$e$\ASs`pI_lB[X\@7kQQ"&LdNY3.))OfY?XkDA<
%hjFT*5f=Xh$aJi1/p_05!Z>]i9q+WDdhCRqpI_cLH(8m[b\X;\Z^=WYfA]EWlBYhS'";,Y0MY:?4i:Cec;Do.=%_@R?7BaE6H366
%)pA+<jL6$_ml%5qpo(Y+ShoidMh5kX/U5SIl]mULXnNP"@dT-E-gQS9I^HC[qpB#\%%_=-&Cn3X$bD?MoBPbu0(#(3mC%=2gMe0C
%Ye=%(:)g6L"@4tiF'G9BHZI(uqmh?*ZtGdHBs2Xs^&@r@m^77G]ik6.1V._mVQGuu@>NYX_2'?#87'$f3m-JHjgahFGoa(a[oLJi
%fbcd4K*Sm7Q?oVn"3/X=R2F4W2pUuRq:9gi3BqTEjm.M>>ag[Y\rugCj_-J3Y#%p_GGXJV(KW3*H<h'5V&'qU8&+B'rmGeUc,k%9
%pKBe%?hj/]]>W:nm[HN)f%mn-qV>)s0kMi&@B9LI/hJ\,f!Gjj,4;UCf2U+LFg*]V9agV5O5ZX'H9<pGbnI"\@o#,`EppQF3qJpa
%d0t?X.sdE2P%d\)!MAK(S+aU'HgALIanm&A96f>DK9/lQ>D)h.4r9]sq-rMQUT\cXe+rF5B<70(5@])"pPeXs7TS(^^('B*q/k?K
%^NS-YriTbhp:o@a_1:()\d3tnf0UUHE]!s$7^F-!N6UCuHhcG7Zp+9e_6BcVV*3sJb'1[k\7ZNBd?HN0oUrLheo!k<Ku,B?:8`K5
%LNrGH7$\L)@=9`d$%%JK4e+:abedH7iHb3`3!1ZqFDd.Aanr,0,cB)mnTBtTg_3'5rj6,PR(.-:*`GpC3hM=B1+"@%auib"^"\]!
%b2VjDF15<@5>S*4aRf84><Kqn:R:VHrkiNqEH.V2`N;9rlk1C`A*oblEbneIHfOgIR?#<CS`fcZfij?D+0(D+i\PUe]PojYUPnmn
%rHqJ3<U(BFcCVS>B6ZDpWo[NCAC,*a1sH5AU,Nt7P1l8c;::@eP0%P/IZV2_h"HqM-@D19SWDW*iN)c"<M$bce4V9p:X/++%JmEV
%9<1"BoMji7-Hh_'rD*>=F*9M2AV.<_-<$p)SXJZq@59WcXZ!L<A":c?6<6bQqFR1#P1Ia'c?/s'jJ&ec3-RrQY&g-PbN-&C9.]OU
%KO44<b9cL%s(pn"oC"RF?#YSBksD7BNs^*KCqMI,NX&""WuNc>/XEm*oj]pdHjf-%P%F'l/B%q/Xjh.rT1d'@,$m1Z*gq'8iT6rl
%+Rh&rSg7MpLZnV-XR1SLU6VT)Brqe^*oEt59RB]tPGrZ3F\R1^DlK]/dM<f209^tRj5mCMIsF%7J'-92eQfJIH#\1GO1Mm8p7<:m
%lCK0%Y88j`k4LY0_HprKqt$jbNm_4`_I`o6k,N>-=;kdQh;,U1^',H7+kK.mEd:r*\d7>=1[f(#RP-PAXJOH1fik*#`HeL*1"TS2
%[bnX(G&R$)WQ0&?qOs=e\u&]Zd>e/PL>>gan`ij+R!lTSUmaKoc#%LJ^V5+%)0E?05G#Or'V=4MC,U/*DD8)6mqo7@_>DIJFm&c"
%d1^iQiai'419=_C[-SCi@?S#t*jIn=I4T^M09<f5:Ai3HlY<'?#4ga;WABGsCS..O+7V@;)<j7j?Ss@[<,3J$n_jNI925<1Ij'Hq
%laHE]3nl9UZ!b1j2mg8%I)YnsHA[\g?QRlQITGeti>7??>PoXADrU@trMgNJeE`ZphG([N><@g^k`UW+:Yd@M4a*fF&aoniK=B];
%f1kud2ie`k=*"1pHL)eDN760Dhck?op1q-]oDY\\n.*)PDfJTh)V]lV6YV>4X(cZXG>2t0it5"L^*cR<]Xj+cP1.S]1ecd.oks<%
%q.,u-bm)/>-u9mt7Q6`GE5]E6nF:et.Q"l3A&LcZ2i1<CkKV-0`KMfH:$/ZoRPeMLe#pk7U[18o99fk@>ADfIT?fXfRXS:U[U3[3
%9j7\T]SBhRrqG.kY+rC2-UB,McSot#)U'uQ6U*+2AZVGW,Dp-D<T=ralLt@j4Q.ll&2o@Di87t8Sb?T4Y_QWgrmg`3@%YE_+91=-
%*lXJ14_e3Vru/7MgiQe=Q`]PW>msjhr9!O??U_WN)ct4$gl89,U;`ubrG[3bco5EYVXM6[0CO4'Ysr-"[<N'6Xi"_%Rju3\)4^l)
%r?88M%nUa/[1>srH).FI=77nJLV)hk]41MHY(+2ED7T3l*i996QPoTOC9MVq.c_$>-ZnppeIQZQYcGD(6CWLPShuP3SYU[W=\=pr
%9KZ96^NJ\;#N&7AIX5sG*ch"W>V$cY@b,(/.Wj]6gC6/61`elMp-Fb4W-*b5+g%m4CdPd$n6/k.Dtj05$TT,@/Sp;taB?I&q<SR"
%bL^P]]B2s,Y^&*b5rT?s-Ho$IhT(g<75:/,2rVjc"3-H(4ku$KEY(3*q?_ZD!Im6h\&IrBj,1!7(DDBD%+"kN[0*Sma1r;#c\U>8
%13`As,u]LbPme4c)a%q`nEE%I.sMK_W*'f,qKs=)XEoStJ[AqeQ$5Wsp%h9F^U)NA]r!lB#4Ct/oa4iP$/K'*kSAPS6ZT!Xlab<^
%R*MXu;Qo`jeTkcpS2HnJ?A5p%FmRDa0@!RD%Hu,)d=,3.=5Wt?44d)1.J4%Z@<B%_`)%\Z%4-,PGs,/)mF>19po8'C^8@O6SeCD?
%_JcR!Loe5])Z6ZC4R&WlVD`H1(OE3Q9X8s:[=\3/f.0s6Sa<@XDL"^>BDVG$_stHP^"5g0J))'R'RP7JZn>@*%D)C1'A"bAFep+2
%W<I(&M:`[,?L'ieh@1uYV-Y$<r#Sf%'jC#X`]o.%93qp1348MK>hFJ(fW-V`#bEn#SsiQ\mbIDTNpDsocuO41HGaE"9rmrE]CYaJ
%)s(Dtm\G[n#Oc6;/n>mFlKoAh](Z]@D"1b8qI36JYM#gN:=AIG\[rJr@'E_u>-A*]ig),hK^BY01HE%3`s5kGf76%ElK)@%HHit#
%f&s9==4du>EUc2TGbZo2MS1pC-Eh0fAYSF3X7Z8PE&ZMe(cYPc[p1%.+!3%G`EmIVdt)8;c/Fp1MH@K3h$>%ah)FHK\T4kgYMhO/
%30,N_3\0GoHbF.VFY%G=.&'pehd2O'b.Uj9g%NV>o<Vo0ca?VIegoX;d.,l(^R%m`odSsNB#Y>B?8(2JP?Ks,<U@,!F?g/7MCraZ
%g9`?ChI!n$jJ8U(CZs3?djCY,=jUsFSa.#j[?ZE6[tAOkf8eH,><J4,$?"sOopFb$JeZgoqpcTV_HuVFR]$,X%RW3XWSIUra(W"g
%A11q]k`rica`,c3j_s+):#0;JWDKtNb]R.uHZaABrnpPV=@oHc@tANdQ1YJO-iq'6$`r]Vo]dOPB>2PjY#k'p,[H`0HH%B8]JG6^
%]B/8)8V1-MECh[I`r<G<9'A-QjciVE7hMpV?Jc?>4!6IBr.SqH$PceFaR7nl@?VY<]0g7qc'@]L'EJc`)5G@7?lk98ZpD5!7Kd:H
%"!ObZ(caAZamVu[]">rP<!!?VMifC;]-36CnZ%%^Lqf<XGND4#k`[(J6W`sNMJ[[u;8:kboqP-'H(kK72-m[i:jG0&0G_s;)?+O2
%oH';UIVg=)Do,dR(QmVBPdpR4<IgQtD..oDgq>Re>[$g4:ROaiFa'BiYD/D%RHigNCjf>\]fWgqUoosM/r2D'jl.q.Nrt'=U41Y)
%-''^.Vg>g6m5-=4Lh>-TMbdC(]@g`&6`AinGqO3k#,3EOShj#-j`,ddSW-bg=@^S4fj.hJMRa;dVOcmcbHoQAc!-B(!8QSASm<m@
%AYm!T%uHbM/o]Z8c=>R:9llV[kqTmBho*fEY3k-)]Qr-ckT6Y0N`,Wn\ArM>pu-nXEa!geObOse5jX3N3)a+%(jTO7FGMkR$R&..
%4Jl6:+XdT>+BB>!]b`<pdY)h!JFb*k<N^(MC'(!hh40\U^`NW+p<T'Gl<Rr%@f^UFQ\GF#6R'+\^"UapK.E3n"+'q=D#>]d"]cX2
%%K)mQ.o8fUQtihm>lV+/eE^T"5S`!Q65T@L'DLd-Sr%b&?)F'b?@,/:IaosD*tf$f/`;m+3W=IcH!L!1+%ppfgoL,U-lhh,osuj-
%3S._sY#e)'kZYWtoQpP=NiOeQpnY?K'OB"l;!f"/(.71ica?NE??pIKlaUD%,r0,2W:gRXPa5idM=@6hmb<<sJ.\)rkY3sfno-8R
%a`K%<5l^hH]rO_XN=)V6-ube$3`5tDVkd$$^fmku=7\fu)?SV82lAYr!sm@L/0slQ8Je@efN00bRCUo^63:D:$d^apZ^f?0d3dL2
%4Bsjmis$)+k8uKFK&Kkb[<LjLMM;\g)MAWJPnJE$N9`nCX5O'>@P]&n&m=5t@*1>P15=m\6frV!+gTf74p/F=M\1Ci>q?2.>mETR
%d+t0q(Bi_\!a0(&MYEp++u7<>mk4DF#4;S6k3]T3NP\,\0u<5sITZ!J$#jk6mP/"WMlZ?-/@`e6hX`j*PuiW?VE4Vd`pTUT#a?<#
%(b<rW@*!b4S\q=bgRQtUNVXrU<`KR%9mj'(LRc8B2N;Yc.2emuV3fOCB6()_L07Gn\S\IBn9i`jZ3<G:?hpVoc(p-3#*o&#@X@h-
%$Bds]5VGpu+^Fjd]qeQIZB@N^>6'WG,qGNnmmh"9qc'B11^*1t*Hh_o)`^3[6GAfQP/8]dZ"NJ%LHrRbJ9[W1miBj<.2LpcbEE>5
%.3`sh?_5FYf`aD)`D*DERF^0KjNC"PnqP:p1,]iZLq;%`YeV1'BDHF_W)'/k]u<(\+I7p_->[!?7PMWiN65,QB,H)0.W"-4'uFqG
%#deTPd`+/?Cp=-K/K("8*\!9jP;Tb*fq>`"?%CLK1B>`MXZeoS\a'=8Fa*G:Z`2"3f9dS-4>*iMp+"YG",KNi[]DNjM^a?%?qOMJ
%mr\iN@0VQn,`5g,>qLgX)B6JHbps8TT'n@*BL7FX!!tU#?G"diZOPAm>G%3f?<-60lUF;S.C8^r`2FR\Wi"iLHV,V&fJnrY7SP2$
%A@3<#6^e^"`iVp5+WFFp]MrXheJ-UEi8BkQhCpMSU80QA>!j-eb*XGO%XqOF[bc'$OQJ6E-MIesXGtIGJRf7gRghN0%\^@d16),+
%j>.c!<mn4[k4G_L9;5\pRJ)KgmPd3f3tcCg_7(Z:g@U^D9e>*a6F<.+[38)EH+.Tp/rq8mD&:C+Y`$!C:m5Um]:g"jnPNVam"Oln
%Q=oLNr=$N5(-I2'9scXV5bJLd>X9ZtdVrU:8EsMor$6jQbYhB?9B_Y7TklP$[Yonm,N637K0f55eOQo2*XHh>65HQN\_BXXPG>?f
%!6C[#Ru/7-'O]/^;8t75Db\?'jEF*qiUOpf8^B3AEJic6i*-dKIWfcd7G\-=]Wajh?m;=u5=Ar`Y*)3TN-%CES2mm-f;q._rRSIY
%Z7's0%9l.S@SYZ/$AuHO!]c"`\,\eBZod63W@kFsPkC#pH.=JE[j'U.]LBUI@^Bni1G"i?B(G/JO*0'&i=plD0_Bf3^"-5qEg-Z_
%?4)TrPp:O.QI&:9fY(qVO\<:<9Cg')kf-2';/3o]^q@8)"s$=:5d"e@6TQE%T4:c^)Y`O5'M0iW%6;mMO:r<o#pr8D[sH;g![/@^
%BeIrc?CCNB)@PL.%@H,1o0JVZ$sd%8Zl]Pd9hKAcq-HN--+11H2VXsY18+^'IMJms&h&8q+H]K^KI!@*G%*)bVhm!B^^MX]a6dJ^
%H"CTgXr@N77BR&gLU5Eeb?1[2C@kh;#>Nt+@Z+P,ekK;M)F&nF727gB2eWi(]]MuX_!WD$SsAEKn3\U<V)hF93k/$$>[/6G]8H`)
%g9j28[QMM.+Ysp2B;t\b1GkPg$hq8,if"G)(V"(>4,"b^J8$\W-VC=bknGTlIb0g&AU[>OnYS?\mAltgYc7:A\?gjCM[*[K6cQ=8
%Pk`5YWN&6``ogN.H()p@OUj@GYS<@+&WGHR%=M]XA(:pF$gar&<Ek[T19-f`8GaC2NkoV!>,#^`RoXY8/[e^mj()jV96POPU[3?E
%ei_4uG7%?Lq*nJsR#MG=<Ar)\8iL?m=d*aIa<kr&5%S&r!GrJ<gZE+[R<NlR)<iIYhLjCn9Y+N5Ut[7*-lC<#Q#<(f!1:DPOD[/g
%84.)5D.p7t>=jD5%=Q&F0%\I)*@6'T]\Ed5.BXfXUriONISX.SXX)VO<46(c4L.DY,OgN?U?_6:F=[+G)-q2S*D%;<MiBOCQ*&^r
%=RifD@M2i'6;G]fh.T#io.L;kYM6:>Ms+:"h0dT0QH]l/4B]tZ8&PLG7:Pp_JrmT%Zn\UJer"2D%+ik;kP^P%7*H122iBWKlgiUb
%`OuuWdl-G\J>#]?+2KhTjqY7B$;pF?Y%oHJ*:2f%hVEX?p!5QC<K?@7L8#c.;&sU^6E;lae,/Ras-i9V1UlT1dg^.pNehG0CC&>a
%hl,,9L-BJQ_cE"dj!l[cRsoa2hm=HVPbSfRg8H+JlatI3g+J5:gt\jna+tTfbA3BsTo;4.#1o_29T,:,.e\F</_qj-Eg\;7^<Z1j
%14k4j;-i@/8F(Z(&75tXBsDT#5f%7tQ'T$s)Ou\m"%[au6=UCV!&6D`7(,ouA5Y;(V89"!N\sOrG,c(!-TB>7]&R,4Xer'o;WFPT
%;r9n!SAH;t)40"HKrMbi[I)^5.!n1_.F=(K/6]3(!AC@A6*rVYg;\_d6JEo;!8j$P-[i`adoXC%87V53GM%+5ZK50W9#8LFeZ#;'
%Z'#/nkoMY-3i5tqrl>mGdea*(pp-j[I*3s=XQAK,oN.:KD6Dt&h0_pWhcd4H>!>5oI_M=jF"JKPk"EkmpbesMbI;FQ5$cIC\X)]>
%:qHGdE^%HKQaM3*PY)`V;U2b^QLDlRP`a:Xo51Ylqm!0<qcl/=k#srDVL:lnT3PPk'<kL14a/RB>M!`Olt8MLU/m4P2s%LDfj_-[
%]b61fAoeTEA69ejZme"n(S/?T7&o"a0cMpKe,rTa)j2)LD7l-5C527gAu5Knfaf/MPq4&cSl<taBuOd*9&-K\^/`6aMfm75/(43`
%6<Flq7biA#=".^+Xnao3bRep`KV<YjB"dP+)X('Dr:VkUj;TTk+hTM+Xb!WL_c!Vo>I:ZKG`V$pm<kCgB6*G\-fc:k4,]P:Z8oZf
%2:fDU+@ZVqB6VZTq4UWuHLK41]'N0@iUUJiGIuq&W4Gj1m-YOLX_"2rCQh8m")ZQZ913*DPbD(sQ)n_o(o#>4PGKS<@dBLI*RFU@
%G"7eDG]%`g=F!M#?H#%OAIrm[\lW-<Q.J9=%^baWTG@V0o\-N(NY#l."<*V!3^*nqA.]RGq"5Ggj8@gG"B71t[ah.pMU>C?0i@HE
%E_YM?RtfXnVQdD;r^JPtEN.R2kr*,0,Fk2G):MEc2Pu/;dL3%SC.m^f/nkX*]JSoQ?md/E+h`bZW`u#U['n3_ams'UUU@P46taua
%AD=/h[;C?u3h!+:lrOa8F5cDe7,)lg_`"72b'-a-pC:mY<C+$?#M%%(<^jf;1#fK?eGGa$p3nP'bh1@`8@N.AYFZO=I_7-^EcJ7.
%iQM/85sZD!<]lpckmsf&Yt\&r2'<\nK>QcG>f>+)6cn1g`QImWC:d>+,#p&lMsX?9&S`RkEq31X:N_P2/([eTdo#ZA!(pHs]Hh6r
%TnFQ**LPWD&e3DXmGa#'f,Db%^QG5!PX'(<e<:02+3P=_Q)a-e<`R3/A>^/&CqaTM^D1<q?dVV9,8FZ=87mOYk<m,o2V6RM_9-\$
%AjR[O94:L8KJA;sPrFuFm1d7e>jUYN,#W9]`SE@%C%TEU*kdu+<22BeS>Hq4.=Emr,82t;q<Vmk2r:lsdte_"5`"9]^*G]FZsirc
%qSdi1Z=/M/]cM'<oS-.ogK"jZl0&Scoc8MUI0FIG<!WA(X2s1_6j!f$V/$Sr;.Z`&AYlXJ/_2L2Us%Lb@lG:R5K!e=GV?4:qG2.M
%XK3-8OX7dcH8RtP+;M48_`sWT1dE[&r\SYc,qP>`+(/&M`hjf8>+l)2fiI,,l!r%OAM0NdLE'U-WR>ZZ#Xh<_KXCPK0rr6P.W:99
%DQWMok5s4')mUuKL6oAf?$rk3Dp?$_a<^dNAY/a9e<a4uESZ#N5'D9a*bp\T-S+dh2'.q?]FWVsW)Vn.jUQ0HB]n1+F]4haVu,Jr
%49X(-'pX%pF7A44+paHZ5EO2bq,CpsdbMJIeuu7#q]S+]ISmiOl$X_KT^E0ps.R.oh-CY1IB/&^@;DK0]bDoI)[\%eEa.Lj=,GiB
%RpMRXKCjK8`Q(U4\VBIC26#'1":860c&N6]9gKXjO&5MPG<0)rZdW<QT6^KSf+`"6OBH.Q;6\NX9EsL&]M\@.In1*rg0.>G_;/Fo
%+=(djX&>Y[BA?toUo=h1NoElQ1Y'r]En%?j\sV/K%u.BK5V)-C8<VfB]ciW9s)"\*Uc4oi]Ml,Hm(D@ITPKnFU]G=jI6HWp9Ah(5
%[q)giVbAZZ0gqnt7[^^V_9!XSA8tmZZ*O$)7C'G+UDR*8bCSC6g>%-SOmLQo<trcn<kbA#(=oU98WbQ?kjq6KYa)U?=g`mb\!N65
%Y'Juh'F7HUDG=Q&Y"+8aHG%uP#2:</pG56`MJDPEMt5B\k"CX'I]Ui-7re#_>*PpO[')+)6hNT,=d8[@?c^.]9MsYmP/RZanhs^2
%U2;)VIAOY<ZeOa=Bj&a#g;_;'-%:`#PAJ9p9=WcgklY-W3bM,<mnaWsLTPtSUa[XZjS\'J]2@=,-Fd5?PS<'KMg\A9FjXVUm/`pH
%$Jt=2L@q?gL(?nfX#O?@jPQ_F=34,Jk(.l3BY67IO)ON27c0\JF5aID9<K#5B+loKPg6ZhK(n&Ii%kmH3ftrr>,?>`fhJACXtkCl
%6?BS3:58:BjAlO`8W1GD'Yp8T+4X_1(V5LRAO/k$fj1shX,>rgU0ddcX5R;VWKl;qD(>6hFLdu9]MN-MGHI*UYoe?,3Ngs!lfMZk
%]H\um<W7TZLlGR2.PJDdDs(H@n53GGp4IijTm9Si*Tg>geTN")W"o15o_S<tr(4TSn,@<*!Sh3aYohM2.J<OInXdT)1$kkSq[o;)
%)mA\ZHd,k\k/H2GSB,>ADmZXtldZn@JTWL8c[?JZ4efjrb+MV--@J[Tc#?oH6MY2`#8NJ;-(nYB/llq/5*d_O9rGfR`2UG+ml@UH
%f95ak7VZucLepTl;TOK4?G.c&ZLOJln!f)d4=9=7p"M:6G(.,rP$onTc`_`0Ss"gBp8#0f098^TeP+1-o5$/fDd/?kSt"VkpVAfS
%.5f(!W78-K-o5[fd0aO>X<X](X=\?lfJFq[/WeXCBlh1ZA-(l>XID>Wj^h,d]NRns`Rbgt.1L96/)p/SI7dLf;H*Ne$N$(I@gcN!
%$OcirWqo,Q?=-^b[pe1c.gu5R7H`8<p3eRKNEk,6jI7PPoHt%D,_gqJeL-O^?W#IR<7RlpCd(qQVrV,:;\[!LYYV6uDmbN#AVGPa
%`@._N>Gh+C?"'@'<M([Oo2UKm8i+\H]>(_W:M"nGWsefh`j?!\I:6QVdN"-CXhLa<:T:@4MZNL5_EOfnIf+!%f!ZCgTl(WqZER-]
%'P.+p,MHa>EEAkX'_^oZ[*KH[.96$I>BjLXfV_^!pI"`[JtFLY;eeRk@caqMI3QNZ2d963<^'jBVdrm/pm:nH[8.V4.96&_dWrR$
%YYSu!<]_@0<nJchGZ!"Hk^0=-"L7r=_aaVq$i?/bqB8)>J#C.Il'OC(Ld*d3a\$tLKtZ6M,3kRpgYAae[b#bu<J3Z44YuQ]QG%MM
%[_9XU`T6gZ\+lZ3.q7gKr(r=7=IVmJF8Jg4A_>8YL;G*!)d[G1/WJD*9M:EHjTU+3oqqaRHgfW&8$Zq?Im7`=+$^Un9r4sC3C"E)
%n%D.&,AH3>h><]qcYn;Cn&T8$9fFcPB[1nT]k\,#/sD]giHI]^pZh,JplE*g#AOFUA_KUICH+FdZ8n%b7QX<Ln]u*:C"ZbGlZ'5B
%;q6q8?(`:o1lg=,P3.6=3:sUgX+1-A>2Q1t)YH(qq;:sRN[$F]CX^P,rdSFU8e#S82^'7=Yg*3FHHI'5mf,56T5Hpc^Hp/0n^&j$
%2?.G`c]S2+HG`M`2uai/[b[#17s=")jbMu?O1[J0bjkNHa\?U\e,^K`O6];es47KZeou-%a>nZ9iJj%o]:%,l\@e]<T!Zqp8']8j
%4pVqP-U#N()h8k<U>RYcg+^;g2JB0;SFKLGoVA$?gRH`H;Quon]jh5)Y2&j,BAX[a;=+>`qBSlfH.lBQkOG3Go!EC%jJ+HsjFYF9
%LcK/WcLsiqIF+)iIJK*Y"%TT@0cr4lTf#s`alDU&3E>g84P"?+qn4rt8l$<gY4@<le,[1c*K$48iC2lj%V+g=YV?h4pgD>%lngU*
%W"g>5Y.=@Wb9)"\LG)u\Q\'>gM(u\TSHm\o(d!XBSp"Uc6H1:q*Taal@g&;4l>5*Nm\c)2LcK>[`RO*H96ef\)[taU;o_bT5^VjW
%ddT=@nHV:WRiWsAeCSJ\OAJDW;,!KHYtuNnDL-\P4S7:TpTMV'4B\E4pjN2-f*nRtA*NlW,9Fa,s%Ph@_u'F-U8f</mpD.Cg#)Yp
%:h8)-pM]=&%0S&_\;.'KXk%tH*1di9rL;4N8AcsP+7QYo`/Ppgrsj_RN1')1GVjMWCnC@[k>@J9hNK9^40EDW(I.fN*ZVI/h:V\f
%7sG9$ms+F@P31jTc!s"\nNdBs=Y9+#JIaf)IFVetIAi](BA[J@_3%:0ag:H^bqA_;j13k"N9NX\_6N4oa[CtbKAC_,R;&jZWgR?E
%;RKc0ZI7_!dO#<'iDI:[TDhP([tZu92@b"mn9&nmg:&fZhi28q4rH;GC/cD-leS7t='madhX-NK'<.jrofZPo*)QKoq-"GHN*Q_K
%mR4U\6i$$'A1tUUbI`0`1ud!8e&K_GI6)XRXl3T/4RG+s@C@'[*`Lq_>'"Ck!2uHkE,aZN+1,PAZ07ZU5FdMX3eh76fj07aEMMT0
%#44d['-d0glf*QicXuS8d^@-]-[2`L?XI-Ls5;o22[`L^\oL=4%%k2bHuI>;3jGi>M!j3(9rn<APnJ=Wq-N5g]/'!O:-NuMVpi!&
%h4!ceg@M4*R<_^O\P^7C!dB.-3G4)\[Fd%mLLhXKPGcQMF"b.!h!Vh[(W4]D:Mg#L_r#e%jKjV)DcK)"\#-e6[eX?6CV%%g3HB>\
%nBAPYZfRV2:3<u28\1F]?%2ca8<2K\a>SG#]ig-uL2Ceuoa>tu]JZ9Cm;K,A)4$]bHGj$kS;Q-Ee(aokm`B*/hO:ma;E]BaHEZM6
%)9^Dg`n):AJ*Y+o_p.UFHO@M?[f4DuTtf_C0(iJ92m**X[oSIXaPtJB\^`F;_ks"%^;&&2S?hX^^)%%%MY@MjVJ@FCX3SRo@feJu
%?c-,m3,*eGFQV'iD;?h)cEHMSV@:O1aqhhiKYX_KF'9LgS=Adl1c'#ue_]B^oc]buT-&;?i7>\C/Vs7C!LF%-eboRMDH#Sna,L,T
%)EU+M!&3UrVlG2FB@Q8j"S"baJ7E'(>)((RC%]<X-D(rYK,hZu?sobl1t]?d(qTN,!X"ad1T8,Z&*qqoEG<.VF_r,O2dMo_o'i\i
%`#TB0D]?j"gWJonZ,!8s"!BLSCuf$Kjqun%Y;Y*(^u>6+',A2"iD82fNqi@L%=4h^=m)JV8:QRq>uuZt#OK]DXdXeGH@8K9GoS5)
%DkqP+GP4+a6J%^IBh<5]:@:Ij)C%N8h['0r,)=#.k(";bV"Kn^h(Sb??Y,&>Bt)\[I-<[S=kAk"A_IWsAC6[/G`Y*Jn-]a0^q@F&
%@.sQ/fi6Kq8*](nV&4sMfo7KU3f^5s26Gh/!b3K%G.CR`=$N<<VVKVfd%lDQ%\8r2E!%eBe5Sr-SP`0%h$3_kM+tCAAF[&+:=+c%
%Aq/V-85D;qRqSNj4!4SciMIV,!M*nl2uJTmS(<qF4OiA]W6o"N]K&APijef?h;gS98n.fG#3R4SX6L@r,`[[iO6ME@.j]2jI)M=J
%3:SdOC,@meC,L0,ijef?2;JZU21t#-Ul>Q`9$d$+'$&6e*643`Och\A52njO][80b.ls7#FnIXCbXfgXP_[#H=lI1%qLIY3nX:1f
%*E4`QGa]@ZAomVuDH>BlLAe0A'b7LEO1SQR6uKWS2_1E`XTnOO1b7o.CO]Kn_SHT/\6B\<kgc3K(fd[bCNqgI<NF"q4RD-0rS7qg
%+]Am$n8L3PZGiMug@0(Bib"5P"*O!uW`kD4nF5A9<l`YXE-/S,W<r,YO-#+D$WK<3_o"doI(S-AB8kb>%1bP/Da:eLWP^!G9ob&M
%k(/u2iSj!<LJp_2n!P+9*mrS"DSsB>$%Vl@@q^*H3_a!U0^QUb&')ui4BfY?0!a]afGT(0&(0mNSO>G.nr;/J->@]aqJ-SJD[t7c
%E#=a1],cnF,8dK?iFqa?2XL:5L5-H7.6MW?rm5P<;ZlUA%b:&foMYr:\dm?]E6qP;S:#G*CP%:rA$F8=BQuKt4!m&XO5BAF1eOI*
%g#-S"DKsgCRpFh[7t7"g:sVE:%nCh*m'5+gKQo^$=0J5W-p@!CnkEoaH#+oGK=`.!c38qZ4<1IAoU/R3D0S%u.>nEPJ]SiPNdf-l
%<0Bfk*ffZ33%@fc=j"_/W,@C5duL-\iTP07[=*,WL51ti`uSC`GA"D&Z$G%h%1eMuWfPp(E3)6W7rNW3]%c3=-LLmD%k$^BGh@b+
%h,!8e=#_H[B(C\3K:HkD'`f5RiSeIVS$+i4L52P9*?JbNNh<=9ZJ4>;8#,5l2*@D1gsi#:*qgjLp4UA]%[i70fC8:6\[W;24<3l*
%F5lGH&RBOs_]aKu%+M6W0Lp#*3*)=>UGk:Tm0;lg2FhG*3%0cgD2\o:CPQYL381si5inb"4</4opQ=WI)]fLCZuH,5'/VfkfCh=9
%_o)!eMFVQ/fV^HIFZXESk(jHW>9A&s\&/[Ubg@=MN_\#>7raUBn8NKfVfU=IeF9\h@_Mcb_eV.n%1bs!-Dh8$Bf("N_pR9MVmP%%
%d2O.XEuLRERj79`=*@^b+=j#mPnf1-])?T<b,gr4I-dmDag'g0cl2@;e_``75TXL_WR>Wt]=]b%r6`?2ZRV=!2;9A,hDE!VpSM'(
%]b=UWqGrs!H=Ll;fC"'W&M\?DB&WQf;oR1Kc_Xs"XKIsi2_SHR(:2n1QJOe)iSEqBCOl+bqXUr'qf%"mnTF9dje%ltXUhmA:]C97
%3R5:iIdc@$2_1fSq-P(RDVkA<0DtbGoQ_=Cra!+Gq4r;L\N:IB>k)_bhu!=jq>L8]naXX)41E)Q8$b:,S9hh/kL]_rn_bJdd%AX4
%\a\\WcLU>2T<HG1Vfu4V`EP-ZD_7SEj^t^7dsjKpH?JZ-a-4jJpD5pSpjJQFHKjC@qi>?X$a3TCm"_3o(,!,'/&gZ4l^*OS5MfZr
%Y/E-jG'DhCZb(SK1$E6<jK&'!0>)^^Vj3VD@,^*Cj)NQ(W(thKG^h@5m_/CU%XcgK_#`W"I+Ru9DS3,Qhqe53Q?iL#qqIe"k-$`+
%o_e!sNGF1?M`W*jhES?YlV>]`>jKG`mB\lu:-O!ti6nTC]1_oWB<;.&lf=E,1[gI_HEBqDSb]\g_qtM<mcHH?8C";S5'V%X348?a
%`pS6Cf&hJSOHD*^c<AsC>Pk*oH?M+F'c&`A1G6YK\NA2EgY_W6^>@`q2RX^27sBCQIPnkQ+"UAep4N:L]]JjMJ'<DRRIccRTQQj>
%r,1?XQ*5+p1]%\Jh2d$9DpW*kZY&0;M(HiJY?&s+R+^R.=204!Z+#&Xn`/4/)ipS,i@e@1SM*\_'ecR'i)4g2>C3$#V>XO>*FA1b
%LL(>4Zh7[;QJQ9-T^nTMZ^bZ;Z>cM<5NJFQ(\pi=E6iaiT52^J[`tYn%=9nQ6aqr,ou5Caei%0MY$NuDB0X,5Vg<cO^Z?Q;rU&/H
%$_9N;=ErHoU!`\RX)b-2_c"frI]Rs2rFS*.\oRToEZAuAGE+hVI9U'+CU*Jd&,q"CLF/KUR]TL=75bKKRB=K+_f$lCa=@cQG!pLf
%HbWb][(U"-,rn'.`a$`7Girh:-AGn!R7H)DdGuSVilaRT(&$bG>;O6-o^=O*7%`e2+34K&X6n]AjrD-DZ1RZ<^Os12c(**uI<rNI
%f=9#GV=QdPk5JK[(cQA?rfU$R%^Q:2U/<>mPWl3NjL:WC5/"E^mNVs"YP-Xk4n<%/IUmhNn_Dj`__^K5XF2Y's&a]RqX$"j6Y.o8
%T7=9EHLCTO4880bVtu<6E:*6K3qSKV>WNDfgDc&&.bL%#h#&X3pQP[91RZ_,[SK##n1WJiqt'[9j_&H=iod:hq<PmtroHmT?h`X_
%*s+'/OS\a@cOWIJ4`SH^a%L(@Rll(@<r^l;[<=9SN6g7e24_5IL53tF%j-0n.*k4q2/h=A_bEDqhBZj,nQB@MC&>c8F!&,eICOQ2
%_uJDV8poaBh/)HCJ'N.i(@7"gSL8IXq%BQ\1UkM,2q;bhD*`q=B"n;]ED4leKal>+4e;B7ldhEq5>LZ1=Lk[6`33Ks;M]8t07shR
%h-$=IGNRB=1E5dHs/apd<7V'#3dn`JTq*rcqe$fnZhMe9\FBK%H/d96^"!d_5/_PPAUa'pM</qg?CY,(h?$OL`/7cFHt#+m\oM8&
%FlrfY%4@G\>N\e`]X`=b`2*]caFgZk[5RT73f0)N?$r[$Dgfn+Cci$1c^/JJCoBcf53ce89XMe7c3!V6'-SokgtS8bL?)FG5PS%M
%cdV>Wje$0eAmY%U6\euYL,i&ed\eJibn`;'e"XoI-q<XSq2K0BFE=.->M#/,>5uDL&*5[FE9KsV>jEBDbl$\Q`<FOh=*%[._o;):
%Tu/dRX^3J!D6:MI]_]A6gg7Qh']JHPjT4-Og=D&6b$sZO,0g/,C9=B?Rp91I@CY1TT3(\85ktAlr8kl+9e]VCN4&WRXlXn;[WgoT
%:_n?)ZA*Y8-7<KF[8?<g89U=aPilB0\QQ%P`J>#](G9'DF6hm=rq"p5n*B/f:[Tc?h0=<mkMF?'&'Ppee_]2b:'R(_S(4Kbn(1lP
%41TM5f*AQlRst*o.(o.QH6dW=mU1lo".D=\FhJ;`eYuItk;Ie'39SlD?`uXqHhCiXlcplanoJqf<F3"\p$8Nhc1NaPEi&oQr^i].
%D]_%,X^#/*6QI-?XXEj$(-XnY\GG.2@jI;0hl1c`YMT::o<J5(Fmm>ip@d2%`j>Ce5#N&Yf;)cR)k[-/EXhutQeE4s\?FJI`j\1@
%lcnRGa.':,?^d8Of08)-YPGs;MfsF2f9r$Jdn1"GLlSeqQ-4[<655om41_i#]K(9*`]`#HSPPS:cd(C<m+';B0:h?O%CP(WqUOc4
%T3?`LIc\_kc`7T-h9Rg!*NSGYGUk>u>WpRq5Q"+-5MPg7Qd9goa-h)<gpsopesQnmCqSEufeTMO"4+H^p1a-Bm`M<2:Jb,@jnmWs
%e'6L&>:3KjJ%0Gbp;*A)s5WP(4VHl5bfd?Y`V\-AeqH64h&YNs&)-O,n2TL#l\<`8fK2g@g9/3&]f]umoF"?sqEleSa/pEcop6XW
%H-N#4]@G`*osXK.?N"WBB0,)De-d'2q\O5"IViH&+`-iNNKp@=jm/sO@:iS#l2(A%)g6"ng.:ZJ2g/Q!HR7h8[nBf:4F6Qb/pUd)
%/FEE2a;&mOBS1Lq\\PJ4rNIN6_lF#iLNrC1g=kZ7B>;,^DjG&1-=XE=B/Yr,=C*e>eK*f&UD>Dakuk>4[i_M/SJeWo2\,fOHI_ST
%K,-(uXmrNU^'l3tESoZ'dLOH?7^DgUl^UYS:G14r3XZ!1UO_U^HChLY5a=A!UlE"B'.m<m1WGl=*4PH>9pb.=^@WQE3r2E0RMJDC
%>+<f*Bnpi]ljX;D)1Z^=mae^ZB&R$:"ol+qZY2:9ks+@n0ADo7MiITiNMWs?i7u!u5;]%gc7Ih"Edq\@DM;.Dc88GZe]cgH0:-8h
%hsS4om00Y"<m._rT_K"hZTY?(^N/#6S)</1C$<Km\PoIUp=996^O5q(b0/'&&DjKP3</1.qUOd!RXC7N'4N;,2Hu3XTC)*Oo^VR_
%?-sNr<5#=Rp?F*8FmF>MURdZ?f.UHqn*j^sj%[2bE@`-jij4h9h`=aRSK#.PqsO.Tb4uhq?`uEW^"H]gj5RPWA&#FJ<j_c+7o1YT
%:o`aC3]r$:=164d`_e2*r6dqk*"(2+H[\XtD1$b@!jOdd[m2ud/ZOTd+b"J8V.*\dhQk]ZiO=;f_*0[TlH>6SnMYa81Z)b59t:)6
%miN_7Pc#O[Pd1*u3m$dPakcZn\)TERn"4cTA%D\&]Q8)kSqS-rg%&r[7*QO_3OAMWrAFMZQs'@_j"[?ar-J+UH&.[=1NRL682H0b
%?>WNq]RK<])V;!eIuV)A.tApo"SOq,VX<?Ul6&8+Rs*;^CIHbkS:>&Gc,Sq3Da0TFaSYEhSNt\R?i5C+Dn;b#+^[BS_=F#qCDLOR
%kg]G`3c8ob%UM-)r1*rf#DY9QGLujSoA_*\laO/1mp7)=Zf4QG<9-eLA9sohVmAa^3D.UBP5#l,%OZ*+3]lD,jY]P:/4Vd9'/>em
%Lhm-a2X[RM&QsP1Nkf,D+gN!jG;,Qg)tE-)^D!:S)mORs=kJ_SQ_3,<?2RR$XM2;nCNFoL+crTRIQr%"rRp?4bLN`ik17Zs%t:&+
%fR<ShpA&:k.'9+hs(c+mH%*YJ5$0G0*n"29@#X#g>WB.6EJtru^H+h<6JED+7^2`3,'3J1/Et86lmXNaHPBb,*$_AYS)\_HG.jOI
%[,\B.7j%Ykrj6Qcq^;]Ann&O/jl'P%lVBSp9B35Mg^^XY#5cln@JsoHVk,j+34k0"hJ!oaY]#QLQ8*#rp=DKo06_^j*EqV;@fO!#
%nU0<U_S1Nt$TOJo)&k9oEL5:qja6SP<ZaI%o@6t29E)?pH:Ilp[kY&_Fs++O41k3#k5!fBLV+)?C_Y&gNY7=4r.6l<i5:G[#oBZD
%ah6bi$_QG=_g:Z=/st^F*$9IuK%4$dL6"HC_=F&Tq8f<IS/oO<s2^tMn0Hl,,ET1%Zt&mPj6:8JrlCiN$ujW?+#uF$p6QRbK(N4q
%!C23[BJp_rSSaCtY!"U+3q)uOc$.)*6a-*`(Z$R/H`,i-[;b[8`r"KVHZu@Y>r7Tp>^tP[$16H!\%]PZ*'<sPrjl5si(XFqX"ESl
%?Z5E2m#^RHT%Rm"CZ*jh`M['I_5rDtSVt#::HNF#1ZA4C\,1`omcsE;1[aQbEk7HN$aFr6e(]7uf$8]W>U#qOem*LnTn)YkQcHOa
%cKDIY-Pc\'<\u7mc1T,<htIFf/=^RI>-3\E=!#\+Mpf>D.6fYOG'N1sIh*bN?S'K769YAA*jZ&-MT^`D2%cJ\o'dElH3-;nmI'6r
%g\s*,B"fp8-qo-bo$cc=M*Ch1e@cZ-4SgR!(hiX+Ggr5VCBe^JdG=GAcd1*2RiST1PO7UV*l5>ZHbB_9Y%&,??^Q,6IKAkh?Y]$3
%B(WX/hD"g,kru3;h/?k#]]e.(?dEZ"2PI%Beme"_(qgGtjmMJOhM:L[gKdd$DQbC#IHsSiB;mg59@(HOY\^K0ALb2PGJ1Bp>;)Hn
%rd6]F@F-cH=\-lKo(M7Z&,)@SgkU*_D[ni;B9gg-bjC1t?1"on*fs0$h_R;'jak_poDn9Fe9\o07jGD2T>AMnh39X_/DBZloo/8O
%<u-h%ONq?=5@>%JNdM%(Bhu$r[Q<&eL@Cku;&8.d<M,U5O6eo/h<Nq^B=*]^jC_EA_4.d%a7D!,521?@q]AWBK$hp.4J%=sK^uM$
%na(YC\6idTo5"n^!*7Q+O5=NVO6?!cZ@)*3\,$-sVgBM9Ze='>6QN;^ER,tm^lW39O6;>T*$k^!=D+nHIfF8c=l-XU9BY#!Yh4>B
%\M`9B070lAo;%AuS%0S03:Z.VNAtY4T%:IG8K2tJGg](+@h9lTBH]Mdm8+1)T<uuSBZ*K3)g9ZLT#>k?HKOSjMnAd&G4/H*1Zg(E
%Jm$qml$Z%eGTLl<4^>3i8<:A#o:9N8]OT>:V!#cXSg0ZUr"4T=NO#*>GG(=@/bZ%s2m-0,i153!LYUJ)ipF9FB##Om82D-!T1qh.
%b1]:nTK,dg8VES:>Ig2H^=RX)pOARL%j*DY\s!d=5G-;u6qrmrAt+mR*'sOkg&0Ho435'&*Y_r5OU&jTSstG&\^ee$]]#4L[Qbh)
%gLg^nYnX>VmIV\OZnYIW)+iY`:$jfC]"$,W6UtnGV6reiLT]^8X%Vh%go9le<]aW/gU)EVQ(8"Y0$^rH3a[;HD6`,VN`RIa8Vge]
%=Nl[,9mq>upZF1NkUZB9f"BLpmaP!_HM_+OT$Y)09C(E5nm)0KM`7'sIbDAL>_H+$GDR@Jo5=@R52';+n$r8AWSqh5rECqFAE##+
%l(617V%&LSn=V#Rf$5kNS8SQ;mp5q@r%Pm3kM74=eurGO\_iG2.??aa#3MuJ,LA&`FP4rVD-iV-6%)P>HfJT$.<+$qrB$p#Y.T.J
%5-3W@Fm@GqZhJYNXMM:86g`'(Y?'r<fN54>b7B!@1=ql9<hf+o4bn4ZmM[M@n^:BB5>D,#%tFIs%Y'm-0CU];'u/c^fD<\V1H*O.
%NUkD.q2ql<0k^:7;LS#?U@f=egQ!/bZ*.?aY0UA9&*oi`AYSttB5"-'`_OmtQi![>(9=uI/*Dg\V\V>a1Z$?)SZ4bYk`X["an=e:
%Kt'e7A[D>9G@p8$p@Y9[kNQInnLmW&0ACd.bmtk*^1@muc04TXRn$9+eeccik2s\.7k+&)rNDpIH$_/!hpe4.E8_7(,+iRpLllD?
%WcF'>e6Fu!1emg-7qHEV:RWWFc)==\Kk!^'S78Uo&Xf*.R&9\/02;Bq'd6;<.Ac:*Hb[;]m,$Uto\n9.l,BWOSY,c1dcshB*e&J9
%I<0UFkJ>IDfjFdYmap']Du8#HVO(?PY?ei1_YVQin*bItZesh<qb/j;FL1_GZO09j>>b48qB+7QcW_dc?//cdUNh*a(\'HI[OqXO
%#=o:*=r0"N[eTCA7pu4_1CLtCh+'SDIATlsZoj"o9"]9@B:m/HcRq'2Cjn#Z]Ae5d-,/5=UY*>'na5W$O'C4:Y#ft:daj,mc->_'
%r1f8-(XJ!3B:D[=CgLA[pl<Cf]8Xn2,jJD^PHHD3PN5U8-;hrNDk:'[p;c8.b?oF2i]l`hi`RXFGG;*t;k<.",sWZ(Kf[VV94[MU
%Z)\O$\jV"lZ)\O$\jR>2a0&20kS!/G57Vh1/pk:_?%B39J7N]>@cSa=W>Go9JSY2&.Y`DAa%LoeMP75!B)Z6S6_ee1?iORM6W`m-
%++oG*Ft&!R%`Zjn!p.;9KDgM0f\!pGC0mIDT#0;Jf,j_mhpu,D$`9:!?],kah9>]d=/q6n0$&2,_*6WR""14`rq>49]$sNVXABBl
%T$?UY<uRL-5OG$1=jMBa=ZJ)jF-VT23cX=VMi$llCJqbM:%e%^Wj)EMX4p./W"o7%gk(Zr>uD':52S$SN^rk&>>8-G6P#V4bDhl>
%YF6l5\[Br=;5[DKFfX`WkKhXB>b@khAJU2BDd!<kk-K6;G5=]mJsTN:MSO^dmjEB1'cT:;f:/=2JUX[8ldmb:0D^Yci<!/e\N!s"
%nC@Z%O"re"#e8Ee#5Z.&RO^VJiChs(o#qHl:+jX5]X@]W\,:27q!FW;q/K"uFe8TX\taD(Z`U-LeQc#tIq<:e;9)G5Xe'20'HcuO
%-10RE<*+\GRDhr@4jR54412`K&O2hgT":Ngl%p(?QESg.e*llk!SG(!S"$=fi`jCIM6PM$N$hEhXL=_jBst(@QK\,=gj0Gg?CYrD
%1ZtAL;+0"PnWgI^,fcRCbK4ScnB8Msi-[3OC52D-^DHWi31""_#FoW_.0iOfKs?QE*O8%klt&uVZMpX-haYX<4'ZF96C1Ia^E"V2
%8*AFMgmSTkS+(gW]ra5EiT,:uet0P[7]bI%Ats,`:lXUfq!J!YN_NV^qt[o]DCOZ"%V"$<hML7E6fUi"3s(bgLu/]"A%)e'c?="L
%,0tW:N^3>i)Yo?&6-gD.!?K#K\bSTVU\0.kTk%$<dLW.4>^?7/P>IMh=%b`o6CO\6)b8i%Ke+6e'#f+BJ<A/3@m!"_1[5j9F5t^E
%&0bK2F&d/4iLY#tb[tj7a>:j7,)[K)8mX=G)-mX7I7A::0@E=:O:1[^4r03*ZkeRk#>?l8EjB>F0m9mY5^JQeMme((4P?U<]b=JM
%YB=-[1uH%8e2MUN:;1W;X6mW=@D%d^C0aJB1SBblf)(EG&P6T6j-7W#%Rp7fPFW>O2ndNcNk1<Y#1P\J'.h's5)J-[[c@oF].JO&
%k1YDNA+rl?>n=.A)3Aai\=6nC%loIV+`39dZtsgIZ02hKUV;O)8*(Tq=]6J\H[3uJ%#Dp6R&hfb/3Va%G$hiTC%K13\Rukn@Z&$p
%[M<^tX_iQtp*XjED0MN(H1Z*#@Vd.4Wk$M8,<&r"]9&RD[s,Pt/+gsHL4-c.I^(O*W:or.]oT6=g8),#VVhc?(DOEV^r`qL"[kGA
%s(pHCKpI4a9cI+OqTkLT4'G^P*X\Qb2;mt=V-VNXF/hC#F2nf,Vd":\YBSR*?$p<hF`"JT4OpI%qr-NVXl#"rRi83-IV]b:<NiI6
%EoTQgB^`(KU:k#p[2`J]3h1]X!b,1H1okC.`iVRuMd,_+K3E0Hk&e5$EV<Dfg#V!4Nk]Y'h[mTiK[61L]\F:7im-p;AN!so/An*X
%AE9HC9t?AOS`anTk5EWa$kF+7U7b[;p?@RF,POq2Ra/LBm4tbKLpr)`9!#.$&q-$I/",M.[@rX$oXq/QSK@aN/fa`C[</lM=#O.*
%mQ=UdqYoJJ?#01kC&'#kV`XUql]Z2;d*ljh;)u,'.K9%LQHIIgW4*;(ZFBi#PJXuGEHP%UH>^#AlKp*KWOcj+HbJ6Yoj@/N+$c/B
%^[L?4Ht7ls*orqhQLaF8T,70-YM*<K\+]1ZND"EUh"Ru3LK?;"[2'$sF7\SZp1cd@NJAobh#:)f^#Ju<c.6+Vn\"?Kql^?J`N12n
%\8CNGhR@;"^<7e9s/5=T:=t''3Bq`PI/0^\io]BmS#7d==aK6'?<LOFZ4PsS7'nRnij?epc#<WsGOQ^@*Sa"M'J<b24^W,THf#_4
%Pi:(HFFRs'f+21#?=2RbnEJ\em=4Tk:Ar@0li.^jJ,!qb9cKS!D$]]nJC,<SVuAQsX/F4toF4p)YEr:6pX_XCg]-pEg\1'MVpBAL
%aitb8YHCZnS(=WIbLPdRB4XiWCUm]!RU`l#2.l]2l<hO&.fT&#Ikcf1+8G^kr_qmgi;]BbA&RH5-i_3$Y/t%#b1Q_hRpu6Vo^eEg
%o_U*5nX_ij-9'a7Y&MiV8e'fTRK%Q-rb&<)r.A'ornY0PO.kl$E$-#[]l\1*qoeWup8;upmd7[Ahu<?.bKdY>O$C>8s-T-;HhH.n
%Ck)9QIVsJrrr2>`D]ehY?MhJ6D.iUZ^OO>^-Jqf3H*Ub'Du9L2?[M1@%t;R4n%ZTMQQPiO`M)F+%s:rn^ku1_5PZ3V]l`r%IbuGQ
%^O=i9[/K+SYO2(rgY_]Pg*/W+e`1RApP-7HhH/%K9J9]NrdDTK^3kG)q0tWrm2Y]mP9$QI'uB\hf5L&(qXAM);!4L#GUc<ECc9/F
%G'9Ld0!oWZKhlFfUVG^]oKPG35AoLeGID_)^[BY$m(0`?Z5kl@D1?p4AS:bgp=GiY&+4%CU@f9rl]O'@4.@QCB1r/"\PPaLY\"c2
%1ALs#JC"$*RN]g<)HF#dA4m"OehLp?VQG5'm0h^9U'qobTs1_7>K*Irc?'K.'?4(@B#)%5US`jl1<>3Z+4i5H^DHXQ8'BP,Z1-3_
%O/kUrHfI3F>7\ih*>>ME4-i`.DSUSU*Js``%VE!9jiaPDH_X\3S%MqVp(E_"Z3A'dT"3F[>mESs+.JsCe\Fhi:N8,YRQI-b6qDO-
%^;8FWqnBh)7<`'P$I^iGRl4G/F@r-(`(IJnLCr!_EmQZ3mr.[_GJ8MGC<I,I<a,Ah(#fITc54SJ+X^E^%JZ]u;H4Q1?P2Caj/4Bc
%!u4N`s'mX0C=Abs<RWrih+4\b]&XMq:G.WXULd&<nqEMO^0-\c*;?a\Eb%UKp`E?aU:f(_+dFh*EHbt*D'Cisgabb.bK#GV.[u^(
%jH%`EVQ3t?EQ;b0h_OJcAMT8^Q8/sZfd;Lj,LIICeecS-$DjigXjOb,e;NHY/LNAL.=9DiNDQj]aG[^4<Rr<#:U>SCo2H"N21l3[
%EDahc1/rs\,crbI\[cCN+A*dL,IoT"8srg"4U/%4embIB_9LCg%XRpa/4ElUA6FbATkYq7EM^Q*3pKs*O^K\BClCrgN;=`.jm./O
%@\)*7W9e*3_'#)1HDqH\).UT`X/7F6-X,cTj8H,/&k<U!<P\1eUNp(DdO-i,dE:n!2f;Y=F0*O*_`06ArT$*p[6EYi,bMW8;X,+\
%%`i<ppb!N!&6SFH=(oaMe>FYJFCg#I3S03bBAd;Zoo-g3a0RI>g<!BBBDEmBLmMWJ81p-rCasG:n4jqa*'2bF(JCi$\7d0Y*!am5
%3@J^[O!<I<b$Rn=Q#gt&jQ">u`@Xl*U!-WiMUA*SdE.+Y-+4\`^+<f-0N8sGX5mN)2J\\>*9aE<)0%F$,3fdkht5PhTa^b>a`:5/
%<I.>Dp0TGSo\fA)g*ieE<_cW"1"d&fEV]1j40`X;<nPY6*m30)St2@"o!lXajS2d[#i9l75mC4&-Wt`sX!k*3!>n2_AZ-e;&@!Q0
%!'?4+Rm;EF7paauV^pCFX<E-KEFP-uINuqc,dRJ<0EuV'IM&*k&-josJQ`5^&/mk;:&,@uA.<f_MVonVoZ_&#5(K/O:hu/`oT_O:
%basQ::i`p48=1j?8hs*W.\&@.!$rD5#F:IJ#ud2dHC-Z$T:1Ib.28m(1uT^-@`011I-#cO5&S8:3oomGU96p#^tF76@MQ-\;$6Gc
%=\*8L`5`1L#*LV$QbkT3?%L28$b1o]1gu+K>Xd3lk;!`k>#'21!R.\X1<9"d4_X`-n;PGPUYLR,-<i&Q8Jo/1I]m*X1`C<%S`R@@
%@E7rTq(_bRnTE2/j;86%O@'KV+iIipUEKr)"[QVPKel[N8D,\*=h%(!7-UIKbY96;X;+F!,\*<4iOi0Z'q0+&p6PU](RDp1KBIs1
%JYgFaC4_u^Z+H+=67V1@'r]C`h36S"\$_r4:7$>ajq$/+AZG\Jrbf@XJ"$+TE\amd#U0snGOS3XGCKd'1U9V?RLl>=hdfo$U<!=3
%Mrc?JeKOqtdR(Ao6K6*7'lGWO<1%%A@^Ca-.Yqo46/ap]dmVWHY:GQM=p1hk)an.s,mFqd3&b0XV)9C>&;6T?\b&43U5B/:'BL^9
%kUOYdnBXp23_(>kq1o4B`S!d+3<+sGNDQb?3>!t_j;U'%e5R<5$k(0aE&"*I$f+hDnW:?dR'^\;*Yb*S3M%Wh,aBj(7!UD<J0>4]
%fV9!\WV\)>[)*'JP%$ok!ji:bKIe)+o.dJT@K.D@&\a35W,fU?*=.oLQ_PU^kcA`qAABJm,Wti9=D7^AD@B_5i#QgA@NbY\<45gK
%is`kJOg9#c;C+])!%!(8&]UZ;<R?ed:61SY".:"Ec@?c^-)_hS$K@3ViLs'o7C9XVjd2B3U6#o[7JO,"]a!e?#j8B8H&/Q0W[`=h
%7-4eUj_nIe\5VN5cp"+`iYiFX:RZq(!@:N:9AuqIUI'1;7<T/bM#&;C/V1Lp2a1Or/r8LUAcq`-`Cpb2b1]mJ7H6+eE+gARa:Cl_
%++02%j<6r[UWqdf\/N,A]H`$07IZ,)N?;^bG`f55#]deaZGNWgSITD$Lr99@_^^8bIpqS[lPH*kC?<m<$l#8<IgM;r:dthQiA>Mm
%$&3Sjo\BiO&pH\N&S"Md(K=#L,Xd>ciE,PC"jt)1"t`dl@E3Z46M/o9LfKre%j'#uQ\/7>c:%*]B#O`S;Wq=r<9TkKFeOuL`b[:r
%@4u(QQiV#i?WZroU^ehI`E(o%"]T<B351$>\*lkinXL*IWc/f2DJ/cV7D.j03130V>WIQH0JT(Ef^dsm6G&Ak>nW/s;T05k#"(n>
%-/l#R*H7QsbToQ]$&L$a1agElD>m-k];\RF%Z6IB$gp?[BZORP?<1*PLcR7s/(@g$m1$q`j[@4T'3'8D(Z[BKKIc0:("VVnj!T-X
%^+1Sf;JU:!GD'Y'0+7UF67Cf5X&Hj(8+7tt>%%C`lh/mQ3@$6".B%Kl*!?!lILss35=q]WIS00e4`fJACZ)i2\N;g+:rrI%9[9\A
%`oW)Rjsc#LAL^q5eqfo:@;fO$Z2mePSB8?u[=#(nJ[-jc$`W4K0+WX@8fV0&IXE<lGGcN7$!ZK(,*%'/+`Jo!EE(FG%0jgb3D`W>
%@=+rUq'YX/rY95I=rm<Wiaj>ag=i8;63JR%ML7.)mbujhJc%<cDpI4OM!2^@McRdjjbq.);.u?]-_DOh7(JPK$XqE1r2NeNTrR7r
%q1JnZCMp/kh&6pr&7H3gDJfp+?<RFH,O8CmM5()`&7B4'\8[,^j'/Mr&.MC#,%Mg'"fFVmLSBt/9JlE$K6lQ@of;?2k>Q_ocVY#W
%O@(9<e7mu;d2;1TOug,d#DGTEAJ0'Cp&l'5;&DatMHOkU\6I0qlJeNXKg8:9^6]WZ3F+pnLP7$]:Xfa1%F>AC'GqhV,\N91r!T<u
%ad,3o_^Z)&C'Q[?2(i=a1(2La*#<D4]jO<AD$6Sc[Tp``7C0B3G(@c:pikna;ut*<*T?q#-:%qQ+t`SbYk5^:_iP>L_4>H<,XQ+R
%e.&)eJ*e-hc>?ua);tRi_T8h?pkn9tcQPtg-3tdI)NpYo+D.m>X[*O-^4ZW'4fgeE^Jo)e&'>(_)e_H,kRD--a8>E5]Vb(AeX*Zk
%Y7DPU`rB[h:G\<k'8"oK1ksc6e8FB_`U,ZpRb_:G&cBM*bC@7XZTgEa/6#V/S35(3giQo87n&Gie;\D])NJZ(KG3]cn9=FMpaJV%
%NL^k$ZIO&&[NF*UPi'Z2gS7RS7Eaq?*4U!A[G64L4bS1:'5Ut,Z&JO!rTjF,W!=Ns\8d<p'LD&c;9nsONd/JtJdZ3Bg9E>Ds7s#X
%JK,;>6Z)cS3RfceM[iT'jE!]:[cNTA$Mjca`K3YO%b>V?*5n-j\L#e[6QMnp@l-i?p;:Vgds>Y2'Qm)$%sH0(+#IAn^DSd)a,)#/
%eA;12-`9.*A;/KjL2=Ij;<MVY*O^LE'>EhAKW/_LAX=eX)mN"(Vt+X:S-$@--&Oa<3^cicBIu="O)%=Sp3Skh;9&h*dEZ=a`sl/>
%Dalni@A4%$/6i'Cd#K#6!H)@-']jfgSa6ge?(`QmToiRTX40,;&`X:#Zo[8Jq%LbSGrj<k1opbLN@'2G_oF/0UkYBJ4C0bZ-PQs]
%`;C,u'Ic:SHh?T>BoAD[#:k0ls+UN:LHBekiQ">Wq+E)dK`WTsaKI6!V_iKp"$0nJa&5;!d3;C?f2[i;eO&CmGI*Z0"b-#b0HtEC
%2kcC7PdIs:L(TFhgYla27TKdEMeR&/4J@f>XprBfr^V0jc7CVaLSK@7>d4O-%[Y(5ijl%E2Ht(!nR>91[*^%e&T1YdK2IW$Dhe9m
%"$(XL680Ze_KU\%#DZpQK73qaYWKQl=gUL*Qp;&p4fqRu8eZ918pqTHYMn4PV6bKOR.9fo(b^i/5"0VR)7e,SPB5je/hP`jj5Kc4
%8!;M$<MaLLN\7p%iCU=o\JUYg*$@5/MNa6=&07XFNc6FpM7D(rA_JnAd'[8O5tIQY.-J#qeY"S2\#-#R1$W#R%Kg?)c:WH`\1KK#
%b%<#uNM=&qf]YB[F]^kXT-NSNK5F&#7D^/8X(a(?//cIC@;l4tb1SQc^%,"%SN;A],9gRD]d0E;\UT`]G.7YW4FDr]Q#otOH"g/0
%VJJna)W*%:'KS76L)]UC8=.0dHbETH]iM64(aou#ja@A7f3h&hT?P2YMWNlG8,:H8WcZb]I)A+6&r.rZm?0;!Gr'jG^-Y@fe5MbY
%I,R&2Lh?cJdQnfUn-D;j)G$An;4q,)*]/,0E\TVl1p1^GHtI]JZ10GgWY9KZRS;<*h3\R5q'Np(8A..%>A#[W^'1Q0d#DIgVq<uK
%,\0%RZ&#T@hB5lD-AK6I-i>ki7&gYL_iSHFM]PB[*]P2)$YBf-<MEh5P*%SKgaIlr._+mQ>HujI=it#V%NS%IGQ`j`&uGa1o*sgY
%0pP-XAZ,W!SXd^"jJA[sQ42TBhWdpK$Gogni&or\.Z"/*pe7oq!\q/^fQ%*C$"8$q'qCYAr=h:i4oGL`M2!.+6?EmN7Kk=Rel8E1
%)V4'G<f%8qTL%E:'M>-Phic($ei@FR_=oIg&NNs?e,e284JQY!qXUB`14gmY"K3M4US.pV@fQe;#95ZMX=5D=I1R$l&BX/9fP<(l
%-dT/al!CM?:eNE;XD$^T.@'&$jA0X\,K>b`W^V&.F;<F=:C&+'KhAqM4#V&u7BdL@;o#J7:,,lR5M3bI45^h6;.#Q51^PP$*cS9R
%%QT,.:@#]ZXfcleH'RZha/DNU@lRY;V33r5*+/$$Zj$hD_^P!i"$Rda;nY#46P!'Ckeg3k,VHH99(l-qmGqG-==/J1\0_7V\Y5<e
%V%>+a9k&o1,"+ga2TolTOh7&MpE3QDi?s:bFo1u/97TCj67"rb'gP/)GD9LPK%_Th6M6*QK+?CNUU'`j8"E3n@_.m5g_BQbiNP[0
%+adH'D[;ZD5h&%u`tT7k/bf%!6kQTgBT*71fAHn@5f>=gdD7$Jh2'f7$;6D]S2ZA"UjrF_'(IC()Jq_>XoRsU;2!l*/bDTT+;o^&
%'eU$D>A4F2YtPQ($qtbC&`G)%SrgCO`\EPo.Lj'fBs^m>!G!'7-sjk.m^5;Zac*?Z7,_oJJUi"lKK\:m)R.lObjpG@2@aOA`t!!b
%j0Lg9d2N:D*b9XbM(iE_VkN&FJ$ST)bH2A!IpA]_`BT,('6"2n#>%kP+.uVo('*T&@G$<d0G.D:h]>-'01?/0J]W+^0/]qfE'b#A
%ng,T@$/e)W6or;Q'Li=3$U[m+8<=CM.I+URm6lOl.&Qp*7.o9\XN31p+cfhrlNA<&fctgW^&tm""Ji.:[aP>EqjUFtGhAC*<@VJQ
%DknnOl8T8N(i(=rs-r5p(!'/nYQkD3,Rs!1"G57Q&kZs@)1cl2=9Kq?'@:S=+;?#,Q<?(kVtUg7/;f$'5P,t\kAg[gb5iM^A3I#[
%<NZlG/uV@`SK9g25^&"ndPnsh/8FcMkFo=HmT$o?WVW'aiL[>-UUL#LV>bWp7I]LX5#S>"?nHk`O*&;k]?.$/WYbXNOcpLamYO&!
%Pu6l9CJN1U3$hSG`@HW'".N$+FFsAm#Lt#,`??EJ_F)71aT*/q/QE)Z*&W?7p^WBk.cI]F42;'2K=KY]VOds;)>=??diD@.8mjhO
%Xg>g)g\MpC";tW3:TS2ll8ok#jGXIWC%2q#+@Z@p!eLp\MuES[Wf1HLbZV2Z9KA"'s5cR^kZ#0n.aS2TMY-r/W!Z:8b)JjoG])UX
%M?RZUXm$2?Y<k^<(dXFB+]B+Ne1lL8LuJP?<TO0T?-[Ct0fpfbI1H=P^80bM&;$90$k><7Gij_.Z<:-0`C]W$=EFtc0`amR&Tt$#
%@/t?mnAjWp20fNb0'bGu]e4"'dX]=9AlL'G3?/*1:mH+eHN$"Ee;.9$K^ubqJE"=9lcVRYL)N`'/Npt0obG=M4h^1sTUN3&S("5G
%q(k7U/"ZY\"@'PF^D`,H>FJS8lsJ7+7E,E'0>]t"S]EO1.H%"Z&/fFZ)l0es!-gCj?pXuYkp90F%>T>[:a1.KEg?cK5d?Yp0-$JN
%Ikb.>2BJFTE\Hq,%6-8?8X?W(Kq(2fh1/$4f9AOrA.U-&VKnMsDh.JsJG91N>Qp\kaMBT5gjo'tdhE=8n@e<p3r-L%X@iS.%lcPT
%c\.p(hBUD*d"JM-H9Fd>Sg`nj0(j?BV36*I'pEk_N*$)%#J>2]SLPgUTra.N.$<[2cZP%>NU_GUIUE;3T3:kU^6rP'ehj.#gekrj
%MpKI5E/O%<@olrd8]/3;;`>t"16flbW#^QF6P4m!8VX7(*\U/dj#,(2j3gA-Bd*bWfi)I]Gp3M+#E9=2WWI:>Jls2C+[i+d&9;1o
%R?(4!lmoON'/HG=86>BSF@/;1%<D\L_4%52Wb4MaU<Yt'Wa>j6ni?5cqK>?CJ;ZkFe"%AHdk!5l;@rY9/-Q?IhU%hX(bT>=b_\Fo
%7DVEVj#)B1o.UWG^*Co^&FgcT?TH+gGTG;K,V*iT8L%4YUlLZc;m.-K7f]?Q@UM%OSiK9Wn3lcea3^=o`g\FqME-eY5XA)4.d2tm
%TKr&tqZh\qedP6Jq7t)Rs!(>pgiS[>RU1MT\jY^>]TVct1D>c2(D!PhB5u_kS('88GXp=A18R"-#Uq,(`j$cR4@)NK"IpMPM):HU
%'(D\BUeXa,E^T%a"qJC3:ke&g\X8S_M'ZP52Y0])Rhd_'$j]sZn=k6G$^g<)00tbS\s\X5B]6;6]s;`HoGQJ\WuT55Y2Y-Fg!S7N
%%S;-QZn!&@82fjO%Y7#mY)j&X1p.BVV27Sm.idEsT<^l-9nB6%F<&1\'-sYL.SUZ+I[T5SkXC*KKYStQ]1fsCh%+btg;jsn5l'Le
%(1SkI6MsOPNURBF`>Hd%QshH8/_+/oO>Kc9M]rWfo$09&$q_Zl"gnTl.@NS/D5DX8=94s94-G3="U-B#4o4#]d%Z1DU^7f:+hbJ8
%gmh7G.f:\uWutTjE<A[n[7M29Wb=9,BqidEKglS/i63tL(HGjZ0f30Ja?gTd$a`@k4-+SS4h:#O.7Vdb+?gu\112h&$YgE@b:Ic:
%<!a!7@F9D4NU[pQ@pZc$3aq,@oL%UT[Y)soa!<W2nJq.):`08MZ9<rt77>ftWcek2]Q#qI$2&h=8CS8K5<q310ilhTXcXaWgQs+_
%$-pS:L7FTb;p+Sj#`.BC_,H+.!830!!C?.3HHAQ=<<5`)[b=DKlUSbrKe&=s#XOb[re!MK^2<dlXZ+b_0nl,Q)[NEN^)+*AMaCB'
%#(c*-QRI(/Km)sDh^H?n#"Zp>E-4qnJK-8*h1moNXNOM;D.UL_;0,6#RT*$,P7BpWE13Dj=HfZT9L#j?YF%:"\fQ:BNq)^CW)k%N
%Rbk#ZT.;M3U65nRP^!N-#ti@'O?JZ(dK1O#'`<OAb5JKc)EUo3!\+]a':iD%E=>t7-j+<%+<H[$IR<.dTfF<'6=iM,9p@OQ"hFgZ
%kiD?n>9RQP(dcI*G_YWJ&0>lAiEUmA/=iY>imX+lMM4Ab3FN.]:9gf!\$81uWRstmm"3*?jKRpI6(nfdJ=)kh%)EEm,N7,HS8aB_
%#*hDIU:9tj;+1P<'G8J[%:N,S0m/^jTuM[f:mB*n-n[@H3&/L71Mjn-1bMZ-`8n4ML+L1$rhOR\!Sg%%`gE:!Mh$*S21bl*K"urO
%m2a;?J_Um].#okt>.,>).oWFhM\&1S$ad/V7dR>*69j/UFTtO=986=+]bV1lM$K$Pd&`[6;tkm<I!j.<=V/mL8PTsVHRtO+Ou]7W
%5bNs8#[pf5-5-fl@PIhTn5N4D7K8M;6aC+!B;[4/"fNZGXdQU(,1n\A<SkQ\2^M)U(pAW$kYbh)3R9!p+0)AmeH\r(7Sogp;aUP5
%9E!-5-NH[E]/nSq!q`:9T-9OBc@HT?q&#'0*oo`r0M[LXK4h$N*YC$T5MD+F-ifDFja-iF'Z(Om1!q:4qMNr_74c#9,+qVk-mDcY
%+&GOnJ/Tb)bI&6YrgH>e`AC[Vn1EsF_8/nT/>t!A$jaSMA3"1pL8`4V=`Ob@0F\MV&Jc*,C/J%X^ejMeEHn\/=pG7)'I]e>`Y2RA
%=T&UcA9:XfaRu:235ed&-.&Gb!gobtZQ?\\e7<+<l%#W0B(QCWXrG9n=jgpjgumRYW\AO\h1Q(K.khM6@)AF5B!OrEJKDU/'dtL'
%23623#iN%f"I2=L=O)r:%$hlsP=p#./`C[W\UKA=J6n0DN5Dt\:#X241e^CeIE@:@!MU#8"R#BYQ.Es]'sM9AJjC?a0]+@1IVdNc
%dV4E/i9RZtd*;2<I00h[+Jad*j_=?=of"*C'R1HB>YnJj>!ZNjH_T4]BA$!SW"o[9otQKVBIq%=can0T3SAr"I_l>"5uC%*H^Xhb
%/89nb9^aop=H?:8,(!'>l<3`tE9<7`5)s#C%Rhs\;.otA^"95RQkbqh$OU&s85%#<YN7&)hM;tUUrn;6!;IITYYo]O?1H9)%K+o@
%oROp[AcsF&ZlP<7g+/dFZ'!fi"NI5?APa1^r2;NO3g`roW!^qIoNrr@`'e3[0Ed95A?)a&<LU]0B6R3M,`.*X-bf1`%802b!U+n>
%;1>LeQeg:2eVYM@)_d)>+WJ3u<?AFlF>O]mX'E@t+r_@Op4W33WGm6':lPrG@S&gC&1&);$4YD5!`#W5P"lEo<:m>=Gh4W\H!Dh)
%*pR)!Damb;79mmS:b?,R3Wr%R*]Z*"Q9Ati6GD!"R@LQdq8gGLO>E2n*/N;M]l)>Ua_hV3Dq,'s/]qX84,.4eK#TN%)*+(49V)uq
%._6`iWKiU":@TQ%(had7%YBLj=E;NG'$24*ILi4s;S"kf7mgu=31W<KqU.]Q;eo6Y:,U:pY$Q?M263p!V8"$*V.'`&YLg_o?X5]f
%jOGNo1j#$HilM;nqN",$:J=IW1(hLT&2uCBMe7!oD?XSK<[dhk6XHP:-C.2gKbIMt]*2RL6S*CMf,n7Sn.#Hf;8EJc6R[;K+6OY4
%(5<fl+.6tFg3bD;rlEJ=K4Y_S@B>2u=RZp*9"\022od)-OQ3Gq0V6*X-3S9"XFZ6kCeoP's([$FMD>I<N^6N+..$*bTr=Zkm%u1d
%A?_1OoKSG3@'>gQj/BaqA:h[+!L"Rh`DS`@$^@VpVF`O<!nTlJW,u+>T7BGdTJS6jh[X'K=@*bnDf'rn8bE@BSTC5uYBRi\#8"'H
%RTIXe`=ad5\D.NbdH'S>*(m?BHE@\#P(Q&uB@U(8`sJm0TruB6B(Q4ja&kNM-jq9erP.!>i^=;H#+';:<dnT0U&R6<8uOQV:E'jC
%0kdaB$mn@oJ/AZK[>#%meV`2$&3,gf$"6+^f]IFNcqVt(HBgi2O%+0*/!P9TiEW>a/Gp+m_Futkl1f@YBNU.Fc.eaq*4#_fq2tmJ
%,Or9AkTXZYN0ME(>Kso>nnW&9TQbh!)&8iu`fM5o4_,gY3s%<ZN)GLfAWl].@Z7sb&fL$-#lQ^0;41hk-^=9P!Nc'ba'dr&*f+=1
%-j;J&OCMu)F$ld*fs$,AVFf3fJY*lYg^(6@X^Y+7)*g(?>S:.m&NI<u7O5lfR+.1sG\'\bM[s:Y"=B8[2j[A+)C%fs5J/]S72M:U
%\l8fV^kZe0.U?7Q7dF47Dam2ek;Hg!G:81e7iosjR#F#TEPrFk.RWcps$Oo,&+k&+3]7F4U8SG$!`k#Ni&=\>OklR?p(hUA(*]N(
%Jr&t!"CR*!L"`C="&p>N'$UWrKJ?Y++siO5.a_=Oje:)=J7q:5EJQ9QS>4:,F.`gIi'[tno9S<#KW>*\Jk*K_;1#tZ<*]PdgP8+6
%"^IQOOp41H<".m_T^MRZ]"(7kI/e4W@]LEc\,2C:"'6X<O,qYJ^S;pZ#3e7_1TbMs[*#sGf-HfU%`*=DqDr:TKhT)_lGE__'YP9m
%j=U[J&"r]T60g/?aJ7._O=1\C.+^<7E@fS!qFX%ZU4gr%]-ZBi]F-$1BOAZ+e[jYrFD0JQHF6f)>0EiqWY<IsdgG\;Y=1gU7L<:L
%@+&Qb3XpUZ4As[W<8FLhAGF$X^'5X;R)?WI*fW*)o['!4@8d'>-Z<)mX-uL5$4%.!eRMdV!`2&_5-Y.ZX$sLNgrfk7ZEfE#J&92\
%R*:Gd.13j"d6rlJYs;(b[NdNE<_R_1ZN?C1;+<!MD-Fk!TF8\UUM!.g5VkNL-DEL#i/nKkS+*B'N]o>I1n]H$$Ai=?A&qDWbY/b(
%qEd_\l<ijq-KQQS4s=$Y3r?rFk0W9D%[NU%JPUp]g*PnpEXcj]8"3dND$^KBnM.&a#(-L5O"&J0UUr9;?CqpKC7&`Inp+l")2>N)
%*cjP624[dLHr;JT#o4feUhlQ4Qop(CB$AG/@LNmQ@+'<3'Y?(JGp?>0BG<^R;)g-GNa57FA[NjTd[2S_`FG;[P`7q`6;!&g>7h:p
%,LZc_/7iRIGtrmlp+Q/!UXAVJ:Ti2"7`S)pTc-g-j<t9^jR^Bcr'q!Y-^KMsW-8BETV.tulJ2<Z4-ZIZXB0*DAmtg=LdksSc<2oL
%JpCB$1(Cb..LRrm1BM?Nb+9du]r!bE#6XcVM&esW+>I"-Y($TJ1Nc[NC_@VYZ"-b2cSu:7$(I)ZK(2$>qIclbg)Se@_5#pDlCJUd
%c!l?d72V-sO[tbNli#'VM[6)oI`,ROQd?`83*dgD;V&?c.)Nd#Ohn[07*;gGXY$8;XKtF>@KSf)U6I(e_1Ws)ZXM*`oE'Y[khsi)
%9i0kP^2tt"Nodm8V+&TsUQlL,fONCqX^koip6eaY6>pF.>nN!OFWYTHC:"mmhalU6NYA;6et4d09!-UZ*,KfO@A^JAni!^P?jd7+
%0i)u.Edom^)BTKDG%:lQr&s]YL<d)_VQ,7<TRX?+j=iDj-k$)!YGs"o9N+^`ZP+LuI^_;llqW9Y`AiDOZj%^a@ms*/::l9)m`!DS
%#206UT.'kD=fZX6o)pWaWFj2`&h^2qTg:"J;DR;6F-!EO_br2u7D<7]5,V2kX'IO&KkGJc^a]J;M0!N?CQT*/mVbQnKGb6]lb28^
%Ul>f^2DEY==n^2VcI"kg'\+@?Wlg#b[;1&hgOD!Sc-V.f&dII[$]#W[^W8m(3oVuu(u:r]Yh=Y+7+JB#C`*??/n,*'@'$ON]G*Pr
%g^lfKf[)^RSA@i(F;(=#8>(b:V;;TCU=aSl`!^VTR+b&NWaNEcjVShijbPf4[O?r9Z!D)48q/pC9#V@>I1J=]/NFedQu$6fD`g^X
%..$F,s-Lj,+P$up3!8@UiSa[W;6S6&!4muKh*Y%m`&YeF=I+7@KZ=j_Ee$TVl$A'Fj@`.>`2\K,K4#p=otmRTZnm<Y;?ad'@&W^(
%pot9#YsE<h]dPF0TI(Yo_Q5d#h^6Ga`T1:co6WieMu&=Y<G?qgT@47O"*h1`R?l_&rcXN+(28^?D\Q0Pi;Y`6<]No%,nb*j*thQQ
%cQt,a$UA7R,3Dd+o`LrKF$b-gCUCZ54%"d\R,"(Z\q%^H*C>tL%-F5_*k_TUkZT.p]gs_Fq*bZYJEK"*9ooMc:hF#%%9a\f(gLp$
%O*Wbip]V'p#/<N..AXf6>a(6CQ69[:<Wr&]h6^%oL:pN9&2#KAq<hJTDb!mh_@;460n]+BL)VJ(3'f4\s"9b_'g:5f,1a%LThHB\
%DLc-E/[8.S'I,/_-R6j_nFTu</231]k0XVB-&j)tJ1\rphIT^Q>]GZS$EKF*oL>1J$m`ci9r:<ZBY[H'/h/0Y,-'7HEAF@Yq/@Cb
%?Sm(A+(PejP._gWVTRWLFoHQk,b/R")+Ec\hlH_/+]sgIH4i@gN6EjM:S]?p>d;A]#l-0;TE+@(^_V(I(tT3@9H4sBTgZ%!q?aUS
%\eWZ)ZD`<@N&WDHlP=&;"-;P7/S\`kH\:1,%!mi_S?RP9<n*'5bSM^2W3Id=6(R^coOQVs$n+UOW!n%&40=)YXXL<^cl#`QJKhll
%R-<)8dbg"Z7Y"rpeNSYC7](&s%[]k&8A3BDpt[Yq$E(oQWDihh92[2&KPV#pjc53D.2Y;kOXATF,SZe,$d5>5L/fu2q`7"=M#8a1
%^D0BZ&h1XNEP[rc&8S,icCTh_CO\,57RsjlqW$+r!f@S)?W#<`)e7>B(0UeIdSsCu&cd:6g&gZW5'$b-&JPE"(3^$Y,q^e1iZ7uu
%rQWCj.&S5>df.BGlrNlT\C-/XZ:@Me>.jdJN23,2#rr,j4#Ul&AYB_`!%AM$;b#0&!23fT&f<&KViC1[2Y:_C0Z>-d[>M8A7ZS]\
%?*']pAOsdF<G9"FNM)s;<e7*-Cta\_!6E2n><9nD['9YG(pVr/C/&)74].Nl.RL1H7MP5$'+?ji<3dTZcN8SP,+8cN5I0eN?YMJ/
%SRW0:M:.I)K)]+%j?,dg*^6ch>nJLB$Klta\Qil7h]QSUBV`mh`o%64<`&J1eBS3H=%/0A+171f7n@_%C*K!B7YEfba:hQoM_%fB
%@o3J`J5E<F9UT60>ctPeM,lm.6@g[CecMZiRB;(*IhT3WE#IaD^<AakHPcIH;:#T-GqT>pgXC-lG8&\'j.bKG)VV(gZ3XD?*+&Vo
%r`:%j^!7gg701%]!k9!W+<n.M'LRSkQRHO'6DIT?K;bSKU5]JAnOV/@X`u,g7P+bu5afd;$<)q+okAPhJ<Nq5,]"?p\,et&O=D4o
%1]s*iq3W)EJno7`cSI8m!lJ0Zlf!D2msrh+aDR$b78Y3n-KG0\(7*l4;C\-XB8[7\6Qo%p`0&*+V<*\f))-kOBeu%"&Q[ED4A%G/
%Eh5OsJ4=/\;o?;B&Q]]KQ'hEK-1G3gddR\qRrk#o--gp2NHTKE'GJT#AoR+@h_.[@&6WO%AWML5\`fuCl38Ak"VBXC1)i^O:l(L(
%5N.:g%OE:W(1k00!5'M5B5n:j^j#G%3%`+,83Y]>r&:?HUWP0'CF*S5QWdHoDm_!MN%(NO'Nc;d!k!d-$J@'GiI5XE<Y'2iZ6C(2
%mC3^(\,o3:1aQO,3s8V%K!F7a<kB#%Cs4nhg)hs/1D!]!)9)5g3MH]rc*8i6MP4g0A./DTE8nBb\V5E?=_Vjc2TnELPY]4f6[9LA
%A]FJOClcPC%SDk1I3(JB_B-Mod`7V.BXC%3K8O4$+L$hUK1^q-Yp:2+r]mK>'[]!>*ZDG=1!8S8)gSeU+]SZF[.5r?/+?c[:EC'^
%D.)dC#e=K#2Lo[)GS*c4hI&RqE[s0:-\*0_0c5Vh76rLn=6]9m6-T]Oa"Z4NQ0B);jP'dTRuS[!!W=e^7mi5fn>s6"X-q]BDa-l+
%UAq@c\Zun7j9M=^4d.kteZ?qkBWLS1TE7Y6$8J=</R,ou\k>,R'qeRa>0`oU:*<.]edG$DB1;b3WiAP<4NaUs;ZV7tq;Zh?l@;bu
%`TQ$][Gfg$2F0K%.)C:`E]e(5'U2=jP4m8R,DY=JCKhL$AD$QK:BTrYP^f)*=lmO.-(78*%I.;)P6YBrm>FU+C@*32$2d.S&o45:
%It4tuaAj;5EnHLcYYcODd_5fYCUp0J>=kTZ,p)-@'iGZLR;[b>2kWI<`]Pu8L_<0j/rk/_OsP-YFOgrq'cJ'u`)'U8_@f2//L"#N
%aFq5&Qqp3iM@@WVlTT<enll.0"rIiU@aO[9^+/DaU[9:uL%ZeuN>c2%5shCMb$,>^llC[QR2Cf"'L3]_RnI[QErgF'&3n=8&Zt;.
%)l^B5<pT$+;6--\oiXjS:,j(OCo"Y^`8q?BgM31iKmdqQ4gmm5Nk*UrRRsg"1PD4=>q;).-!prd74eq+kpPFYm*f"O!b7EHG#?$k
%6'_Jo3e6.IaT:U621H&+8%EHQ&5+Sic^nLf"\N;i;4hc"ftEJH5k&L/n;-WGoFE`3o$D$.aMpmR1/KEG,?RD)lRYHVUWrkFVH>\c
%*Q<g;Ang0I[iL+D)SA*iofcNeaaFFG/&7nn$,dQ@3!&-/0u=nYE(l&2/_nJ6.Q"+jJcUmN"Vk59X9(#*7RfsZQA`]<<2->TSZ"W%
%dT_7AE!I9rdDuT4TLsiF#mYEPp-V(O"e40bmZlgN$!gt1?E9:JN)pS[YcoX_!Gikag1XP&h?pp(XgC;U-/"8?)@cUH,ne$dhB"*J
%kW16H$Oa79\-aNF&Ysds>eKE'Kc85@7I<rZ?+msg.a9FQYfGGs%@Di!T,NiqRBJ]<pI6;BAE:Ui#"0EE5bgqbO\ohl,d*TF,(=;]
%)0@aO5-ipgJSO36Gmc!S-;kP^Ul`Lq_MklL;rAT55T/Jg03RogA*aS6M44^EQSBoN5mq0>=\?CK_:E-h2W2uSeYYUr5c@ONnBemq
%Eh'f!%Zd<fq35gl3IV,tmnpbd`mA&?!mliV".r\_+36[!Y:Q:ICbFUN.-]dPCMdpKYn&f)PLgtb.]S^UXfWBLN_hZ(MD.&$%/k[C
%'S^cs/7W7KasiIZKt5N`G79WL7G"QH/VXd0oYWrqCbe;[L\WD58#m4^q]8'be[l%0EYN]`M]C++&<*f,&6BT+)odG+<\A-S;"%+=
%&q]9'q@<!17uc5sOq0J`]uqQY>@T^0()HJTldFE86'nQHG"gI,=iFX3ls&3R*EJs;b23EZ>2%4paoi^hRs+lN9^Is.TqCe^\JlO'
%U%V+)hiJ;O;<oaoYDiUbfMSPZ1[g]>].)5BWp2#n[cjrC(U6muI],l"dLo71S(9qF@pj'Y<=n`S2-R6gYDt.`+iiC$pHWSI7ahog
%%%n.F0egMhZkC%',tn$TQNaH04VABYjV9UD9BI+S36Ff88<gTh!_,&OWY:79Q-+BV7.uua#0O)C>.L7S^_IL\=;jfoQ(fFOd'Kab
%%$Z9](JLs(-(3D2Lq<p][G\]<NR.lsB\&d%'X)%_'-V-c7V7]EnuW,eP3JcNbCF-=LL@[7r:6m#\7B4kUo1G2+I=*@9Tms261:ld
%j`heGl!3MX6DJ]<18#p@i\e1Q6joJu[56L5*T231$A\3X:*5?D1meUIEi<sh.F+@Xb=-a.AnQ2X$8*Z1#CRsU^Z8P)Qs5f^mjHjc
%CBFbC)-!QqpKGA"/,)$8]H*7[g!^UN$)P@IaQ/@Fp^RVh$Q6#8R"k99p"^q0IOp">nIr9JQUheN#0FGD<qo)bj]#ZI7@S$<WR0@C
%ZCoqO>b^jX8Z%3Ef:LO0/#0>!L1*lH:u;a$-Mb8/Wro:WT&52N6j-\[2O?do0dQ=$XU5E.f&4I#WE!Wb=2S=I>F1U/-[:GtMutc"
%2hUHhE]B;oKWM#)<u6^YiEZ.a*`/f;Kg_quQ(6!5BJa+L:hAcFnYQ&`$lbI2C3IRHEYk)MbkD0.&i7HN+Le`0%6Mk>doFL+Tjr5&
%[GG9Q2KS..Lui_Z\;erlmr?VS.p,0KZQNGQc%_D[0/8@<S_DpOJ]iD2&5e4AOa65F:b\:+ZBi2!#+NLVKgNKn9ai^U)Su]<aKug)
%CqYuQ([,m!]H5=o8V#1ZouQs/ep*VCV2D6'5_LAs>=@1&:7lM'qAiC5J@'"2q3P#P:'M".bDiqO.[h41,1(kK.h(nMR=%$sa#"Q0
%.LA,)cN:E.BP074;tuc(#5ufPcOQ4)VIgd#<_/K@9\8>9K/rNEE$6LE2qU]ni%tP*Lk<]K./_6+qk3WDe]<N2%G&E[JF[,G]e6O#
%W@.q,4r8$nB)DmNTV;+Kgsls9,,"Y0(Fs&p#IN2>E?AJ.8-FLs%[`6TqmBT#PV_!T--@6J4#@nLLr#_p$(4>p=:5=XbRG4SID-9t
%&;52M=mL1l^nV&N`^VOrR#&1[Y]D=u+XKqrc2"Zr)klktB+*(/q)nCr"P;kg0&UJT*u!dN6foo1okPW")J2IN-c#NH7IE!gq?ecS
%^bMU;=MQ5K'c^2-Ui+p0oUIC+#q(193*%I6=BH4R2&W>]Q\hI!CuCX@bR+d:JL$Y^6R>T0"6QaZ'E1h-?DmuJEcW<_.,!M+)Q'(m
%Wt]YL6fSd&9?@sN`+@7!L7rR:+JXB*1+38f&nP&k[>n!,U*Q`+("u;8\fQjUbS=f7d1Wg0!d_4TCjIDFJN^(YZNU]6A#`!$W/BHo
%l]TB//WA3g2R3E:*Z:Br(0ZW/%jRDcQL0sPC[I>[>oPP@XD:$X2U_(CK1%X?)hRokXr5.2L<K?Yb93iM#F<"0lVa3dcl#5i*i0fk
%8i/X6Q%!T$)GudC'5d,h$L87gRsISs+%M1-7_T&^WEFmE\s,A,qR?`oBefFbGn^X^SHf7MJL`nur`[/=Tk4&RA)p@eR`f,VBSuX!
%CuV>)/m,<:d$1qGbSSs,pX$//)$aI*Tad&Vqg?tSk&@SJR0'"b,3IjbB.`5RaG-gcCoOlKI1_JZ)I^`lO@H&R9N2]UZV<]$0Ebp]
%[=jh3I9"V6(E'nGi/9'bbs,b*Ji*nl:]2fP4#,UC*ik!)CXl5q83\SWfa%-fAsY@AM,lkAHPT.+=q-$;$b4Y*'@0AGX=>LEC\,sY
%>`b7\2?EX"+m?PVSY1X9@PcJ*^!mb/$)oS3N[@,k+Ma=I]E$20[<JUP9-N6*KNdG@pc\`_5R*>OU#IM+i!%O#!E>i$g0`/&;EliR
%^%t,3fB.P483P<+)E:Jc3B^c`R@8`RCM6Q?p3@n@KgtJT>-+$H:[h+"]=:[;qbVLLBV<[iau4-&!MY/Z65'k&M1q,4/J6-!>43Pm
%3RL<UjXM64hHUMg89G3R'F7J7GU+smJG)#4mtN$qSO<0/B!IAm"=D9cfGJVjW#9$2clR5!<<%8#",G4?ia\8,0?toVo^U"E&<`cn
%-#ujVHl7M0M9HKII2L1Z8HKRkh39601]PRJZS>B"`S6Sk8+:ia#d?E"2A[FoR/K;f%;bTmfF.SZZLONEHFDJ4:Ga;D+m/Tq2k#m[
%qBEh<_Y.e\:cLG?*OU6GjKW8[=!`Hm;rs`lQ>PaAEAj5J&UL/0L1Gd,SH`dW0Jpp='jU#9.$'"T8AK&HGQ:u81lu3j-T)IAnjooO
%&rWeX*]W,Q7a"no"%B+OR#p'=2W,1B_ZLfAXF7e.W8rZrUCiP')RLJOP_L)JhoEq_fn6GY#=*[0c>=+;=8O(+`J!9&,OA5sI12V3
%=W'?K24f_[OH1>'7+!ir@+52e!Vh%mOO6*`E&tl9>j,MbCaAj+!X?($)Fk?UJ@MND`<bQt0H+iYPEDo+';Z%EN=dYjfV"D*1$)0b
%-mXL/B>"mp1)G):_0rO"/@^@s=%#"'^GVEFYjMjEF2R9s+jSl^OL8Yl94W$q7@/P@n6?%+:8=JaGM3L&2>>ni%\Ws^r`EfiF`J),
%EZBYXN`=p@b/R6mY7EPm:ZtkTVZnWu"QiY%\fl@fAF&\*l.iQ)iloj6LPL<q8M$H./^OF=?m1un!keU#(Bf[LbV&L5%u2tlb93R6
%c*p-G6+a#m;<0(KrGTs0E=A.:k+&eOabd*1X9,/Ze[s4G9JjDF6hF*H'acI<@jLf4B$`1-)I_A\$67]O80n8uOl]"KihUdY9p\c#
%[LdHb9]B`eBKn1nJ.?f^4kGf_43@BN^?Via##.')NB@>FX`,c8KS@+M<bIE;Qm1a"h>rt1.YJ'YZiCL<Lc5b(0(cjS<:=1gI!=%^
%T)%!>5I&+J6QWAscIj0qnIrgL+/gO*m-mN>XO".j&!`!s"Y'L)B%>'RB5`%3K:H[_@O`^rOJKITaWVGGbeMM&]<l9+$Q5enf&[02
%Y8AP#I"YR70.K)P7:2]ZC7fNoopD<,31Ii8'JLn+YgB`c7i2i6^6o=S;_'`*Ptdqe\LNNJNsVn.LAu4AK6jaA=r!faW*CC%grKV-
%N,/PZU;CK*g/R_7im<hO$A]*NC1,+0B742B+Oq79KBA)"Lu&u5X^R2N`1SWVNkpt$+UoE')SG8=S\3:h5SuXnart7N5T+Nf)_*)#
%b<^6DrLST'^1=JK<1\^'AeIFp9Mn:&4VZ4.(lJ-!H7tE_n^b"iTb"fd6FDR:+?3,lpY=:]ZLk.&6h)XH3WelaI9!#hGV1;Z6NOAS
%H@LQP4H(8JB8-1EAX0=FQ!-8a5uPbFn;2!p&B[;l!lUruj+)74,n2i6X!Ub.>gqu^`fPLbClo[5HR-TKH?hX&UO9f&Qb&hS2ro,u
%^5TUi3V57(S3t(3F!t!JlDYNkkWH\t!b:kY,UQ48K(c^%0Hach)XQEp1,#b%4a.`S05qpu4<Hq"W*13N#:6TPS'(GN9?K%qQnU+0
%?NTg!X9#&!GF:TdYn^)8PUoW:)GS50m(&t!$-lCgG?0KT\HX9$Y9A6t*)J,8UdVC$SE)F.I>)&RrJ#]!c[i%&D+#"N#e6Pc?HlYC
%3.gQR.(r;=!Q'@8G;t(d0**Qd4Ul>)N)'>"^(*N(<"q1ei3G;fj@U>-F<ZIF5DI,h<OE(l[)><5DT(Dm_JGG?&_KpZK+4NQ)L.A6
%o2MgaXjLmC@)b:\m(%VR[0[@n-B'^-B@oo=hpC6<XFpMgiZ&di8C+G@D2Jr@/LDI*<9^\9bGV:j"(aM"&Fe&57=Uk'>&?Tb%BG>Z
%A=l:C])r_"Ok0f<->:8X6cM(+^SX#e'rf[:"bf@FTn8^LQ&\`si/hAH!N$#</TZ:PFaY7aT]?_.f'#;j6QEQRPU(rU#+Z.Ta1#uJ
%o%lZ0(\Lg^4UR3=4[FT91#WTKIdC!n&Oo'odZ2Gb,Pg*q@FG!'(Ke1njDtb;!dNoU!I>L2^0'I>d4GdGe("+9cp?UtXWE6%,6bbj
%JIhk=MRHGQ04K?RjgHmjaBd4`f>KOXB64<--MTmq8o*Zug"^Ke<C9KKNt6WO9GKk+dAocmS?W).Lo-sY\MI`j1ti%ikJp(m,LQ%p
%<'!EE_!EW"qM,10R\teN0Z,SQM1RR<C3*qeS!`0"/@#>X`^82'_/BT&6+:VfkOT$_e+aPFo)hp%fmF8A%>2u>o*Bgr;91F1JFJ/J
%U-bLYZtdNgJ?,>.A,OR6p]qVa<2d^#N]CX8>3I%66aN"s,UA#YW*G'PL5bh"Jnq-)P+dX:0su8,k]0pN<4"mmkXNQ*&X"p5b)JZ_
%I-EcR8ASPG@$:HnL"eKLcXFLk.TmA*$?VLVl,XXJ0+n*c-SM<4('@p?L(NptJ[HKeI;4Z^[4RLI(eSp.I*LMrju\*)"j0P]'8Otm
%[bIK.RDK/b%CF63%taq[aQ9scrBS!48L/\AW=i6IfW%(82VJGi1fST0NXDY+J.,CS"dXl8MLi_;8Nh!$=&V5SD/$/8">6a:5+h-D
%UGc$\CY2m(PMJo@)UQ^Sbsr?;@*Ab57"E'f0EDdd+S\bb4]8u*<::k`[lj=fG4,3qa'tce#N7@4EF!7g->:sZcp(>B3KhFGU)=5I
%2'bR;E;g_e7uUD[.YTZUHW)L"ID(65;2^-s_%![hn67_XFd5F9<%DK6j?R?2]Wm:@E"<eX.2WG1dVqYFm1O<T#-i>N=F(`eP<QYA
%6j+Dt^10o+`@tO9%,\CKgPtR!dlbt-E$H.j#O2C*3"Srf\72NP((on\qV@!GTRRn!96(_"7KF;F,CF=SSFUJ^PEq^Z\3$='ErgsJ
%l)0;o7DBQ,F`c%TG4.+p`4XX=7Obqf[@2p,`SNqi=T3jpOs5Vd.o(m.('L="mIH![7r2Ij`i=c6?n/Fc3S`YOP3ABV?4:3PWM3XM
%;`*)TWt]$)(cKj/#8QQ@6QlSN.Z&3JTKCOr@Ob<A-Nq/$aS0H9JjVL.[t)K>6dbpuOC6"U>n%T\Intgl]\;kfYb5JPk.Fb5En\+7
%&T-:m"sei@:JIOb\qGur3d_E55Z)6203/XC*2rBM#aEFHj'4%W_e&Tqpk)NC>>X,iH9dU.(#iqb6'e:_dVXNe"f-%Q+qu=:'CXi<
%>()$O7B!pjV'qu'n%`Da+R>u'++l3t:"u>AX&Q3U`If,npJU'!["q+?D&<l7117d7'p=B9([?RSE`Y&]01^@%!ni9cm8:Ha'o`;k
%#6d.8Va)IhfB7a_OSo#GE)k;75n)K]&r*DLKHk_,4%NmIS_:)gHWU)O5oIV`@n:G]HG'%,^7EDN85pu`6Nk?YW7&IY%XEbY<!j8X
%#k_=13E?>/[+VGj9rZ?,f@Q+8WX.lNKmlWu(kf\0h?LM[At9ZOG?G*&bEK1u$MbtH(Cj40Jc=obA-g6m8/cWu!Ri5-H:5PF9g'n2
%\cQ7KW]aZhl*9kaeIipcQtd!#0G(#I!;sh,nUY#Dk#%bR'!Us=fH=9sSc'#5Cuim'.2u\lqUo?a:12MO:R/B`C+s-P.np%tLI%SP
%LtE((#SVA%Thdse$Z#m6fN&$e_:f6He!lMoasGDF1RbD[)ZV/5\&)iqBbW'*=5,Us>=0ns',Fh=97il,W4%JIo0D;)RDIXd:'SM9
%M76rM/lS)1-/o&sagD20#qU?P\A6=pHB_0JIR4f>TZ2V+34)OLfNaYb,o5"8U3@QAi]IAY63L7^k],Qo6>7s!*?[o*njW#$#E>R>
%@pU'+,bIB43ZIU6"0`16gt&,WAm?JQ!/&9h)dm"V]J``Xq7r[(qo*6LWK`T@@\-7*'aoq5"WJ'UeZ!jBRW:(h"%YncFZ:Ya1D*9@
%F@D#bcN6OS[1dDrljWO?_6f-SI02$JK&T262*Wd25O&o\9M>$aD6agJ;?AS@IA3Qno?h;P9,/"[3E:bOC`F1!.1meUlYt[H`oWdT
%-5TRc$j_K4J>oE=8mh\KMm.Bf'Mb<@7S3dX\$WA.0#h$KLT"Ut!u(R>-QUK44[S!+QT_!Q!/&Z_8$=pf%La:kpUNWNAIa1,S>;cT
%7L'k,NFJ_T4$jn.+eUf\'hM&8j=G]2]2_%W-UF\i.;<8?'d9F\K4"+aY[fBsH-@icRG,dN(`69*0+p?k)Fucf?mDP\iV-r?dFJVs
%OAB"U3)B*cE5uEdlhD:0/?8?bjB)koG0jnNNY%7,4(sF9_[r#[F@_%n<q@B^78p-1^mPR!NWH3@(ac]_)24s5SWIELH>'rXjWS;;
%qZ;Z!Bo9IQ*ZJ:0N]spuBPjcP869=`USNMD85[DFpj=>HPSaWpLnP5;Pb"kg2WtUI!`Ygk-k/dJ2oZYi<1!r=Omf7F/O3,h&&DZ$
%;G,mu8D:lk?0f^I<u_e4?PP@9Ae?[i(s3WdN5,WH<n4B/EgG2cpeFWZZWb&Q7QL+Or;+S!(+_.FkbWflaq_d,,90+j<DqUqK9^*`
%(#5$"5GDjhARCLOXM#HYmFJ;@bsN8sKm'MY8%#N,LQq2f_nt-SV/f83^p'+HW/s,p!U-II+W@4*,O:9b",B'kf<tbklXH8D.^0Np
%Y=#\SP;6C/X0=c$I1Os[?h6>dBSuGf<o"<.AukI5AeYVW$/MQYc3O\?>?+$O#re]!)SQ73=fU8RS0^hYl&@m6<UKE/9Qh&52L@JE
%6p;tc'sVs2W2cD79%Wdm5uA;L5YVdKqWP(_ciuQ?1W^R@ZH=[2%BK3Y-1,\AK7rJ<*26i@EXE;3kWV<g8]]gS+*/H3;q,atGS8Xd
%T#rPsB40##/pb_Hk$</=WE0Lub'U6`DMUK3&'`Kdfls6t[M^<AR#4Z4aocBt)EmZl8$d[LFWhZ0LqXG=i;oEW$5B_1[[fMcj:nkA
%E:Bps*INJ\6Y>aiqXTd(OQ#)'%Dpi^Ane3KGV"%L%_G[hd](B%#uNAK7KWNV1di>m;p7AQHAMIY=H#.jU-(">S+CS6']lX<c^EQf
%KND&fHCGYt#&<Tf`/rZC8<\\27b#Y,Qi6't.(C/K)'/&MJ?1NdT@fM[Yb2HCDU'^?;9sWT]mtW&Z^%Sq50+,$5EFqY"^h"k!cXIn
%H0'.A`f?bj6-1HQ_"L\T)4!6^'(,SU/aoZ9?iZ-1RT&9/ljAS:<5o>L7^!U#j!.!^Rfqp\[<3n]Csl#NJ_WjCl/9JqSo,H5kaea'
%O[Xs)'.7)%peA:iOCQ$BK&n"?nYdn,J`2lK+U:]Np-9cY!;;^E$8/F:YBdL,#@0hoc9u9Y%n<Kr0Mr'HD`X*l!R%bYEl8Uh^gsuV
%F(=2,ZG[jhG18"hZ)S;e=h;TSN>]0Q,5O6s?,.ln9d+,1*_lrP+S(dQb$m"@<M'DKe>nFB2bW<ndb>Mkku<)^kpFZ&5h/L/?CA/.
%cm0YuYC$9jjir]sT4XMZ!`(\85@b)BW"P%O(ZC0P6J2Ds?qbW9TSP&l*"c43k:K3.7M?+1B2[%3ZoQ#OLIV@+B-rDNZ?&,8GmHe\
%+Un_pp7tiXU')ni<LbB+(/7)oN5OMt>@b,B3msF,`)K2`#T9Xt8!l;CFJipSECt3bYmK]c@Oq^t)jNI#J?:\ok%BJbB[kFGF'0'_
%f4<g!N\dc;d^ZH2j"P1"6`Q?td"]*Vcbu,aH77/&dFGj,.Audjodnh1(?oEoE9LJO1U>GccR./%:hLaV6B8k0']?tc>E?>K=b%r8
%I#XIJ\.Km"Pj]Co\^Cj$HsR7#X8,dp]_\/hHQj&a@s"K]D&4'Q)fWGn<1?k)2[#C*FW']0Jt>fdTn;[b5bVZmO>Cn[F`L[VT</5-
%6'&`k>S?La;,u7^Kq]G/cG-Ak(eR&oOS30i#6OX_L&et:BJ'%MYf@Xo1irPkSC`p[l_0ZX<,I:p*+VnA6=\P\b[<tI.a3XU1_2rK
%^o<*6OQd2sOr>e^:T[^ie5FH<56JAk6>I.*OKo7mWjEQKneVn*dI^kWh.U02R"9?PaQt3g7Of3?fDVbK6]GnoN[ebG;#e.VW_/<S
%61kSB,gWSp.3m6W!1RLS#AOp^kZUeK-J9N4JpB.+gZbfB>`L,9=uPl*<M>NFqC?P+'i5eO`<$EN+iaWI(II(Xn"NF)/O9t&1%Su[
%%,fc+?C%hVSA8&HYnM\9qTLgt-7DQ@`AR-cPj9HD*M`8E2isiZW%`r_:4j^5rr_c9A1<R=$E2*<NiADcJJMh<TdPR@!4LZJ?"2sn
%)&a,F=3"/=qZ16]e%(K2*TW""\g#]A6aVK=]!_,)n7gO.M00Ph>d?bV_L:EL:0Sq4i/!b([pR<#gI$s2pF1:)jQ!I^_r:b,.mqtm
%a$F.e:utT@85k9=%!WUn0K.:sK)nqP6IA/PRGs;^%\8`(Cs7]772a0u&EQ1@O^qc3$Tta887[lCr?XIE",mB.5LNM)<Fpq"2/?1k
%dir@^?_s]hkcMo0i`n#T5[Y-:0<E?*7gu@\hbO50A\a9.1BjA88u"Rp&YkV6KT1llkT)>rNI2lSMY.m\p>d]#3!RT'B^'t*g]\ne
%N9i9oa67pOl./QO=CVIp2KFhbK['NuhRiGOG%=[CmfMc=`/B/o@"LFOa,XF^d"B86:CB]epIKoSl)?s:;'hq]=9;Jk%KHCZ\(3H]
%O)U.jYaD7\OqK$P=ron0]565K?"fr+ZIX]'9*W.IFe.51k:6o8-L9/t<'Il7_Nq.>*J[/I"1._C@t!PYiA;.MkCu9I"U7$bCCI/A
%s"8CGHNfH)r5S&K(ZdGn"^J-$[l*6[BZ.iS/ZuAt1sFPRGC?rX[no)/Yj=u0:S`uHlG>7(#cZfM@Xj]G3[)%j+_d.NK,Z?(7\+pM
%(kQQ=&)&'a.@(:bATJr06nI;*%L`T%io?,fPG96PNU7<g.3TUD)*eDInh%'mKZ.f4>04(4I3':pdMYTIWlu$+j[Tfq`__d[#;K3b
%U6h64!0-VOZLgkK$(57o8U3d66k*l4&e91OMfq'J90l(=^RhcU_YBLHPl/C>M>SUZRO+b!X*:[X6H=Z&a3F(eaXNpGV:aVRa(#$*
%B.;Kso!$@"N<.rhLT2?9:!VidT3Bb1W]bpS<8aQ`XLhJN7.*XrMedCaX&cJ`FTk^.q*q<PB'1PsA18;f+*/"1#1#nIL`%[HfcY*0
%a&UZ^"fIWl\=A.jG*F0r;B$0bJ2"\DL[sdA<`Kq2"dTFGYoYBWXYpt!_$)5cd)\s\ISU*`Wg8gUfqgD\GHNY1oYW/.Z!cZO\c2\H
%oDh<f`FQaamJ:I(=q)lT.04=E&p@GHi'sjiTa10:,*k?C5#%]MX-%k_Os-mcEd.J0.jm&l86\p+.fnYkj&tQ;NQ\$L#*O@EOMOI.
%atjajhn.`&#W=!'aKcJ]ZO,BNr8A?i0eJ'PAV!rQN7;er6$P1Lpa2N,85&"UneUKb,)7\UB="Tm:?HB$D^P@d$Rm@c(BV#(H,/ZK
%qYIik"[8]A_TDs+&7VPRWs,aQV1c@8-s#^*SZ8K+F[WD'J;AQ>N"meF)7'ISPX:A(reg,oOeKat;F>(n.M`mT>d3`+&!gi;6JqG`
%M/NRTG))g<eCe<381IJ:iB0f0&V3;@Ca(Rb[,m#PZ:#mH,:63%M+B40$d8WJ'N&uf6ajm7E_X#0ncY<tS?CXCg1"+O8uA'ZTr%2R
%DV(0jN,Ld_gQcl?G.\GX4']iAf>j,!jY=hm=SJaEX.\m3(.?B?9n;*Znt.;*S_G",];N`$]Y*[d$DGMD,t\P5.-G/1^'`lBBC6o\
%r^I]kRM(bJ,[KgRMD3Rboj.Z$8?GUi4U(+H4>NA,*%N/)bQ;<n'3*G%lVa^-(TdsU\5gU*OG0!f@Y:V=YJ>m/"kAiAUf1Ih2738!
%FjjE`mjWUQBCn51CCiY_WibhQX\.?[[C"E=bge+7T[(MN0LFL<;M*\e<l1oh\l)nb`1\n1##@e['TG^Hd&:n&:o*#ca<:fq6&ToR
%dKpASITH/'9E-I-jLIEO:GQ2eV+I\@KY^kRMo]ji'Kk?8GC<.%(R3*H-t?Q=l,/)^&3-OK!1?Ma:U+K\eV%ugD*]XmhkUT;-VWps
%2NML(IZL<;-2rF,a1;Yi,6b&l?W>!L6@<d`[I)dH!F[=0++dU]mK5HM+b`'@'pg$RTs_2q[F#[VA,[G#j:7#u5XL-@jncJ=e6U71
%a'Bei"Fm+])*#ag=9@'USZJ&95`uN$G($E,g#\KGqU=#9JY<S9?j#)O^_/&e"fLcjTEOu1Hgl@P('EdsN"P2U/88YR_`(C+:TG4L
%EXdA@[g^iURS60VrM2/0\jSo[mQ+RQ=X_=Iac0'E%(ckg^`i'k&-<>Y-uVCOZ0d;uL8?)7-P7c'5OVIJ2>-Y=G,+X<riWF2)['4`
%JNZ8,W0U/@9S`c2Pgs,?#gJNU@CrJ$,$CHJV]NMVV`:khr4j2K9-gGa\MhM;#ZXIJL^Y-S3^s0*k-Y_^glB2?1E[80L<lP`,?5bM
%j?o=?U(VQf`2FNMeYqmZm2[=V.Y]ZpO%:L7?YL>DAd]sMBJEqY$r<mlNFRNfHTIR:8OlG^,q2=,&J"N6K%uQdKH)A5ZG&mjLaQLT
%G-VlQY@VRU-2F<ajVDtp+[-Jp92K.%O;5i1qIo:'I,&-%%/(s4Ot2(k@V44FckoQk_s8uSE/+5qFfFZo*dG^K[qHNY7*Mc@<WX^F
%PE@$DNs*L*)'qDF#@r\A[&[.;aZG1)9XY,LGn:u)_(_<coLFasKc73DA6kJ(VmPK[+XX.IZ=VXs*&@Rm9Yq6p(t6,DTV"-YGB1p-
%ZY;?h:o##ObjjsdWtr!MMqc&lb<XO]:ei]]RL%h/[Q&mu.QB[*?U)OV&1-iCpI^T&n'E?I:RZ*c^eb]^!h7Xj<_Brs2,4_(d[JKn
%NERMc'oqPD@Fn0)F%ggQ9Rhg?63BiM%"PS)NQ='sNm+NgWY\c5&$_ofBP#]XMo/!%jNeQX.VI-U]H"'S7IrFk5@lK\:oWc;&n2KT
%ZBl?c/!h6UQR9oOh6ZUC;5Hbl#*!_lZlC"8V)tk]Yh-aXbr-+EXiIWE54>O%l&IUK*iW?n_r<[]^U1C&$9B:Q"/bWLH$X%tk3(&e
%S["_QZC#.Di3^QBfGQh^D\p;9L"6j$LK690Yb0EY,:\rJRdMo4Okuit63^0\"U,HG&L`G3(O^^>0`JIMUAieG2Rrsgfa4@cq8f!k
%WfN&8h6#l=r3YTdlY5j*Q.Cg]Dth\:\BtTD^.m%E9ho`&G"eBGE1"XB]CWU(-B4C$DW9e,3aAOsY(i&&[4]QJ:6]g\1VO=ORZ6qK
%LeV#j]+VTP\BT17XX14ieYYKpSAA,fM=2H+FK"$FEKV]6:,@Z[(="6t(L(A$F"qlB?>^Q\p2G+l_8Eg@]<'@H"Hi.9L,lXlG'1+k
%Dg996f4hTJDb>kt*(*_cfSI2>W&DBZ2B5;Hi*.KhK1+YMa^?6'BuqE&&'BBBFbu?HK^t@5*iNgHPAApd5>uc']pqSk9q!mn1u#Mo
%.0qr8PC?,i.jPEd!]+Nj3o!9J:_V?XbC]Ab""ED,o6seL:mB&drJc!X*7lbgc>4YafBMIPO%6MkZd^=Y0st/5r48LaX<*n#F\\m8
%+"d72HE=obAZO0].F;Ke]9RBSa"=k!Yh[uZ.V\!1[oS+&?NW8KE5+fGctYdM]^1$+HKNn"T*D-OWc.>BWZ<KAS</D'q/Gee?IFEf
%pcqGa8a7tRDa&8^\=)I[EV7[oTr9.M$Kc_:H)EMjV7Z,8V-U+XGH]^\WRq6G.go[S]gR/)g25nA2G\,4TG/m`&5YQIMFs]ZPH9A;
%oNGt:XNj*u<ufYSD4s-Y*1K;!O[j+T@Cn"lpa6C1gk=F'KlSkk$/eP;5eJMf%/*.6o5h"`5s>5:DVqB5o\ic:kJ5=VW"`"g!.\-^
%I&NiX3;L3)]&TFgFJZS6=m&h^$F(:L/>k&gP*pF:F2ZPE)lE<d$p<ejGc62UNhP?(rCTt3P-g=8.[A9^j4lb<CrOOC=q!pf&+t!p
%RoQ*GY08]UN39,YB]iasIcgBO!iHBW"IOd;1u")IOtm7'?h^PMfdn8Gh"^7*mV8K$$^9C2;ntq^$Qo![/(d27O;]NMcQ;Ai]J$J?
%6_49,\lq%.ekh%QnNJa,K0&oG=`OXgo57!Nq.^V8P-,S/K>9gTka2$j)Dfno\JScMdd'1q;GPnio+^O$MRUV[UqJ8U"0K=N'*qAq
%5:@C_^\R\[<Jhq*)g#g<hWr@fr!1]jAs'"I?3h><d$D<`a^E!9DNjPJR_DXA=^gdGc=*b>h&rK!99c>%kM`4gY9cS5I,R%me_,o_
%9&mA.<NTBAS^pNo#Yfl?=K7T`gl^)6JoaSi@F#<fRUg+bD#u,lc1hlDD;TSI^Pb>Sb'<5[<.U\\/,-bjS%GWPIUPqW'FUD]^cDkW
%+]=Ci^j7,LDOgCUia3^lE0oEj#*n5=6XP'n8T@D;PITAAQ7ThO6BQiS//6L&BMg@YpEc2+8r-$#M$U((lG*a^3ts\.K.QX<cp__g
%"r;cXP;)d?Ph0X(Jgd(h)G]cdQF>H57ho[3D8I"hZkG3obBuZc-6GRCS)Ss#SZ4[MF;HS20L<$_%rRQP(f!sg!-cR'YiM8+.@^e9
%Hid,!`QiCnh4'//V\#E,rFgc.>CjO(HdFS]XLe"e'=U`!:)?N-O1UtEo[q1UV;5kiO03N.JWN#;EF&;_GTnTr*1Ri;k[!-J(sn!1
%!R+n-<@6B*m/d*N-(ZC^"NPQf\i@_^JO",eBaYjmR@l*jfGAt^ER(C<N6DgV<<N4lV8W4$,b;VE)iJ?^(o8uLU4,W>(0(rbqj8o*
%12#84eV6/\R&s?uAD*#V]J6qR/7Pk_gjp:ke@(DaFJtY<@'iM2\Va^WOf'jNr)BW8%D[k`15gOkCb2T$7]%,_!7hrP&u(PkJlNQk
%>WDhJ-V3kI.hJ0r.psOU;aP-G-\L?F'ic^cqXRB^&O=td;*`mT/YY?Ng_*2=&-HAt?/<9?!K`b5CUb=r`"kcSC/`e"ckLN:4(Yq_
%*D3V)NhFAr3Y9O0"`WSdh5YlOJm.uGSg)*9<(VTc+6$^gW,Ln?Ro5t`j%I6UWWQ?*NU+-0+KGgF174@/>>RY-%n3h)9YSS!_U'(1
%FBdO"RY0%9>0'EQDGm$i=C:cA-N17]W*>d/1NsKdkGil>Z$2R8UkBJm(Gf^V<t>C&?[ei,Kjip&Jl?O+j/T&bQ]R;(f$rl`Z"tn`
%PGDBc.P(=riP(fkkg??c>Nc4;m*38u6lr(\Rlj!+a)p8:<U,3A,7+[uYU[Mk+F1V<ljLRgc_-@=^@`O/KgXTql*)r#8puDKb]t5o
%%I!J;5:h6.&Xpg8%Cq/+X-tWi*WrLb1JCS9;RL4FThS2ka[7]D,ZJ'VdZuK7,G@;V[UohHnI4<U!u&)!JZ-./qoVi(ai%e+W="Wt
%Chi-2Et0$!=XI,[+7q`ePi7e\(t=,(U%^,S7,_Ab,?3])pAi\\n;uueU7YLW'?*$82482aaT-L.okLLl/l&h,$HC<'AW%2]T!StJ
%>JSOb]QgfB!)QEVoT^,L(`4e-[];GghQdjVWr*V^FGeCTgI!flRQA9U(O25#>C8:U5P_ss_7KX,X6,9o\Yr8lX=9YXAt/s./8pMB
%iu.'tE!PhDA+B>>o=Wr*i#</c[Id;lNaS:_K:%A*!D<FK\GGB(fPV%J,dK#]k1Q8GMrkY0&qE`1o-Is*>d6L:mX"qp20;+2$78G1
%aM'A7D_<'b&b>SRP,dq9C.)9)r>_e?9l8"t[c/7Fg*0TTj-d+>I3m_=Tcd'/LQ-[t`$QW?Bc)Po0q25=IRa][(8S1A$Nehbm#,D]
%bI]-X;!CI'=NL$>V)lthc'^,2,1SqF>0/6[<MZ2?`$',ad.?s.A(-Q<Hu/bi98'<ia4`)\?6!;`l7(=51G!]1kZ8h1f`bY0_6lW0
%1YK''&;Da2.KK8Ip*4Rd/M4QX0Mio?=TMu$h!>NY.l;Dh23&p)-ROej2*T07_#]:6c*SHR)!#L#9IXJ!KJjrb,38q2fiAS^V$3,W
%(mD*HOoc9_))>FkWCV%b*r/Vi>WHqqQ(2L&lk\TG^8fQ5eT>^M[OjDcAM_E!n:5!7m(OWidERb$WYl00l=/c-TI#AjZL3Jof;d?9
%!sR[L_T<`.)lnd?%$+`"%H.!6lU/\qaLE@;M!p-%K#m3E"OCOg+W71:E6g#DP[MH!:_![$:WSQ5_@`AW"oKaH/Y$-F6n<<E,@&_l
%W;3A\,"l`[7LT,L`d4a>#jHQ-Pg=i^ThKZ+Q;X\i'WM`)^E/B8o$"U)6F9DiA^-$](0'(_VC^3kMVMhW=1WflotoG"/ICudapT!:
%Q[2;_r>86=VfN4L;`,GpdEW+M$e_E%(#(LpP_ORsQSI9D)%P:_CtkJ"2HA1GYTJU`p$s/>og83n0Bo"0>j8mE`3^Y$\O;WTi1L1@
%qpRI0E@=^Vp^#b-r;^\rKb8jr3W!5<Ah22^-9s:,I\Jk(Pui:!CcmOU?&jNHXOLDf@6j3"/_j]doY9oj<\VFoMHQbo)JPlQN!]cQ
%V'WJ$I0_<;hZCCa&PeC`Gr)KD#"_k8/$.gVnj2>/]9"A>eC#K0JjVAn(&[Df2ANcgKX*mo<h6MtBdR3$4Nr`1HEt`c!mAY2/gOmd
%g5"5O[]ARQ-bkS^'eL+hSGLN^clj(5\TU?)LA4Tm2t3E4Kk_>gqf3HNo2b39JUF$Q+uRg1LZP`-AaQ:&[J1'iS2\c[0a5j/4M,3^
%i+M<C8s46RmCjbNR?gkcj$\ike>V\+3g*h+7+ZY*5)7:$ZN45,3lN(,:0<F+NYH7s'$?^BK1(HdEPbSt/q6uW)c7&U)I[8,jVMVl
%el;V=D9#<N.94oB=H(TKSmk?o0Sq)CECh=u<b)ZZ]W*B+pG*,s"DL[a<ar3UjMV\I\D(3n]YKu%"GO=1F-9d-.8S1*gnG!"X![9s
%'gWt.e^RJA,9u0b<_nTT`!\F^"&aVG8TJ/`6R#3PH*IlH&r-t#e3'JK=b=l2ReVE<N4R]m]33m&P+SQ-o?+@`4&'64Mq6]F&T\`S
%-L'9782@Y;(-'j>Qb`lAODIff[jn5["XN2L8u7t.<XEJ4Q,lo.e(_g3bQ>=qX5!bD?XrPT1RN=dW/N7Ze1S'uPQKeU@"_\>F"ukK
%E*7^&I,C#@ZdgKm)k^duWDo)0)FC&Np$&r5;SWusoaVA[A!t^>ku_P$I*a?gk%n#lkNcPZ6o_DRLV1UE"qK#`(Cm0(Os]%O/ql$1
%i2N\>8f%U!V`#*JIk77<rR"[B7[>5S%&*C-QR1#`TR+>++U8\:c0g-MEOFH'24GVgMVQ<+pP<YkEOQfKpsIBJTB%nD&g^b"((*SE
%-dci1<,=D,?PZUPg:-n7AkeuPe3heh'6+0K;NVb]9b9JL,/B;((P4(m^M#QP<aS-&+PZ^M9<(\2#iZ;o=&D@a!E'bgX4O^F%93*>
%`iK:gQCf@4#V]S4'5+e"U%B!R_d/ooHtiq^@(mYTpC'?O:L.EZ[U'c6>$8)-(,k(sA8rY7*NV49%=O@pO<bN6W7FLWGM,d9?HtG\
%AmVdq9&lYVTtW]PS2]XX8($Ja!E\AoK]n+J0l1j%U,ASF3M:aVBs,b`-4laM!4*3p[[T(JlnX^_r2tg7AbGeMIZl)OiH#a_\4H.\
%(qtW=\C@l?@hZjpW*%4W/pFcLmc4*PY:$%-!Pa:YkZE?c"PRle'A&or/$"N(.<[f/ibb/Ib=ME[[6):)I<P$Ga16RlPBV!H0iXCP
%]'?jGGj_p(F;`VpVu[QI&jb/Y#F(AT"0#Z7iZcc"_e1:bs*=N91!$VR]`9oMWIRR_aZh%`l=1UI!JHai#ZFo9q#WbfCRp-(=6^m$
%&4e\&ZBDn)Q/fG!Hq(/WN&2]/XcK.bKjL;!mF<XT>8XIRZkJ_.Uj,Uh%[<fJYZJ,$_ebOmd-4u\(D6McSijE7f2*$Pgkm-M?G,-M
%eXJK"I=s)O+gNtg`E$smA18-HYRg'K[.)D5/_,rTg-T(?(SS_Jnk7/0YT&aa_mW2cg]P#]_QTn!%rA--OL_!@9)Jtb.chWR?A'Ir
%@CU777WNYGV]p%6;bRJioi0;riEF'>P9.Q%UjTq@7uZ`qe?$1#)Oj+Gf98j?kbAnd&`Fo6IUpV0^nk-6a%IWG*]=LA#0J0B[$+5+
%<+^iMME@6X=]mM;T?t.ka2P%o$OW>b&f[K89JZ0%?<*i<-eN_S1Hf$1`Ep=p_$Tb80NP!IV#\:(]Bcr5q?6.]!$<WhL'82:O%R=m
%3)u[lgmhieV@LjWX%4ePhe<g`SNDgmlgE]!*bNJ8G/7bQ.5BI-QM$cK/AN,_0sTXdN5P-!5lo$bWUq-E3"HZsmJSRe%lg]"q,(Z-
%YEspV8!A_;[fS4Tn5NABkL9)sZssj[V1T:iVc.H?4%qNEQi*rU7Uo:/V)3X!^LDJn1!1:.3l8s951tR33a3)hNrbo2kb51ep@+/5
%jBrhW]1\l(9t"mW@[!at79q[Sb-Y=R'P=5J;rd5?Gg&5]qY@E'XAW;IFk!c*ZnqrdV^PKh1Uqt"+tL"f=>,P5?uHgb#?"p`>:AR]
%?+m"g3]eOAOjBuaYFJa!`9@+JLNdZ&,/7T6asO`4p^NEFn+&QFX?1qTl*;=(`c8=.d+q7S/P7$3A6IMdj$g9^fbNo\0Ulj6TS6Ah
%Ja7X3ALgLD+>4-RgmFNra<gOcM1%HM[8eu"!dgTA30*04R^_M`-PM7^)_Ei#U^]LGH@(]X_a(8_^-qa?m+QKcZ^0`<Wq(mfOJ*a1
%&KAlYl`0R^m/`O:m#VOd]T\][4q"+Ci2fTr($`*SGpiq2f#h-"bE,-bH3kMGbAjlN&MTPBYY"V"TqDS-jOYj%RQdh:0O(oa"c<Z9
%3i`"IdtXjIeBEVm;fCBje5qYq:#Ynr:hc-G`'SMYHkn4:M#(RjD":0@]);D:f:9W(/&F(h'2G-nFWeDd<65lp()OZaVJV#;7jMr7
%6pO+bNGl0)Tcg4R(KH&)K:?HV/J]]#A#MD*$a2)/g'12*nf\9Y)E561c:M\Tq$'tBdiIVUTJJ-D_kj::P--&!pQ"qC.K0%Y3/imL
%fpkU/0lX&8nVd_AXQ1m0mlkC3q0k7aTY4UUT-=Ve\`dD>"ZN33lQG4;&:#.sSDo=IfYBdH[k&@>7!AWN!.?iI"P9?gHe8X&/<QC`
%Ar#jlbQ.t;[i#D%9S=@4Kia'>2]*+PGS9E34lh8Hpt*t5?8$8,2pc*En6a1l#s&8e9N>MuFP.:Z.'Q>D:"Ym.+YU>1:U)pji[ESi
%1>J`h>]V--0IU8$>$Ou]DX]Qe.1_I4h3oAX/$=(J1'_4a-IK\ojU7UW$<aS%pbu(IfBE3L(;LB^^ho>7CO#b]Yl/?frs^<j/\]"0
%?GV""8Ns:Y"8_7,D*VFQ%G.r,bO*?pc-sGG.f=)uGZp([B8c(9jjm8B3TU5$bc(81+P.k;`k:g+"S,(B<`eSEq+,[Yq.QS'X"f)e
%1YeKdrb.&=^Vj[QC`6D3aA7fVo-6e#b6_>l6bXXEf0'(lC[9R(Y!+X\XVeMg'H]ibC.R:k#eYoOFd@>G>N1.%ALC;O&kkr]5W6%b
%ha#nn-taqgS-99pO_U`""F30_5Z+se=lc$Wbq6Qt>h$+!b]*OVcmV<.^`X)Sf^UT"I"Sb&A^2,b(,]o0\7=(dTp*Y._jX+A8i,,V
%ir.ENVgZ)N%N_BmLNk:;E`1EPR<glN[NSdH6@'"ZT!ak,<#l``W8;?`\HP?-=2Mq1fU-r^g72f^aiV79]5-%X8JP'"I8qhkgd.["
%,,!U1?n1k1`C$HT%j=:`!m>k:h62]KoU-q=+P+.nf#`1oR]K,-orJZ_hnXOq)fREI=SEDqPI.;94HeVNdO6o8$h9Y.e7NomoU^AG
%MN/on6f;JQjI/BtRO.UbDV]3m+j5b;r_d6EXQ$#upZ.9sJ.c(O*Y?I_3G*R%jTYeX?mjibq(S:\-F5i"m%-C!1WS,m$=.Z3Tc\0d
%MUOXrGDk7Q;Oo8$RF5-1dLN.q::r(B>-:P2S7]`OmpM@'XO`$$JDpr&>0ZGPp6VNgVZ^95Bt6SZo@R$ci+PkaeDCa336_Lea-*[e
%jU0iQ-)1U4P?:4[9*MM.p.P.c+DaeHF1Z#PPMA"7HF%s;BZUTn'BFnAO%I;]1C]'5<O..glEQoqKF:,"J5D9N3gg!;87EuKD#<tm
%p\]"-orenD%'6`Z6[;)nC]5X7!,]2;D/aN=.rL"f&@d#g;o#0(D1Uhr+>6OUS&8guDANLOhLfR/LcY;XCa80@T^--m"ZYddhZ]'r
%/K.cgh$gn-p'XH@$n$?DUdlOd#(R$>#3ni42Ln(/%_-uKLRTq@h@M/*>(Kf^[TF7iE%(6s+jYEQ]bb_sj9$O<Bej,uF0"F_p]ZXR
%jV7a305+Q(:?F.%KZHhhkYK'?/YHYqk]7M=;ptQ/\mJ&sD%#Q;;eX-D=>nd^<&e*:$cI4g@Hp,2?ifTXp$V[%+)\cFol?u9)_fhp
%1nhA\psoGKWk?8Tg6iERW[qTV2GcguqD\Y+h"dNS,*keR+9t,Gr_6Xclm/lA7Y6011]Y$jYG\QLZ.<NA=XS-6,f>il0R.Tl]*)4.
%LeJ0@bqa4'6C,8ooEj``A&#YG^^iA2_rK0&$,8a^+#Iq`Z@qkB@KCD3?pVj[dM<'=MWAn/o&mD/&<d_a'bP8+%mXn?F6?'+e:s2'
%FlYt=+bQSs!,o.<)bDRN@#uA(aaLnNi:6)D'#]q1AoAla:`>do`g.QFchDDEU#T_B>-Up9[i'CGo5RBU$h$%IAja"f&5Zgb4)C.F
%D3o?pl],*['s12hHn$O&`?BOZ-:@CLCmj*bLNcm;fu]Bom[?[L#'QaDX.^,;QIl9@FL!eZ<';PIY%prYPb@dg@0A$qDgQF<.s(!a
%XU@n`^IJUEL^%aVX^/_sq,k8NJBI,u(LXqYA?HP04Gs'ed8Y0-<"2G1CX1(Hf.ZsYesh.oY*mg\Z60_"`S*1jEs3P3F(&.8PfJf5
%%s`0MWjO(K13l:@!s4Mj$L"k=ibFgN$):fD#-e.igFZ.;6PU2]$<!Y!P_5-cho.2o*oI`A*6?c#&6eN@U*K!Ed*SlT5ja01WJ$M#
%f2OE-4&fh4Z9+MZhlqP]o3qHHV:aMgeE+>9Nb\OJ2O5I$!s*84_D3@HOF\5ciehr<lmq$!(q-ZpJMITs(T_$Q64?o"!o>*$WU;76
%GHo/KJ5F_,fpQ?n4TaN!TY4agC]a?JiVQGVQ7fj7(VHW>V>K>\,N!IKJbq2o04Kk?U]aV2.+O7$n8PF`4>+D8i@Ua6B:;aVEqMik
%!:6c)IlBl<=bY<dWNO69GF-%M!rA)HCd;ea$9aasCEEh<-Qj/YU"p"Eb7.JpG"G]Ll(5A'QpJNb.V\CmND^T#]iC1S[C`,0_3A+O
%Gi0bg@JZ<$pi,Puf@p;0O:?5oT7PlhEt1Z=..8,\X4([BQ\RTBNd[,'&MfD_+!q*;@<\Jp)'^U/&%Khce+6@NCtUrmpn6:MfWs;#
%F&-th8eC%d&aK9'PON2VM4\ZA<Zbt4Ya@lAF1t_?:\Pc\fOn"VE9m$9YD@^qJ,TQG^;'J&[d00=OuD=5n(O5.\baMdbB=ncM7IE7
%rWCntH?mFpa*,mk\nD8!cUt\X&c"7"2!Zm_Z3W6G[%/H\Z?Dt6+ef]0JhfIOdp4f4ld"BoZq=Pg5lH)AOj+cS\F++#^V..neU$a&
%lZ>(WfCcR:ruZad2rFQ4J,efmpL!melS$!Jmd@:.p:Uq"mP"V>legUuqMVQVlEC3TnaWZ0qtDcDlEC3dl`Yd;eJF;Hf,qa%br9!W
%rVO@>qd2@*]DKddrS?o`?QAt=j6n&gkC7mPmpF(3R35p%`aA__QX@Bfp:l(PeSkJ1SIS@DY@"aKrVXjBJ,eUhs*VQQNFVtb='ts_
%f>%-NYCHHEja3'cLYr(0$Qf0887DsI2Re_HJ%tj)n,N'&QN068EP-aes7C_`q2`;jig\h4?N#BF1%2jQp<.s`f.[,_UV?NcMl2&c
%J%e%]?ekVA5Q:YOYJ1#'ePH21(LR4)n]PkMcS(kr47-eFs(T:-<LDF:i5BsRWfdtJM$Z_A-"^k3AV578SB]'f(hpqr@Tk":22aU.
%G&5.8D:t=lM?EUeUR;C&2cjeBjT)$=jV$+#d6`Bu5]`7"dTeK[Y`^9#b7a#lHUbeXjBSI6_FQ"@X`6Quno(SG_jneJb_a=:/0PkT
%&D512#^7lmY)D@;>bH[fP4)^@htr/[YEbldHb&oBJ,?^)oC27)Vq't%ItB7!4>u/EkAsjYc.jXSo]0)%5X:e\L_"I6WJjZES0Xkt
%Pf0BMqV@[C8E-MLfA"N)gjt'/SOCn=QTrtC]*;m`-'++K.Jr5<R<HZ`&\-K@0-9.ZE8GD-40_:`SF%FE/DtDJ5M.4DB-[hm'rf<%
%dq+"7TVkBP9T]t5@>lBR;COV!H2o@K,`>V<2]aGsk`8k?E>YX3aP.DB]%!%^Dm]><]9dI/oC(oFo@U1Z[0spAG:2.lVW.Hb24P==
%Q.IIb2iU/p8Vb$,<]@P`m\je)lHKfV[oYXGXSJM++2QgO5/t\_8\$^25XjjtSd6rVI)'c)p#]S"nK(9VS^5;6M_CM$YCRB\E=N&%
%.M+4@fsWG7XJdLX)1dBS/XAiLEY1#bC6p`:5cVfWcjGnk3$]0$k-qmI^AkQ/0"kt]P@d.m]lH8?j;N^s_*pTD,)69K*%>f3l&Z:-
%>P%eDh%A29TC,>Gl[-)#TT@tm,I:HAha!q38?Q]jh2'B8,i%n-Q)f=C"O9U*5U;mtWUY;+MIkOcGSE\*kfJhUs1/p)Fs(Ga5?5Kd
%]3*_b/1TA>e<1@6h8Q3U9uI[bgS%N(VD>e<KT!u6"7[i)p>)Nd)T?TWUP2UbXI*.*E+HG9Bc0MWd5!hBF'i6!oGeQ)oT.?"7Yip,
%5N4%K/;r%QhCpEjTDVOfchH5To?g)PSV?P\4;r_5g5,H#0NB;uq;fP39%:)^R^5=[<Zi7iXV[I4jCJG+>??f4((t@uWB2%gBtQ7+
%m0l+D/m=8eG0)5.4N'Qi[%X(2.5GP+.74o5^]o,L>YsO+>/Z!MLWWPOq))EIPa"=]>N*8<%p+heM2`Z`_iD3cTl?q-(o-:XGPP_B
%<c+H#$QDMLI7Da#d;+V:AF][@.\jpa&ricm7!1Wt79ID:LQTV=,ZX-$W]oARZ-U[F^pBP%W,l.D!4aW]1l/)AaSDjjA;sN=DoF"q
%jA7J-16m6n]%8V"_oY4N,ZP8?K;_2=*#sb"kPN2P&?<(?7!pYC:pr(OLDrQ>>NOTAj463<XgY]u,@U1n6/r50"`^b4c:_C7ac3%(
%a?,AZ%e6#2!hsfI("esX#['nka`/3V"BiFBD3CLiOP?"=4Ofa3&4oC!cYf"C)F^YpS7HN6#R&&b)OQ"C03\o*m+l@f^KCTnAq5/m
%[i=T=-pbq;&D]3WNn7)%M2`d[GMXA^01M+2=aFHTr)54;YMSA@8>e;_05(n/3f.%`hSGKGI2OX^bt%Ru!>fb,#WIm:qu]:>37bI%
%2E7d)4Z;%C8?ddf'\s\#dk82e.Xg;$[PbF7gUEk^N>qqu>h)/+SK,\aFYh</OpMJlj\%-2_oi\Pf%dYIi.PG?L@Fc]5.RrId1(QB
%fYL4D>k#cO40RN&MZmcQVY_/dG2PFK3,Xj@5O8S'c-W97UJr`mJoCGEPoZ@aVLC+q0<jtUe<rDuTnDtM8!hn[\<o'!_ugnC&X'BK
%78=u>S6n=NLM`X)I>I!=0GE%MV]0]lf&A_WW\c/OnR&Q/k)+oG*#,*I-i2oD9\Nk<@kZ;W_b^&I`ltK-q0^CW4RKYL.f?i;RJk(V
%<u"jgNZ-:RB=(4Fe@NLr8[]rhW$HL:)/?RCcj]co+[oBO6QsEahpW$SK&N"iWJ=1T666EC6qSFO^(TX#PECeH'.tY<;?KX'@^cE5
%Ib1^JR?eSs$t;MY:h.tcFnL9WfGIL@mS1k79C+0arhjR]FJj%+!Mf7>h<HY,*(eU[A/2Xn'eMU+=sHfeFstjj`0>Rg%7tX9$$O+a
%rBt&5C#'sr&t=OlNRahl+n`(J>S`25)D?ubeQ?i1IK!a,QI<>LP(/a+07G%,8g=)oN*;Olc7nc[B@!7hL@4S_:YbUVIUWCN;R*\Y
%mh\4r,$8C)52]nGmd^H\Un'R;pQ)*f@0hql9,^Alm,.oHMB2?M`em@U4j_P&D8Z'Mpek%FVW%\0Rlq$/*K*3Ep(=VXNC,fB;Vtll
%.J$J.VPQh]R=@9!$UNf*%8?sG6l.i"1Zc>A]gRep5pM9fo_qjsO#Jod?2"Ja6E%t;O,WDFqo"4$0#=_:J6re]_`I!'D&DM<hm+BH
%%/H0blXr8;?9e`3P,;-c2OSIg/&%-/DQ;A*OA1=%J/#+ErZH"\;Y6'=P0b9D;T\KY+ug7Ho+73B/+ZKr-"l.A\5+QWO\Q-2/ts;E
%fLQ!\VX-[e7r?1]J>?#=#MYnYcX#9K5*NiV22)Ioo>YNL3A<?q1+`Y>&7T%#L4W,_q_\F]fkn@VE"pttIYBZa1botWHW49to\:X.
%NQ`\F4F,M6LC5pK29MCERn3h_;WgH'N&gssARpX>n_IeSi2r%pd^g[*lIpJp59bGQLh6pj[5`'3+]qCaXP\b4DNBWNa!"]IP#I5c
%!PAlb'j\]kGChq/(iTh#A%gK'<]Ohs`/F8U!I)F3`uZQk./R'-as.TT*utc(.`;Yt)_kWb>3-nrebo>g<A!P9+F"Ygb6?+JG[u2`
%H0kOsCl$La#(3IG$.%=t?SshMHJ&m@V@XhtFhoWCAmK=_CB@9<!N_(D:,&#R>?+n5,GW&oRkMBCNc]K?\#_KdN>S"]D0&4]I,$=.
%>oAS[CuELs^kj9s386\CaD1\5?9gD^mu;$:"g#m*=eZtK5A6Xe!OE'om$@">ai00)6;t$LQWNRD1Zd`&Wgh^c]*1@0!kB)P,j0&r
%?l+.0QVFFATU%'1TV6gs+NT_cACek7ik[1NA+]%LZ=F"*"qCu/9q>#DQ5s:k9ZhJ)d'TnVr=?@XL@hri>Ed7f,.P?-IOW(A(iULX
%7`2Yd3^#]c>iPVMm,\PiLGEO*Xbn2:UR$gol$>(!\Jb3`+Ktqn/\Va+=!SQgRF$./k/bG/h`TRg*`VmJ]G]t3CM1BW:=V<dD/#JH
%g@I*m+apGQGp$1R0;hD2L/"ID`;'o;nV^aA8;hDq5!*otP%K,kjEX5V2Ph?>a??@lp%)^D$mokC#\&<e;[?DsNl_AQ34#\Wq^&*j
%9F,#+,W$-C<Zoj9/YIMNq;p"^QiM]=3&(K;=1cM7qIp1=-h)S*aqO8_md:2_js5M"'(5!KI`;'sF.,56DWb`RYB6uYJ$-h5;h>]F
%ar:*%Id%g0V8uI7D1BX4:D\e`AC,ZcJCI2Z/'?_CYqCA,p5nSta.j,A_9.)sc`XRFSfjd!YZiWFIt33q/FhIN87i,JI5\8;dDD:+
%s7k.;B7BEZ_BeSZh'GXgAC2P`deJ![/I+kH^?7$(kRKQKc)i%1ZS2=$NA0AVo(!_$]!6''Fh?g0q5s<1jpq]'"p-_N#50To*uGH_
%q";lcjCZ2J/$c]#!SrQrroM-f7B2G1""Ju0^h@T0$ppWh5<_\5?I_HGq/>$%(98C<f<%X4ems#8dem%-BC=qaQs\H;P23Cte+70>
%,&OQ@bd'?IqD^gR%0m-KfppgT!S%ctqo,7'7NL6i;dQi5X.+ZeC9B"o[c^S`lXCgYo@6WRU8jc%oR,lA".`24j4Spf9H$#c,cgYo
%WY)Q8.^,XR0=S')6J3r&qpXB0SuFO_HdEWF_-DXH]6,iAb$9nJ;O^ekD_3#c32%CENTdamqA%>dd-\Xfa<CkSMOL>!%_7c]BakJd
%N.7lqRtI"'.Ye>p6ldK4P&3Vu?TOd6e?4K&0B).A8hdjS9n`EWerI']ftVL7@3!pp9f(=9,Jjj8.6"`dbhD\ac.,F@PqA5:&e>]G
%-&7"VLtm@WR3R(.!U$.2fBWQL3F5_X:6:c]F0_(!Nc&(R6IlSs-E6+EZ5dUQLNPSVkd`hdV$An]I^5GSRSYdnN,"G:\\p=&Zc#(q
%8h/maLmi3n.3dKmdFB%L)?t6(glSE'R9PhYZtuPTk?cD9\SIXjge"cM)/K$kD]L)mem15!![RWqLkOd?-:2^YB@m^[lJ-cgk0kbI
%IcnQC-Ltkt-]WX3l*cW1%BD@Qn1CeNPiP?b+mY+4g9g>IJ#)Ub8nm_P#*`\kU93dZ%b0mrqsCSg"WYi^U-QCe1;ZD^7l&0W`W*7S
%V)(@<_NO6k`SnPFd0pBcg3$Ut=/A:u]b7/sq%ic`d2'Q\T62rFp-<@,k0J@_2D%"T^DtXK2(me"Ns([]:i1.5Jc0#^nR-)@&Io:s
%l_YTX*3\K+c.s6/FYSO\NrSc:r&$:Ns7+]O$30_&e%FNW<qF[fqO\ZIbP.G+=:kY%!>#Vkj.l8!*iXpp*dV_a$am5J<mHJDRF^t`
%%dB5)/,IAbV(2!J1(cP)1NH!Lnr;7ARl8DrKjQbIS=pZV2@;j*$6"G?G!<J'mUU`f=AjISM4O,%`^;p@&JEaK)O;3FNc7\YkX?RN
%1enP6*mnmO-=\\/r*.]=X0fQpT@uJC4KI;7,nH%6d<@;[p!&fZLNcm^1s=;UF[A3D_WQeMJ/l-^2(t1!4`TX]A8Q\&[uQCK/PK5#
%qjLI:GIJYFin%:^hS+-]B;eDXS^c:3dC*pP2ZmlXpKf)nZtBgbjHcGc2jm\0401>oD"Wn#f>W:d*@*dsEPceO]!gY4;tI75p2rQm
%XPRMeHbT&cZ]r`!-I7I=+6Isflf\8caqQ9d>P%g@?4ta8I7VlW%uBr9F.:L-]gc?oZ/d8SltnJ-P5a(NW3Da9`*ma\9CD%i1J)3#
%#W:23,(Ifo@;.'ONmd#/2I!co*LB9*2^=["M_gsZf#9cXccsYTm,F7%dOI@>?$nMT+J!EAI,r7FT$DTZjIb'i.YrYj!Vb6GmHj'^
%kmrkAbdTNI=2RRhUd+fdoL%1Y2CZ'TGd^@Q1nU)!$9_WH]]\C3D8X*&>c+M`J5^l>A4O$tlh("3kI/QflD"*]Y$@Lf[/QRKI^r?^
%gueFRoAc@eGl?]qfDtfZX]0sb&e"R#&$bGcWhKM:/\l!LeOB(D?)bntNoP._;I=>4V0]RLYqrQ:ls:Z(<n$&Ek>Ru,/siT]k-_Eu
%SFX#e?!R>KXh)$io:ZuHGrk'[Z[ZFOl0#HT0ouaJLHgEBjIOgen#K(;2%i%bk2%C"0XndV3(r;9Koc/gB%7k+ME!G$!2K0k_WFC?
%+siVR"<XEm;G7On6MYn.Hk*.7Bhp?77jV(pnliG-Y"t<N)-O'0,4E5V!@[:%HJ%8a_++,kp#X6KGP6@S^O-UW+Q]3]:JSK68+]]C
%;8k=kG6lSWT%/jr,XA2dWL!W9LU58(pK0MhlPnEP))Y:UNRp=P,ft$tN+"VAS<(=Inl]7d/[T)#'S#.4^C/rpY".bP/5"=F^@MAe
%o-[+DJ,YjnKdh.-C]LM"oGAsF@)NtJ1*%t9I<:94P4SV2V#T+Yl_GMO4C*%WKgB>_PhV@OX!mM0=c:NfolE[5'&(@k*^O3^@f6(R
%'I[mP]!%iUI(pshTc`ao$uM#&/6L^>(u,:ih1PB?l^Ot[5I*J'>TB[C;5mW3oCP*"lSmQ1l%,"^>]7:NIu^*lW^]H7HesJl4LQdY
%J;lUcUcdo^SX]K@\TW<EPGOKU*#hM<'"g):R!q"+a&eFI.#1J?Z0XKVkOPbR4S!G&bOf+@kF6s9el/,P9L^2\2q09&1>P23jY.e?
%;LTVblKY0;@Ej-s^Q`!`XVBRR=7sE@0Of<Ij\g%iG2dRA_Ag=tWeJS=*SBY"<<Fo=gE%u:cF0;/A7QQtBM7PSP,!4>Y!P(i:4Y:c
%__6e+3"Q[IoT1=rC=ot0oEW"(<QX?@0cqU.VpoULD=c.."-Q9F&cF$%!N.^ZW@k5mB^g?$eP$@RH2[@Glb,NLK@,0uo;b*VY>fGL
%]DqS5k1$/\g7foTft+5;"=uKI<hk9mq/@>I2-436_=6&bA(*96N-DZG`IY\/"@=OqSa/%J)4$A`gqa/m+HeH!<1$.;""bHL$_O9#
%/Uc(c]tB8ID,mTn[j!m.DXQf1C=UNpMo.Y7\T_JN9OCVcZFQU.:E_L?S*sGL_=(jIl@LiC?^oLc3WBWnRBJ0s\6L0?F2srR'E&YN
%U7-;W=Io>.9hDJ4K2aKN.;Uci>4gZp'"C@f%S5O!CD"j0<PB@%Pgq>??$4NH^Glpl2K+.Fg3L'*e5r\$/DI$3M'Q`D[<4LHl'<g:
%[RoJ()4[3(/@,f45`/1nN&K859B]2NIe0Ym0nRHK<BW\JKW5N)Hcgk!f]1T1@q?gE`3JIu\_t_h;Ror[;C!87LL*'cMa4[brcsER
%-ZZ\^0WpmrFSA383W8*OYJ4/1mt[3?Url_Kk//8F5-@PDc)V+>+`iTejAF%KUr$#VKQS"_b3ta+k#ae,`^"ke7n6(j[ZakSb^L)P
%[;t-iBq/=!Pl-4:Tf(+@S?@;k"Q^Ou_Z&anWhQefpKZ\]=#np[2IGd+2C/rLlWrOiPD!n9ObU#o3Y0X]+Q?-@D%tT7,e^Ykg>RKQ
%*UhZH9A6e1k-igh5hjmsY+h2cL=G!P-4_Q!hVZ:KWAR;a!aqX)2363;MbOX'abVJ,dEAD(N31&!>"7#F>mgb\Xq4M#f2gf'(n+a1
%ei0QXC_q"\'*]P^7kIjWQccTPMG]Us&hCFM"!MqgXCdGH[>HK/0;nJV40;@J7hWC7@2p-\kKupZ@r(=l)1q`"^fd!mX486Jh<`l<
%[/P?](nP\?WF\M<9gGpW>^kY"k!f_ioh.<RA`:OF8rQ8@GmU%d3Clb>;?*Gt-mu-lCgfau$$k8^f9PI/<9<Jq<D#;W<dok22PnU%
%-cM?Vn#XTMnUSY"V7U:bF'u,-OcOuDOamDBJVl:3_fRc%iN3j0jghlKhiG&ZrcKun:U_t6;p>S(]OFKF(ZV(+oojl7==1:$h?%7T
%4&etM+-I@"!"Q`6KN"SPIt+n:p&`5*5M^.rYPi4m:;WF*8.Mhn!sr'2/a)4gpluh?NO$)H6)LI/B,bYaN=q88A]0.UdiMgDlm<63
%4,7'<K]X`)6j\s^'-([[;NFnDO_(W[fL(#X>q'ih#Kbl0'9K*4Co\>b5O[]H)[g67j6*blAX/Q!`(?AB2L1j)Nn?c;Q<V]7M2eeL
%m.>JQI6#F]AD#a?<Vho?15Uh#+f@l-k.O(h5Jp>VisFBL*"@J'g&oD`RRX\3C^Z``OqrQ[Kq081,S3jXd#2DP+@4iY(u8m6m<fWT
%e=l!'YL!p+PYrA[Y(_-ph.l;l%bUqDj>]h*Rhoh3$"EA`jO\jfi\8G<#MnFO?%s_u]rSTBbL'3)a]q(*-TAm\!Sprmp@\=$FT6Fh
%qtJn-M^9of5ej8679R%?^LlD$;kgX(]1EaD3J['6D4<D)B%paL*?QX@oJ/bV^br+R4T5?kF=9bb"b`4YI@0F:P%.=,;cG^pbB$#N
%e7&ZU/Rj+#)nX&W7pV#kLWLH+dTPOuUYYp22^o7oS6!E9-Ku\_0P\5ii1JfglKK&%d#6;*,8=kRO19YPHE/^MYMH//?d]K1`G;[#
%dLABg>,d-[hF*`KiJ=M`\(gsq>9ilF/h:B&?*O_Y@]R.'+Z*:@=Fs'ugF'L]$RM(7<-2uc2o]7D[LpAh6cE*hcU0r`WXN&o94+Yf
%*@A!AAX5"q"L;42n%<md2qprt3+/79W4dZJ:Mt\3J:5T@bMO+Zr@+):=7>_UfHN[R"Ruj<>Hc*jI"480r)Q7G(o.PO$Tg36H-#&b
%2s3LF%M]]HHOB3Pjasgdk4<$,^?HsAL-1sPe$/)%O"#K6>Du3c;1khiZ>MhlTDB+<b1RH43387a\o2Ur[kBcg=&q[$EDD0p#C3D/
%P765X'f2Us.iR;hJAl+AeB%N;qC]Xm\%0lR0`Uf]!F&Nn4[HV?`hd_5D-G!!6)Z=<KXOTcm2d>$*+6#LC;0-R_4o_g-^3E&Ca5E%
%3o"P8c&"FhL[D3J$0M^s!=tQKatS^*,6LhHf$BgZ%_VIM?EqrCC**4NOT)<Zdo.NbBUc>2Zq7j^5G(#]3L8+[&ALT/OI77na8Sn0
%8m/0N:e!Z]!lb"Krj[dMW]VX4?S\F'bjAQ>XF"VUcl1Cl,G[:UW>;Bid6O/,\WMiJ_DcS3]K@LoBTl/jg:A%.g:!=?iXZ,EN',Ep
%^IGPFNAoSj=bgm<`=Yp)a:2,nDuRW!^#H,.&YCEEReW?4IZ7j33G8s4S`0;GL2[8'7l5*(VgDM1FtP,@l/?SRC69cR,:7;0K8-cn
%9/YKGe8n6BHnMD^>#i<!!V[X7-;(Y#?Im(Uk"]bg"]aH3;Ge,BPS7r7mmFk49)#\,aFcs)WbqhDo6*l7"T[*tMb2&W=FNh@\hJ_N
%LN(KfYE^'/Ie.=GCSjfG;VH.DEL]FYFfdFC`75f"k4,h2\&,&qA=[pSc?iZTJs&(/"e%=Q!r0u)>8Bph''Pco1Kir%\LYa\#C;8.
%kmO)$o\HMBI/c4L6Bk6WAd&V#bfcJ7.uRq487gk,!*)WR01)_gj6t,nA$?C&8!P*l=L5<]*(f`qqgNVKr&iu0)>r.VfoG,g6&/_p
%SOo25<e<*Xoae&sIf6"m&)XB[r&g,m?$[c3]'8JFHMSCULmurBT"U@m4lsR(P=3U\QT0a>$ej(M>gP;<5RT0L65K)cK+1Rdjnmsu
%/Mth6>Q9)aW4dE.Ore\p:3odl*43=ae>DNSQlS3K1JO.ObX)4'g@@^uA60-F"N4.MIRZ>F/J0u,)Q&4=Hr99JKO**:!=@Hj%NPO&
%>e3;f:Ni76C4SW\.(mZA>.&;9cCHqlNmkBKk#gJ$G&T4.D<U+9?ei0;)!BM$fc(=iZMK$TdQX],C'B$uI?MW^"oWJhI(Hk%l7=Fa
%Ofr?t.sm8>?_&CdI:JBs/*1MC'%.<0+,*3Zj^4bdDk,j-+l?V/6;KOATuXrnPU-9G0Y#52_h-A`@0b@4*cIWp?1E4mHb-nVkqj9e
%(<maKeob9iqBV-JfQ2*<+.C,\9K*#9QBT7A&/1O+(;kc%@=Q!!"@,C)M$qS]!0R3l@)-i)b$e$3;BG'B3kCPc?+)h^gJ;[hq?_j7
%SfPBq8G0qNcY`"5/n^]DpD=P[Vj&B`$7tA@YI8Ms;)`ebo\ql,Vn@KP:CLK&Cq.5KpePp@O9e(6!;^JTGu\b;qp0g!,l[P.$IhG$
%6cGr>c'0n]E^O"pHFU$_"eQA,m*t)!C9gUZZQo2U6o^h-U8aYnSt@lq46<e)T#SVBg6X&HI$:H10-94s_X"-!`!/n5Ykt9uZb,)c
%;0Y7ZjdXm.Us7Xi\T2p50PJTXi+>E>N9erNk%Y%(RIX)<7#T!7E3KZb:MhH;T]CTukD'DK24gH1g_L]5*1k\c@_6l1b,)srH1bit
%LjP3[4<JitSF[W%T)96@1ka6;/JUQ..2B^KN'[',]6l>HfEf/l8a%NXBTNg%(3fnaQ"&*F1tS\o&L/?fKGn#j`e%%6'2A>QoPiN9
%&Z]4XH1%Hj1L@H-`?1\4fR:(0iT2Lcs-IZpq;SI>+[Xklc&3gmO)mMFeWYJlK*F$nGZ/9V6?q_Se0//3b:DH(Spq4cnKKq,9$-.=
%5gDSWDp4MC1aT,<QX*;<b>"DVkC"CcTq7ht=kSq'k@Zodq9o94\Q-1s\5&Q5>G_%O91PJ$ID3nrTr3Z+TCBfeIq#/V4lTO.)D=V(
%k*Yi%/2=?bjbp.0ZB%3P@?C@YWAtX?GL@Vg!bu!tB8_5`[M$-_hY.RM">"[$]mXWO=K5SuqUqQPl!Reeo%Y!^pWlX['G6eB6K_:=
%MHL`s?Z#f<ksd<94[%02.Bf?A',rj*e6W/^]GNP/3K@1XUHe^#k1.(kZ2]S.q3/g5S_tZQ66-6S5=qsLks]ZO<<;*Tr?gZ+NC>.=
%4T;.6d&G:N<3`dMZU8r:YfD!3b)<^<\po0H?Fu9A;sl7_?!c;\jtE9Do5rpdBhmj'Idg-Obk+u$0OF0ZL8>nTd[5TanbqH-T_@r'
%ogaHdA#>3MNWS5N)!U:1o=f1S:lJ?!koA#;`O2T+_,WS68,`!Dpp%tp?(CB5[P$rST:=TjRYqT'53(qdQe-[EhTg=j54mhX:T(jS
%n5!uHlu*O,+?W<dn359fH0m5f"K.8sq`/0eJ0\)6@V=:!ji+,6bu!c/WA^Ys&K!0I@tXLLEjf#rWV6:9a$!GI/l$]>(0?!1<a_]2
%]9PGF/l*p:R#?!_X04F^]U`s4I-ANOSPFJ/m%<(;C&9FUpm4WJQaZ3M8iFG-P:oDMr9T77s7AejXHBd8nN'hgW<Rn7U)DAX4d[L9
%.g!*F.#q&8)Z`dGBG(l\QV^o$4L.R6qtV,UD/jRqr6u.\Vs)a11K&_U/F0aI]pelZdp8Q+4?q*TK\+QKl&D)&MTan8&X.rPruYsr
%]QTVpeDQ8VPs9mEdq+;+a+JDdb4O._oB^kT*F(3XkA@QZqC]2;bDeV<4BVqQ47m'oE,j%D2I5-'5<!db9eK4eegEXgrA"n&EMF>*
%Sfd0Db,]1T`.lOl_tA=;3VtQB:otQ.ERJL'hW:#Z6Kb]SjG2!8_ld?S;*`n'qm''A_kh\$Z'jJD.!/pcOPf*Xh+ub\mBComr?1JC
%p0\N?YYjdaRb5&_[k@LO$D\(a*<n)3,"e?70&/`Ulu/Qo*@>%:)`U#CJ>rF[P$Dkeh0.*GO3d<P6P:RhR['KINBWFSBMsJp^=p%T
%`1h^fPMushi5NVgB-O0,TAh_@+GY$P^klHIP`'6$VAhIt'ts$Yf3[?F;[K+Llt2ULjrV=B;im\KL$=e'!*R*[Im/s86HB56gM/d?
%_(%%p2OZeE/nEX20t.YtS>t9G_M<s.5MgkWkSa._,3'tH115A)E?Fb7QnS7@NL=T:0`Y&r"f%!JZFV:"%J)J$0%kZ<H=Wp;c97C]
%TVG6QZ%Xf!C!`m0@r&OUe$hBUAt-]kl`*f;"i3/LQ@T!M3J[E`DZgY)NSs+4LM#WR^[sNM&1<*)28csS>0+Lj9j+qc[--XN(1?Q<
%;MkfUR=cjt%8l'._SMNfaaFYqqM4/2Cs-7<_59l#=$K4H3c'Mur"pPNbH]\-P5,nfS`;8g,5%\*`P'S6+VCo)W'jpk3!C`bis!u(
%ZFFU/0Y1Ob@fbbHZ=YOL=FLEI\F#')LZD'a[Iu\1&>WsoOls$O$p#KpOBs!Th#X+e+(Vj+ke/*GqD;HV#mgq\IY;_b9K"-$_7Gk?
%AglUh'0o(35h8X3#eV?m'`)"O#GSc+4ecM?E+-HQXR:`LVMmY\iE7ZK9SgjGrjccZ_jer7Uarl.HYa998?9n^?+-N*L7g43mr"1P
%2+u^o^_2+:Vg`i:!'Iu&P,<)C/c2$FT76\@W6^Qo&DUb4EVpLn@>!K"mh_tBa6,sNIV<5rffV>B=DU]ndbI_VC.#V?s(623DhaaJ
%1PVl'>C_&*!`9jhpp-"j=7aO+6K=op8jXo)=fV`6;IM.)@S6/U6ieb*l]R&TX^m2$2'6a$r-LX>.+L.eo!a+A+#/1%A>p&OpG$:g
%D\TMMoBg8gdG!PT0Gl00ljP>B)=PDWefqo>AV'\YLZZsJ)Il?a0brHsA)8hGEO6L94Dfu02ZJG=1sk;FZKKpq8!cl:A.XLPUteHo
%"HaMJl14g69F1TD1UMN.#st)<(8n^8[]ueqZ',e2L>61o^$1'[L-&2dS$iTm;F73"2db*Q\si!boQ.NnFX0&<,f&m?r%/Tql*+KG
%W2u@NQO`aYrL/Rj2iA-_bn;o0@qZCulfQ=(dn?!+WFLSMJO<nr&pGRJ*rS+-[DA84Fa9Se=mZb-*<M$X&e11BQ:)1k+aSVR71"B:
%Hc7]'H(TdOQo^`*IWHnp?W.J3.-GTEH<IP7]YN5G"$mC'.Y'T"99FH0.OBB@S*I!D47.Lh-B6Zd#'(!fh&+3$DNEh%[laWa9V#a5
%Zh(hXAH#\;M&FlRKYs=G-D=>F4j2a0M?dR>JP2-8'i9e+Lm!#o9<`*"OP21IMIJd91:"L<&CPU=Wf'nY>66*m2hf_DmuhK!)@D4'
%SaPanI6LoTdXSJQj-YCs7*>oJ/d<3UPG/f90!?!ZF-Z`=kC6/pb#%>c"V85PM_V*Qljd2,d[N?KB3UE,H^(a7r"^C5ZudE#qH&:!
%Y_.JBpIcYrg2/H![h+I6J&q<+PPK$t_6np(=)50Lh:U`m@pik9s+^!G@?j"Re8ogYMMEH:UhDf]HDtPLgAKHiFgE_2II4"jo/0_n
%E0XssRsPTfmK%;Erl;LZJN[he&C;Y_5$u3>1MlHqk%Tj#PugcNpmc'h7lti?gnuGO1/OL!kl7AW!k18*Z94PbJHL;?>ScbI*'.+#
%3Ao&FgQ@R3!W(:qA.JLnoD(#-eqNqe\[@"GR[:WGSYT<LfY=raC7;oN]Yi9InK@.F2kKeCdo,rAp7*:Zr)(nIDmecpF8@\RkNA"2
%Os5-;b:84).t08m>B?B$G4X=Xs-G`Vk5P((q$S55:]K>=gc-<lij9nE4j<g<+l@V:D3ug.:XK5o>HQo+gH(8pe[lK]J,ZK5Zh^>K
%66QZ@LhgE\`1rK\-0E(o+-)'>D9S*Ja&=T)L"\?se1OkKj_er\74@HJQ\@J_&*IA$AAY?VQ_ZBKo@,q!Kkdl9SGD<aFEcbb5C\0%
%0R$MQ+F.aAOOCB@Sco6Z4*/YP#aSUl-&5da*:lbms(.)o3FP[T`$F1_V%YY5cAr9n-07@h<0WSgkSCPH]iFBibr0;FM5Fg)X9W%"
%dLf@LcK^2/=MbYVJqEU@psKJ@pS)>Bk:>U3(FROKnA`Tj>9Zt?.QZTY,sNen+<Ysq_;G-%75?E@Id<Ilh]f"f6p(aEdS]UV`$<^`
%gUo!T[b7orr.oskg`$f*3e+>X.%=:(cghFCfS;9fh8=>"a;q!ghmi+KoU%Nqn`A"Yk/V<1dO*e0,;P!27rR-o4>VZ,l:Q]fCeij\
%(r;`.B^3'H!r_5P-#N'aYVsPN5qI>*J^Qf.ej`4pa5V8W7D*)IS1l<$om?)$k-BhH];17DIaP$bf46Q0b<lg$H?ZKEjBq'I2>9Gl
%!g9hcJ0M+fk8n/^P&)o>9J]KRI1lI^Z[1c2"\II(eY\tV].^bDq,#_t8rBD*>ju*u2bAaO2/,bC1bV^[o7>t72f1X,B5b&RbL5Z>
%GX-=(!HHX'1J@;/#ft=t\TY$,R75#7$V>l">RLlWqXoD5Z`f61QmNETY**O0:X#2%1TZL<esKsQ,u:YLR>aS^7nDK8CEE!7iR\NQ
%#3:S'C0pgc[+O"$F&\(.ogmc7=3)8'T!CF_pSP?$Y'n$U/Q<S>"O7h+PQ?)@@gXLHWAkjApJ#7o3j#&#UH;Wh_\#22:fj1mf$H?&
%aZ/1q:gCT:..)OOqE`,<;qS7ejpAQL@&6!B*^G`pa(V0o:<@nZX&:G[[7Jp!^CP-87Z4N0a0MZCe68quTMUcpUad1TjcerXe'@h2
%/>e3Zp,4IO4JZ)OKA@t4"3u^@Wkr]\Q-)1oW?9CU%$Wf5bE`j\k5"j+>J'PVBaW+DN,*jVK?]TcH&3;cM3L9`C>pq_43`V:jLtER
%3G`V*0PR*@VgL8o@6QK4%h7T9`gkZn>m%g0NbjS>FZF\qQu:qrj'.;5rAmp3i.M=QPhCYfY(ehB!PR&K5,EkP_<d`np[t7Zo9`F"
%5tSnE'WJW<TJY4>@GO/?'<cUbS08LQo2*CE\pI"lLrBUtcps+XA#E?_G>LIWf+csPWVaokd:0OehcVnQ\"N4$=YssTNYt84k5)>>
%JVR^-h2)argUqSSQ#oVQn(]%3i'UXo?8N>FG;jmCBlBJu"j+57"$5Otk<NcHaJ?A"8b3p\c#^C09ma,geGMKV/?u1!c*tfCf"gXE
%Nr7H=A.<$B2*?gg]H/;>r+@AsG?k@[$"m(,ghiWLT"do3)650bhFghJa]hl]!;$.\dR"/_Gji^>r#pY`CUCBNm`-@)&BZ<T2q0I9
%_3eSG(QK>cefT@pG3>pn6;HD\_<EhQA*H6(2u>s+M0(T_TkKmr;Xk)KO[d>=ATDg\1Q&-3bdWj'YhG0E3Jj\4bk\Vp-J_hJ2R/KW
%Z7"):k9e8^Umt;&Z3=3I)9EP>p$bld[87[Pp&44c`<>J/V?kQ.o:EVZ4gR#8^H1D+a@*N`2`s?]ZZbU2OK0[-V6R\4`f+fDBQ/%3
%6a+5C/jWp5Shj6'OY&pNQE<cIhI'@?,'=9"e#><`5-JK.olEBj8qE-R;]6+qT[/?k?+;3I=p\P"it@[R@i^s!X3YBlCQjoS>FCHq
%KY]?p:tRecjbu+rje+hU4dJ4`UX%3%.uM<.kXn\hNZhT$28UmuG#1a[l>e]UW3X455Uc:@YH<U9ZtPcEM&+Ja?$"/PR`<lY'Ud@G
%PV)cbXfl/6UpulhPSEedWa&@Yc8t(1IdljHIZRq(#"d,+ij>E7`[maYN$d!U.;9A<AbMY%KaX'lL7]uI757)^]R;`M5CrE-Ca/]H
%VDDP.ZA1ZmO$(8IFB.WtRjf%Ic^S'&B/JodD@O+dEa#>gISY=ZS=A#t\$0DX3&4o)U\+'ON#-?sidQ`bR69>WT'+'A.E*WE*6o?b
%2<j+ugUoN:oJdY"]RKEI$odh]HsX(9@rD/l$*H5`]TRW\?0Q!ahg1,68mp7%UMt%]I>je)1cHeX1k*>YKHe0sPq3/+RA?oB0.Y4U
%mGcL'Uq,K4EQX3J\@Mq)C.9^X(%-uYP,4KYdDaX3D%Em0pdQnH4[%02.BfBB',sP^pNb$IkGOAngjPsDWs7#HW,M]H##[\t2]8>e
%GMSGB([$^O4L]?(8#/bXnps5f't*]?^&$\:SW^51jqMRLH2j0i\->K[qMBeTO:nf'a6.PG$AtR_o8>aXqji_P)3H?!89oKcB*"9k
%i2=afF"YD,NO3>"4]IndmCfX&->\N:!Giu=$)^+ohb3J\BFeb!Xu2BiY+;0rECf97^e3Q88X;LY&61Wb\V)N4$M+d@Z+aFh6lCa<
%#M1@].N/Xg2V?6,e))X1Zq&6POk8!(14]^-$5YS7]$?bk78sc0OUA->V_O@>AX6Ri\Q&Igc7[-$8uLaQ^Z<<"&,b9NH)#IBn)^[>
%bs2,n;#*SYUA&NB>BbW;2PeG"HPeci[C+7XK$*ARD9erm6>+(]bY),H9`%8!*]&6c0!dX16N@uH\`:&r,;\L6!Q8MOnS,2OmW4s0
%!Q\"p,HrcIUbJ)"i\.51\a_%&n^In=(@.KHFA($Q,Su"[N=#e=a(^`D&/14kS6^%D=9q>0=g$&Y@`_#Rl-e<MO$lC>IZ'![A<e?%
%M?K%Z+2I2[ofM:72k2&ao9Kf6RCrej90lG;N=K9i;AS,Un;)tOF`g*>[:91g75PIjB0V($gP\i0%Pr:;>LX:1Bm?>pqj82&\eF>H
%?)_,TVN.](R;3-h_G60LZ3r8Wn:"O6C0ai@&i^orHJdpon'11Y6[$Z_oFI$9^N)bK2Q49m.\--SW'ih"+k@`s@Q>`:G$mh/g@f:=
%80qBZL.SNT77nlhk+OZ.igPa%S*%>kZ5OuVMK)\h@or/3E8a2Zg@-.[QC8khNV9K4^\8K""+1/:qUTl3(onh+#qj?a,:-6CQ3T\h
%qWpT:Zfn9u4luscU9+VS;-@%u1[CKd1&*lnK9+a'flZZBk"k-@ET=&@pp%moaPs!EV:Yt0#<4WGbr2&R%/%D[g66f[gWWf!&1ZcR
%q)6)Ao3h?2D#RmPL/'@%@>dQG)<Nl\qdCT5"YAj>+@-"G1hG-6Q5O6piFL^Pnl%ORWi<B3iJ)u%ktZikT(BLL=&l8oBr=E+E-%^$
%kEDH@:0/aJGA^EqQm(nnA8*Zn,ATuDY'Oj355TGOk<gnoDOp=K'E;U:+<-3^q1IB?rd^Op&@kjF&YC:6>-WeFcR-I-0bn7j66Kmf
%2t!OYc,T*H+%sGE_@&(Vb=1jE`[a`[CrtIsj;C`U3s/RQ(+?Vc[;jkf_0M)@hPldNNt]h63(FjfB@dChpWQc<H1X+leVj?:P,Pgn
%!4k6Y"\Wm"a;POmk4>T(rE3;m-42H,#B6rM.M/X,e59.J\@PC'0B0B<gI"*l!0);E-shNXX3OZ2;alB-/D-rd+b1b*e,AOH>]uT)
%hktmiCm-UhD\X\L%bJEbWWGIX"a2?qmm?Zkn5mfmI"jZ3P!mSL_%,M0G8ZE&cS<:dIP0qgFcd[I+X8&F>l:.7"luor*aCljdXFq-
%7VnV9NX6il,VHNO7MjWa%+p""cHGsplLf`7<.baijO+k,i_4?D"Ku,hHb0k3.P&<!b>FIJRHhn@'ONC]2rAZa+)1FI.E-W<[4hEQ
%Z5Kl+HWI'\!*N_djZOA'KQ@B+-bndaQAgCXF!--#bVlsP,4F>F<UOQbm@+\U+,VG5aA^5k.KO[]:[M<fVU94ZWDRh+*4#;lZTAR(
%(94hgFtI):.Sc(&A$$*+nZC'BF54#pDA5VBfWb&5iTNc,6=1G"NQNq2"O$Aj-MZ0-S,;Q2Bb^Vo5js-FDmG:BPkNT"7qUP')ZD5_
%Gbk0l"Z.&'2kKVh$g+X4NguU+[f^aE5r=:%H7$kX,A?93[8FXIi:=lQlDfD8qgPJ3UAD_H_>)ie#:YfQS&I)5G'q1V4[HHli>`D[
%N+1toij=B;1RN-C:ZjQl955;,UUdDA(RlrN_bfXa<2I]ta@%Co-tNfSjoB(F7U_IBekF\S<qn;,4S/R2^<<r-0N8*ETqIW3Vo:_D
%63;eRW?-NSe\3t=-&XaXro46EYn(R\0t[AGE[+LrYs$$Q<QLQQ!<Kof.\=j<f_OY](j?\e74q5L]UEX31Bd=gQK1ZfG?:uIj:.5%
%%MbX\-6gMO8!KWm>+uP\N_UF.e10R,qA&ggZ,gMI\/DQ3iqD5^aMdD@<Nksbht$8U]mdmq/2dY>8c%h$A(*@*C?b1ebPK&[.4*ZV
%Rju^eQe2LiIt3Eae,+hO5P5$Lf2Xodis5)2k,XnUT-1T2>B9!?A5<uaKQW;(H*0Q'V=;?c87A(L.&LB%p_nr:dXu)Ea4WK]HW5%T
%eGqIAeRH*g>d]?<O3?%"Qu,*ch\6(Z$^1i2Ku0dWm%dh)aiJJ1VI71Pd$1&j4$JmP<'EVnNP$k\WI%K>:@W$)0,'5r!kl\ka[KIc
%e@QY1qhYd(@ah;8lkXRQ)R"srr38/X%1g"YQ\8\Ye`R%?2M2lsdKB%FY*kcD)$&;+'XtN*F(n<U$PbC6c"LI:@mQlp(<r`4kb7ma
%Y7Ug$+gTSJoc@!m&>$$b@k^8DME&LJa%d6uJa8?sKPf+f:'FVB>]j2"Qu"F3=E@j=5`HjN*:Oa\[*U)!fda4kSkZL]M0OM<bO_Y1
%`.lhAH;X7P6HB'<GJt*'d&$[U!V"j@09q.80-Lr!`sf!n*$aB=6UH$TehU?#P]BX["_o)pqKnp`<:"DBl0`mi*TT"u[`cmHnd(t9
%)NkuNf_lk'H>9bF-,e/2c<)h<=\H3!JP`ga!R:a)+s3Ne5TSWi7"W>jarV'h08M48#j%n\Q1+!H5I"'SA5M.b!nud;<_0KV,LuhZ
%?+q.P<Hunue9GGX@egIh#Y0m4Dn(sO0DdUY%Y`Dk8rO(P_RPO04&#@V+uhR16cEF+j/`$[;C!68e>'T%i8MWr:9DeQP,-;?`eB;R
%E9N\R'jVSENjo[BB/d7IrCYC)R7+LJp$hB"9IZ1m(iMP)-T7]BjDa!cZa;#.N#tVEp-!Wq,4Ztcs%2O>rt.VuFOuW-@0FIVH7&WV
%&4AqATb@f59c=%?N-`(@jpSl77YH$b#:*2aI6[k<dX]Y'$udVLm]uctAuLGh,3$H3Tm@8nPChqHP;cNm(W]V$1Ni"lC7'nh\<EXd
%+WQ@s,aa`2l0S3JIW?[3DtsheW(GpL^XiSSO,ERILQ8RjqiRb'__;/?ra*^lTA;2qI&t9`:(D9-hudgqSB)+WgK\2YN/Q"9LIn<m
%6U-i.,OE,"W1[IMiOdhTqrZ%P((:<14:F[tkQ_*Q=7KJlQ*&i(Nl4;nQXg,!BO(H>VqJ30YpTl[G_sCk,%:4&,JuT`P1#Zs[gB2$
%lBsiHTedeT%@-3:Ub_UL;klSQ-Af53r?E[idagWol/a!NEnIbKfaiXMmFB/D]buSq&WSW]!+h5nX^b:A_e-\hKtr,(eeKt!8.OQn
%NFh`G]/IX4[O]CI)#+PC%SnkYWnNf*PmoJeM0KajO'huU)jb[!&NWMp0!<9s*'uG^jkTC!-po]oRd\d:I<'rf;>u!e\eCLPNt](;
%HC$8h:,^2eQS`Y\i!(SiXJ2aA#DBC58moYlKUd%N12(a$5o.,"W4"(a,IQ?c6#gP8Z%0l&"Yo^c6^8%=&7sEYWHBG*ot,#b=ErLh
%ofA:L\2U^OS#e@a!Li'd*:9a#,upMlLiK#^Jq"cGQ/(i2*po.14?:)lj[!Uf]i)04:Ki&7.k8nI/'mu^dia,7pjnkAP#*QB.0._j
%.=RW+r`fjso9$"^<.O/r[5]'TP/6eKWBlY"M!'aX;IJOJIEQG%=:F+jZH/\/R%4<:=-f)$c7UDL<!j,/YNMo0Z38c<?m^^GjPk0]
%<j8*R<\^:WJVY/Y&oiY452.GCIM2O12eBI^8bjHFpukJfhpSUPc0&_dJ*!AQ[KD>6c0UrGN'U0O"<j^)K-flJ;&l:q9DGuMed9]N
%EIl4R#C6gO!muiC[$oqg6*/ptNYBi9eC.!D;n:RK]'VIN2P'_>8J7`f.=Ma/KG(T+1Is-\+btI^j%cm<8s'3j@Rq_u=&G=;n#d_t
%',s%`CV:/[0m@g6,IoYGk:U*m4QE?BeFnM"%V3$MlWeHkBLp#PaIjekj>Ii/Es/2Q$K*X1noPoUk[1W(Zt,%_!S\9]5)jA1;=mLL
%+U)gAf;SL4Z+IPOrG4EEN[C#.!J61e+OM%sETe'eMF8.*JS>AE^-SjPj^>E7='!=lZN0GcLCqMmGLoXbM%(Tc*p!jf1Mmh:=PCeE
%"23kMT+<'kR_TA^8HT7W/Auq7fhe\oEgu9/P.dmBK^*Hb&,gss'"bMSp.eiq/'R"HW/_=l5#q"O'm[0?fV>UU2mioiQfPogLO;uU
%.kO'0j#V_j/8Bo-rf2f`>&7l7,DZ&KLE-h;m&?[%;m#i3fLn$3]R%@hC^<m095iMa!KU$[CuPCm?pF+jeJC3XB)9CuBH/TracEk<
%^ti/9XM%fEjiLn1mHUBX,/s*YDu9k\4rtP@joK:2KXY[sAUQC$GU%^2[)#UeggNLs[MoMNBK[^,)V/Lo[+[DG11?T7HaM$t%NRK]
%2+&9hY#@<[,#<IMlh5E,WCrX+d*X/7&;B?H>_:SpM/#SQ@^f^(SCUdIJ_i>TQREm'C*?<=O17>*\'MrgYZ[kCenHDI(euZ2#.c!f
%QGZVGnJ%GF8j^=oXLBPp0bH[/h]?)HYbo5Nmq.%7I)hQAE^SG.YICEk"/bSa5i(3n1==c5%UBi6aQ:XT1]Pj>ePHl$in4MG*C6(g
%^1SRNZTTlO"YfbccL,/bRh"i#$(9VY#,=`P,@H3'UV*`=(\g=[-q#pJ4DD;k"'3@75^2eHH3=kU^#.q:iC!JXJlN)FOr8^j:G'G=
%V5U[iUI>n(L7n:[IG,Eh[uTZ`1hqedT/)7RGfoi'fiOo+Y)-Dc+`%[2T#Dr2LG5?*S/o`sN94VYl7G&i[VCeu*o$\7TZ9EM5V^T5
%'-0=gGel%GU\nf:W:^:N>QOP@jA,&s>#N!?7-u65M"pGi<g*Zd_1_RXA[buuTQ:$bB_2a!.POJp?4>?6%@mGF3n3:r&Od7Yr9b<g
%d<^KOgT.-[AZTZ<L+*@)lS0SX15ECWAYG#%VGGXkr'aGK<71pLMn.]CNA8N(POZe0ILaI5G,eaJ6p4#\9hlE"LA5<qYOJ4I[5U/u
%anYp*$<$^HSXrOA48ANe/gq(ZZ1no2WQ.qRFtmRXO(3SF!JonI+@NKgL@t@6NK1]TQ`OUsWhEj@3ect2$'hWb3WUFSbR.ReW3$p9
%;Kd3HeYe(<O=6bL,GYHb*[\'3ZOnr2m%TPU9;(LX;ZC5*>T\!U5n7Dm5eHTcX7'c3:C+@'f0s,3(?aoICm'8nihAOQP6\WL-Mb<'
%#nMkc8e=9?`F"D^@:(f\[8Ni[4gp`_P,5s=`G=0nI@hfP%#s;s-EWE=)6+]5O_Uj`FdmegY*QQ;pUe8+I6YlDV)0B3a!*S]D`6s8
%OVrMS:!>9oVQDgI.T-r@8P.s],5)^FUaT(Ybq\\Vn>lnIai??R[DK/P0n15=+LrTN>d/Cp(W&EgBn(R0]<P,f>#0(=]@Y6tLOA35
%4H#MF.H"^QEi+P,!>FY1ki8u%kq^Y;oa5n?`%)[2auR]ne@_OZ.I&24:^QnimT/-u&Mn,:J/rfN8k@lB-L[[/VFp'5Us529Hm8ih
%k'=1Cbk'E+6YFjul]=2hggX*.Qi&.VTTh"nW_'%0s!V#oFLAf?M2$jq9f2<V9Jl3U9Jl3U9IfKnjqZlTOQSu*#d7'K!ffOdHKWR.
%K,p(:kN(N%>>N6ed:(lpmoOB"FgY6&8S.QZ(jXLUWFO`$eo,2j0Rk&I17^/,YpSMh1Z.nscH\&*Fb.C%\O3_2N<SBheRse7kWL4I
%NlI,m#(,>P-d1TB+h(!OMY!lX!BL_EOPWpKgQ1#")k[]Z`ph_#X]nmLPun@F,\1dAm^3`OhScuf_s@-Ic)u]*l*.Z,5L%+>*pS(Z
%:"hQXUNDQ9$pll.Y)DT#E5c,%P@gkB4SWD!VT;"q^]uU[Sc715&L-5_\_jJ>3+H20h="4Kf2lWrX_]I5K=D8DOI93p9KA760YbR,
%JBH%u$B_qU[QKXNRc.Q<"*Pq+b`,q')D*O/IS[(5?>SgqU@DNFO@c*&j@%<g%pn'\Oh<YmIX''.-^jPMT3P/%%j<J"U\@k#f4#Sp
%8/beCm5.lJ%COC<5%g?`gZ<A2/K;_ud=PLT%5K!KJm38pl<*Do-!:=)A+hKl##-R_d#`-BU%jK$<5R=HeB'uZft^k6O>"`T+\PP&
%_8dnU.(tRV`clW_?eGSjUP-<o6^U5jq:%e;W"B0&>;;%V!1r,;CT<Z8^ioPe`bh@tZO+Z9+.!jU0)aBto'M4.HoFpPd:HIu8M=fh
%^I1Q'YUE3Ofo\DYceG(q/r+n&,$Q!I^e=cp2F>t[8lnR+bZ."ph2F$T5DDma(uD72Ri=hUcUL5s8>bRZPh?1WOsEEXa^17fZ@HXo
%6>?:CW:U0`2a1^XD]PI4LuA,L^\a+2ZV(NFOba:7(%@Gabt60B.,J\[X+rTk]/Ao/XW%d$lOY<k-GkHRIC/IUFH,6bZ62MNcLR[9
%4M"]/GE[AVQ7S"q-a%@PK0Jje$4ibacqb.F=e!gZ>nQqV"ZE+5%1:,f!kGL'd'k4d>7p\5aSdU&s)8"qe]Ro6A*&cIP&.poc,sIW
%5a(13]t6d,jlQ;c[o[p`-Z:.AlT6'2[PlON\L<X6WV<f%_B2+U.n=D5Dsc:smI+r[")mNB5NjHU8+PoJ_S%>c2<>=-JGptYPTpcr
%r;9-(mp3-kT==Nn0-'B9rU#!*^\RceJ,J-S^NoRmG@,f?Im4nOr4daOgFrTqDnc#3n]Pj"ok2&<pFj8Zo'VF>^ZJODq/>ksmXG&X
%QiI'^hgP+Xh7s!Un,@qTIWYG&TE"`ErO;gtX$?L]!<U3r.f~>
%AI9_PrivateDataEnd
